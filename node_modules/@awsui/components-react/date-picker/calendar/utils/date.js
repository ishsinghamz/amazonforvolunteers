export var isoToDisplay = function (value) { return value.replace(/-/g, '/'); };
export var displayToIso = function (value) { return value.replace(/\//g, '-'); };
export var daysInMonth = function (date) { return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(); };
var padLeftZeros = function (value, length) {
    while (value.length < length) {
        value = "0" + value;
    }
    return value;
};
export function parseDate(value, strict) {
    if (strict === void 0) { strict = false; }
    var _a = value.split('-'), year = _a[0], month = _a[1], day = _a[2];
    var y = Number(year);
    var m = Number(month);
    var d = Number(day);
    if (strict) {
        if (isNaN(y) || isNaN(m) || isNaN(d)) {
            return null;
        }
    }
    return new Date(y, (m || 1) - 1, d || 1);
}
export var formatDate = function (value) {
    var year = value.getFullYear();
    var month = padLeftZeros("" + (value.getMonth() + 1), 2);
    var date = padLeftZeros("" + value.getDate(), 2);
    return year + "-" + month + "-" + date;
};
export var formatTime = function (value) {
    var hours = padLeftZeros("" + value.getHours(), 2);
    var minutes = padLeftZeros("" + value.getMinutes(), 2);
    var seconds = padLeftZeros("" + value.getSeconds(), 2);
    return hours + ":" + minutes + ":" + seconds;
};
export function formatISOStringWithoutTimezone(dateString, timeString) {
    return dateString + "T" + timeString;
}
var memoCache = {};
export var memoizedDate = function (key, date) {
    var parsed = date && date.length >= 4 && parseDate(date);
    if (!(memoCache[key] && parsed && memoCache[key].getTime() === parsed.getTime())) {
        memoCache[key] = parsed;
    }
    return memoCache[key];
};
