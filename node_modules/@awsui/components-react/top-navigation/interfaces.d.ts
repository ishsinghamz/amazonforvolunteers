import { CancelableEventHandler } from '../internal/events';
import { BaseComponentProps } from '../internal/base-component';
import { IconProps } from '../icon/interfaces';
import { ButtonDropdownProps } from '../button-dropdown/interfaces';
export interface TopNavigationProps extends BaseComponentProps {
    identity: TopNavigationProps.Identity;
    search?: React.ReactNode;
    utilities?: ReadonlyArray<TopNavigationProps.Utility>;
    i18nStrings: TopNavigationProps.I18nStrings;
}
export declare namespace TopNavigationProps {
    export interface Identity {
        title?: string;
        logo?: Logo;
        href: string;
        onFollow?: CancelableEventHandler;
    }
    export interface Logo {
        src: string;
        alt?: string;
    }
    interface BaseUtility {
        text?: string;
        title?: string;
        iconName?: IconProps.Name;
        iconUrl?: string;
        iconAlt?: string;
        iconSvg?: React.ReactNode;
        ariaLabel?: string;
        badge?: boolean;
        disableUtilityCollapse?: boolean;
        disableTextCollapse?: boolean;
    }
    export interface MenuDropdownUtility extends BaseUtility {
        type: 'menu-dropdown';
        description?: string;
        items: ButtonDropdownProps.Items;
        onItemClick?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;
    }
    export interface ButtonUtility extends BaseUtility {
        type: 'button';
        variant?: 'primary-button' | 'link';
        onClick?: CancelableEventHandler;
        href?: string;
        external?: boolean;
        externalIconAriaLabel?: string;
    }
    export type Utility = MenuDropdownUtility | ButtonUtility;
    export interface I18nStrings {
        searchIconAriaLabel?: string;
        searchDismissIconAriaLabel?: string;
        overflowMenuDismissIconAriaLabel?: string;
        overflowMenuBackIconAriaLabel?: string;
        overflowMenuTriggerText: string;
        overflowMenuTitleText: string;
    }
    export {};
}
