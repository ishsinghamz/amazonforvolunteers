import { BaseComponentProps } from '../internal/base-component';
import { BaseKeyDetail, CancelableEventHandler, NonCancelableEventHandler } from '../internal/events';
import { FormFieldValidationControlProps } from '../internal/context/form-field-context';
export interface BaseInputProps {
    value: string;
    name?: string;
    placeholder?: string;
    disabled?: boolean;
    readOnly?: boolean;
    autoFocus?: boolean;
    disableBrowserAutocorrect?: boolean;
    ariaLabel?: string;
    ariaRequired?: boolean;
    onBlur?: NonCancelableEventHandler<null>;
    onFocus?: NonCancelableEventHandler<null>;
    onChange?: NonCancelableEventHandler<InputProps.ChangeDetail>;
}
export interface InputAutoComplete {
    autoComplete?: boolean | string;
}
export interface InputKeyEvents {
    onKeyDown?: CancelableEventHandler<InputProps.KeyDetail>;
    onKeyUp?: CancelableEventHandler<InputProps.KeyDetail>;
}
export interface InputProps extends BaseComponentProps, BaseInputProps, InputKeyEvents, InputAutoComplete, FormFieldValidationControlProps {
    type?: InputProps.Type;
    inputMode?: InputProps.InputMode;
    step?: InputProps.Step;
}
export declare namespace InputProps {
    type Type = 'text' | 'password' | 'search' | 'number' | 'email' | 'url';
    type InputMode = 'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url';
    type Step = number | 'any';
    type ChangeDetail = BaseChangeDetail;
    type KeyDetail = BaseKeyDetail;
    interface Ref {
        focus(): void;
        select(): void;
    }
}
export interface BaseChangeDetail {
    value: string;
}
