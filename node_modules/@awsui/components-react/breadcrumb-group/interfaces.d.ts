import { BaseNavigationDetail, CancelableEventHandler } from '../internal/events';
import { LinkItem } from '../button-dropdown/interfaces';
import { BaseComponentProps } from '../internal/base-component';
export interface BreadcrumbGroupProps<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item> extends BaseComponentProps {
    items: ReadonlyArray<T>;
    ariaLabel?: string;
    expandAriaLabel?: string;
    onClick?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;
    onFollow?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;
}
export declare namespace BreadcrumbGroupProps {
    interface Item {
        text: string;
        href: string;
    }
    interface ClickDetail<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item> extends BaseNavigationDetail {
        item: T;
        text: string;
        href: string;
    }
}
export interface BreadcrumbItemProps<T extends BreadcrumbGroupProps.Item> {
    item: T;
    isLast?: boolean;
    isCompressed?: boolean;
    onClick?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;
    onFollow?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;
}
export interface EllipsisDropdownProps {
    ariaLabel?: BreadcrumbGroupProps['expandAriaLabel'];
    dropdownItems: ReadonlyArray<LinkItem>;
    onDropdownItemClick: CancelableEventHandler<{
        id: string;
        event?: any;
    }>;
    onDropdownItemFollow: CancelableEventHandler<{
        id: string;
        event?: any;
    }>;
}
