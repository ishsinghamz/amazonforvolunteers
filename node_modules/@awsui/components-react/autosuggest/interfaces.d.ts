import React from 'react';
import { BaseComponentProps } from '../internal/base-component';
import { FormFieldValidationControlProps } from '../internal/context/form-field-context';
import { OptionDefinition } from '../internal/components/option/interfaces';
import { BaseDropdownHostProps, OptionsLoadItemsDetail, OptionsFilteringType } from '../internal/components/dropdown/interfaces';
import { DropdownStatusProps } from '../internal/components/dropdown-status';
import { BaseInputProps, InputKeyEvents, InputProps } from '../input/interfaces';
import { NonCancelableEventHandler } from '../internal/events';
export interface AutosuggestProps extends BaseComponentProps, BaseInputProps, BaseDropdownHostProps, InputKeyEvents, FormFieldValidationControlProps, DropdownStatusProps {
    options?: AutosuggestProps.Options;
    filteringType?: OptionsFilteringType;
    enteredTextLabel: AutosuggestProps.EnteredTextLabel;
    empty?: React.ReactNode;
    onSelect?: NonCancelableEventHandler<AutosuggestProps.SelectDetail>;
}
export declare namespace AutosuggestProps {
    type ChangeDetail = InputProps.ChangeDetail;
    type KeyDetail = InputProps.KeyDetail;
    type FilteringType = OptionsFilteringType;
    type Option = OptionDefinition;
    type Options = ReadonlyArray<Option | OptionGroup>;
    type EnteredTextLabel = (value: string) => string;
    interface OptionGroup extends Option {
        label?: string;
        options: ReadonlyArray<Option>;
    }
    type LoadItemsDetail = OptionsLoadItemsDetail;
    type StatusType = DropdownStatusProps.StatusType;
    interface SelectDetail {
        value: string;
    }
}
export declare type AutosuggestItem = (AutosuggestProps.Option | AutosuggestProps.OptionGroup) & {
    type?: 'parent' | 'child' | 'use-entered';
};
