import { useRef } from 'react';
import { generateUniqueId } from '../../internal/hooks/use-unique-id';
import defaultOptionDescription from '../../internal/components/option/option-announcer';
import { getParentGroup } from '../controller';
export var useItemLabel = function (highlightedOption) {
    var prevAnnouncedGroup = useRef(undefined);
    if (!highlightedOption) {
        prevAnnouncedGroup.current = undefined;
        return '';
    }
    var parentGroup;
    var currentParentGroup = getParentGroup(highlightedOption);
    if (currentParentGroup !== prevAnnouncedGroup.current) {
        prevAnnouncedGroup.current = currentParentGroup;
        parentGroup = currentParentGroup;
    }
    return defaultOptionDescription(highlightedOption, parentGroup);
};
export var useDropdownA11yProps = function (listId, expanded, inputAriaLabel, highlightedOption) {
    var itemProps = {};
    var inputProps = {
        role: 'combobox',
        'aria-autocomplete': 'list',
        'aria-expanded': expanded,
        'aria-controls': listId
    };
    if (inputAriaLabel) {
        inputProps['aria-label'] = inputAriaLabel;
    }
    var itemAriaLabel = useItemLabel(highlightedOption);
    if (highlightedOption) {
        var id = generateUniqueId();
        itemProps.id = id;
        inputProps['aria-activedescendant'] = id;
        if (itemAriaLabel) {
            itemProps['aria-label'] = itemAriaLabel;
        }
    }
    return [inputProps, itemProps];
};
