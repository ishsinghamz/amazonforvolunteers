import { __assign } from "tslib";
import { useRef } from 'react';
import { fireNonCancelableEvent } from '../internal/events/index';
export var useLoadItems = function (onLoadItems, focusFilteringText, currentFilteringProperty, currentFilteringText, currentFilteringOperator) {
    var focusIn = useRef(false);
    var handleBlur = function () {
        focusIn.current = true;
    };
    var fireLoadItems = function (detail) {
        var _a;
        fireNonCancelableEvent(onLoadItems, __assign(__assign({}, detail), { filteringText: (_a = currentFilteringText !== null && currentFilteringText !== void 0 ? currentFilteringText : detail.filteringText) !== null && _a !== void 0 ? _a : '', filteringProperty: currentFilteringProperty, filteringOperator: currentFilteringOperator }));
        focusIn.current = false;
    };
    var handleFocus = function () {
        if (focusIn.current) {
            fireLoadItems({ firstPage: true, samePage: false, filteringText: focusFilteringText });
        }
    };
    var handleLoadItems = function (_a) {
        var detail = _a.detail;
        return fireLoadItems(detail);
    };
    return {
        onBlur: handleBlur,
        onFocus: handleFocus,
        onLoadItems: handleLoadItems
    };
};
