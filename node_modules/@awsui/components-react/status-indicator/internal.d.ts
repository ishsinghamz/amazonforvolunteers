import React from 'react';
import { BaseComponentProps } from '../internal/base-component';
import { InternalBaseComponentProps } from '../internal/hooks/use-base-component';
import { IconProps } from '../icon/interfaces';
export interface StatusIndicatorProps extends BaseComponentProps {
    type?: StatusIndicatorProps.Type;
    children?: React.ReactNode;
    iconAriaLabel?: string;
    colorOverride?: StatusIndicatorProps.Color;
}
interface InternalStatusIndicatorProps extends StatusIndicatorProps, InternalBaseComponentProps {
    __uxdgInverted?: boolean;
    __animate?: boolean;
    __size?: IconProps.Size;
}
export declare namespace StatusIndicatorProps {
    type Type = 'error' | 'warning' | 'success' | 'info' | 'stopped' | 'pending' | 'in-progress' | 'loading';
    type Color = 'blue' | 'grey' | 'green' | 'red';
}
export default function StatusIndicator({ type, children, iconAriaLabel, colorOverride, __uxdgInverted, __animate, __internalRootRef, __size, ...rest }: InternalStatusIndicatorProps): JSX.Element;
export {};
