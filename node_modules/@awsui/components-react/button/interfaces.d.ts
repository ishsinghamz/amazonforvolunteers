import { BaseComponentProps } from '../internal/base-component';
import { IconProps } from '../icon/interfaces';
import React from 'react';
import { CancelableEventHandler, ClickDetail as _ClickDetail } from '../internal/events';
export interface ButtonProps extends BaseComponentProps {
    disabled?: boolean;
    loading?: boolean;
    iconName?: IconProps.Name;
    iconAlign?: ButtonProps.IconAlign;
    iconUrl?: string;
    iconSvg?: React.ReactNode;
    iconAlt?: string;
    formAction?: ButtonProps.FormAction;
    ariaLabel?: string;
    href?: string;
    target?: string;
    download?: boolean | string;
    wrapText?: boolean;
    variant?: ButtonProps.Variant;
    children?: React.ReactNode;
    onClick?: CancelableEventHandler<ButtonProps.ClickDetail>;
    onFollow?: CancelableEventHandler<null>;
}
export declare namespace ButtonProps {
    type Variant = 'normal' | 'primary' | 'link' | 'icon' | 'inline-icon';
    type ClickDetail = _ClickDetail;
    type FormAction = 'submit' | 'none';
    type IconAlign = 'left' | 'right';
    interface Ref {
        focus(options?: FocusOptions): void;
    }
}
