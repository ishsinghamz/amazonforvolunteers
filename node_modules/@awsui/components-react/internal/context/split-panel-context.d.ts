import React from 'react';
export declare type SplitPanelLastInteraction = {
    type: 'open';
} | {
    type: 'close';
} | {
    type: 'position';
};
export interface SplitPanelContextProps {
    topOffset: number;
    bottomOffset: number;
    leftOffset: number;
    rightOffset: number;
    position: 'side' | 'bottom';
    size: number;
    getMaxWidth: () => number;
    getMaxHeight: () => number;
    disableContentPaddings?: boolean;
    contentWidthStyles?: React.CSSProperties;
    contentWrapperPaddings?: {
        closedNav: boolean;
        closedTools: boolean;
    };
    isCopy?: boolean;
    isOpen?: boolean;
    isMobile: boolean;
    isRefresh: boolean;
    isForcedPosition: boolean;
    lastInteraction?: SplitPanelLastInteraction;
    splitPanelRef?: React.MutableRefObject<any>;
    splitPanelHeaderRef?: React.MutableRefObject<any>;
    onResize: (detail: {
        size: number;
    }) => void;
    onToggle: () => void;
    onPreferencesChange: (detail: {
        position: 'side' | 'bottom';
    }) => void;
    reportSize: (pixels: number) => void;
    openButtonAriaLabel?: string;
    setOpenButtonAriaLabel?: (value: string) => void;
}
export declare const SplitPanelContext: React.Context<SplitPanelContextProps>;
export declare function useSplitPanelContext(): SplitPanelContextProps;
