import { useCallback, useEffect, useRef } from 'react';
export function useStableEventHandler(fn) {
    var ref = useRef();
    useEffect(function () {
        ref.current = fn;
    });
    return useCallback(function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(undefined, args);
    }, []);
}
