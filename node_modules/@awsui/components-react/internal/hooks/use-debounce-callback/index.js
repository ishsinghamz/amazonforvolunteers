import { useCallback, useRef } from 'react';
import debounce from '../../debounce';
export function useDebounceCallback(callback, delay) {
    var callbackRef = useRef();
    callbackRef.current = callback;
    return useCallback(debounce((function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (callbackRef.current) {
            callbackRef.current.apply(callbackRef, args);
        }
    }), delay), []);
}
