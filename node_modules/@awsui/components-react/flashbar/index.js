import { __assign, __rest } from "tslib";
import clsx from 'clsx';
import React from 'react';
import mergeRefs from 'react-merge-refs';
import { getBaseProps } from '../internal/base-component';
import styles from './styles.css.js';
import { Flash } from './flash';
import { useContainerBreakpoints } from '../internal/hooks/container-queries';
import { applyDisplayName } from '../internal/utils/apply-display-name';
import VisualContext from '../internal/components/visual-context';
import useBaseComponent from '../internal/hooks/use-base-component';
import { useVisualRefresh } from '../internal/hooks/use-visual-mode';
export default function Flashbar(_a) {
    var items = _a.items, restProps = __rest(_a, ["items"]);
    var __internalRootRef = useBaseComponent('Flashbar').__internalRootRef;
    var _b = useContainerBreakpoints(['xs']), breakpoint = _b[0], ref = _b[1];
    var isRefresh = useVisualRefresh(__internalRootRef);
    var baseProps = getBaseProps(restProps);
    return (React.createElement("div", __assign({}, baseProps, { className: clsx(baseProps.className, styles.flashbar, styles["breakpoint-" + breakpoint]), ref: mergeRefs([ref, __internalRootRef]) }),
        React.createElement(VisualContext, { contextName: "flashbar" }, items &&
            items.map(function (item, index) { return (React.createElement(Flash, __assign({ key: index, className: isRefresh ? styles['flash-refresh'] : '' }, item))); }))));
}
applyDisplayName(Flashbar, 'Flashbar');
