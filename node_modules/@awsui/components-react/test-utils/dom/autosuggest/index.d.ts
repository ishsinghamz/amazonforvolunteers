import { ElementWrapper, ComponentWrapper } from '@awsui/test-utils-core/dom';
import InputWrapper from '../input';
import OptionWrapper from '../internal/option';
export declare class AutosuggestDropdownWrapper extends ComponentWrapper {
    findOptions(): Array<OptionWrapper>;
    findOption(optionIndex: number): OptionWrapper | null;
    findOptionByValue(value: string): OptionWrapper | null;
    findOptionInGroup(groupIndex: number, optionIndex: number): OptionWrapper | null;
    findOptionsContainer(): ElementWrapper | null;
    findFooterRegion(): ElementWrapper | null;
    findOpenDropdown(): ElementWrapper | null;
    findHighlightedOption(): OptionWrapper | null;
    findDisabledOptions(): Array<OptionWrapper>;
    findHighlightedMatches(): Array<ElementWrapper>;
    findHighlightedAriaLiveRegion(): ElementWrapper | null;
}
export declare class PortalAutosuggestDropdownWrapper extends AutosuggestDropdownWrapper {
    findOpenDropdown(): ElementWrapper | null;
}
export default class AutosuggestWrapper extends InputWrapper {
    static rootSelector: string;
    findDropdown(options?: {
        expandToViewport: boolean;
    }): AutosuggestDropdownWrapper;
    findStatusIndicator(options?: {
        expandToViewport: boolean;
    }): ElementWrapper | null;
    findErrorRecoveryButton(options?: {
        expandToViewport: boolean;
    }): ElementWrapper | null;
    findEnteredTextOption(options?: {
        expandToViewport: boolean;
    }): ElementWrapper | null;
    selectSuggestion(index: number, options?: {
        expandToViewport: boolean;
    }): void;
    selectSuggestionByValue(value: string, options?: {
        expandToViewport: boolean;
    }): void;
}
