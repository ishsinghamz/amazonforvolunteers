import { ComponentWrapper, ElementWrapper } from '@awsui/test-utils-core/dom';
import OptionWrapper from './option';
export default abstract class DropdownHostComponentWrapper extends ComponentWrapper {
    abstract findTrigger(): ElementWrapper;
    private assertOpenDropdown;
    findDropdown(options?: {
        expandToViewport: boolean;
    }): DropdownContentWrapper;
    openDropdown(): void;
    closeDropdown(options?: {
        expandToViewport: boolean;
    }): void;
    selectOption(index: number, options?: {
        expandToViewport: boolean;
    }): void;
    selectOptionByValue(value: string, options?: {
        expandToViewport: boolean;
    }): void;
}
export declare class DropdownContentWrapper extends ComponentWrapper {
    findDisabledOptions(): Array<OptionWrapper>;
    findFooterRegion(): ElementWrapper | null;
    findHighlightedAriaLiveRegion(): ElementWrapper | null;
    findHighlightedMatches(): Array<ElementWrapper>;
    findHighlightedOption(): OptionWrapper | null;
    findOpenDropdown(): ElementWrapper | null;
    findOption(optionIndex: number): OptionWrapper | null;
    findOptionByValue(value: string): OptionWrapper | null;
    findOptionInGroup(groupIndex: number, optionIndex: number): OptionWrapper | null;
    findOptions(): Array<OptionWrapper>;
    findOptionsContainer(): ElementWrapper | null;
    findSelectedOptions(): Array<OptionWrapper>;
}
export declare class PortalDropdownContentWrapper extends DropdownContentWrapper {
    findOpenDropdown(): ElementWrapper | null;
}
