import { ComponentWrapper, ElementWrapper } from "@awsui/test-utils-core/selectors";
import DropdownWrapper from './dropdown';
import OptionWrapper from './option';
export default abstract class DropdownHostComponentWrapper extends ComponentWrapper {
    abstract findTrigger(): ElementWrapper;
    private assertOpenDropdown;
    findDropdown(options?: {
        expandToViewport: boolean;
    }): DropdownContentWrapper;
}
export declare class DropdownContentWrapper extends ComponentWrapper {
    findDisabledOptions(): import("@awsui/test-utils-core/selectors").MultiElementWrapper<OptionWrapper>;
    findFooterRegion(): ElementWrapper;
    findHighlightedAriaLiveRegion(): ElementWrapper;
    findHighlightedMatches(): import("@awsui/test-utils-core/selectors").MultiElementWrapper<ElementWrapper>;
    findHighlightedOption(): OptionWrapper;
    findOpenDropdown(): ElementWrapper;
    findOption(optionIndex: number): OptionWrapper;
    findOptionByValue(value: string): OptionWrapper;
    findOptionInGroup(groupIndex: number, optionIndex: number): OptionWrapper;
    findOptions(): import("@awsui/test-utils-core/selectors").MultiElementWrapper<OptionWrapper>;
    findOptionsContainer(): ElementWrapper;
    findSelectedOptions(): import("@awsui/test-utils-core/selectors").MultiElementWrapper<OptionWrapper>;
}
export declare class PortalDropdownContentWrapper extends DropdownContentWrapper {
    findOpenDropdown(): DropdownWrapper;
}
