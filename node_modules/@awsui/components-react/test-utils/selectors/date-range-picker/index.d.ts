import { ComponentWrapper, ElementWrapper } from "@awsui/test-utils-core/selectors";
import SelectWrapper from '../select';
import ButtonWrapper from '../button';
import RadioGroupWrapper from '../radio-group';
import InputWrapper from '../input';
import SegmentedControlWrapper from '../segmented-control';
export default class DateRangePickerWrapper extends ComponentWrapper {
    static rootSelector: string;
    findLabel(): ElementWrapper;
    findTrigger(): ElementWrapper;
    findDropdown(options?: {
        expandToViewport: boolean;
    }): DrpDropdownWrapper;
}
export declare class SelectionModeSwitchWrapper extends ElementWrapper {
    findModesAsSegments(): SegmentedControlWrapper;
    findModesAsSelect(): SelectWrapper;
}
export declare class DrpDropdownWrapper extends ComponentWrapper {
    findSelectionModeSwitch(): SelectionModeSwitchWrapper;
    findValidationError(): ElementWrapper;
    findRelativeRangeRadioGroup(): RadioGroupWrapper;
    findCustomRelativeRangeDuration(): InputWrapper;
    findCustomRelativeRangeUnit(): SelectWrapper;
    findHeader(): ElementWrapper;
    findPreviousMonthButton(): ButtonWrapper;
    findNextMonthButton(): ButtonWrapper;
    findDateAt(grid: 'left' | 'right', row: 1 | 2 | 3 | 4 | 5 | 6, column: 1 | 2 | 3 | 4 | 5 | 6 | 7): ElementWrapper;
    findSelectedStartDate(): ElementWrapper;
    findSelectedEndDate(): ElementWrapper;
    findStartDateInput(): InputWrapper;
    findStartTimeInput(): InputWrapper;
    findEndDateInput(): InputWrapper;
    findEndTimeInput(): InputWrapper;
    findClearButton(): ButtonWrapper;
    findCancelButton(): ButtonWrapper;
    findApplyButton(): ButtonWrapper;
}
