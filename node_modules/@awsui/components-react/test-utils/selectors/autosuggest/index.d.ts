import { ElementWrapper, ComponentWrapper } from "@awsui/test-utils-core/selectors";
import InputWrapper from '../input';
import OptionWrapper from '../internal/option';
export declare class AutosuggestDropdownWrapper extends ComponentWrapper {
    findOptions(): import("@awsui/test-utils-core/selectors").MultiElementWrapper<OptionWrapper>;
    findOption(optionIndex: number): OptionWrapper;
    findOptionByValue(value: string): OptionWrapper;
    findOptionInGroup(groupIndex: number, optionIndex: number): OptionWrapper;
    findOptionsContainer(): ElementWrapper;
    findFooterRegion(): ElementWrapper;
    findOpenDropdown(): ElementWrapper;
    findHighlightedOption(): OptionWrapper;
    findDisabledOptions(): import("@awsui/test-utils-core/selectors").MultiElementWrapper<OptionWrapper>;
    findHighlightedMatches(): import("@awsui/test-utils-core/selectors").MultiElementWrapper<ElementWrapper>;
    findHighlightedAriaLiveRegion(): ElementWrapper;
}
export declare class PortalAutosuggestDropdownWrapper extends AutosuggestDropdownWrapper {
    findOpenDropdown(): ElementWrapper;
}
export default class AutosuggestWrapper extends InputWrapper {
    static rootSelector: string;
    findDropdown(options?: {
        expandToViewport: boolean;
    }): AutosuggestDropdownWrapper;
    findStatusIndicator(options?: {
        expandToViewport: boolean;
    }): ElementWrapper;
    findErrorRecoveryButton(options?: {
        expandToViewport: boolean;
    }): ElementWrapper;
    findEnteredTextOption(options?: {
        expandToViewport: boolean;
    }): ElementWrapper;
}
