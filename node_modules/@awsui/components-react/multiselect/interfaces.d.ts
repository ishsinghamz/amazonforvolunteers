import { OptionDefinition, OptionGroup as OptionGroupDefinition } from '../internal/components/option/interfaces';
import { NonCancelableEventHandler } from '../internal/events';
import { BaseSelectProps } from '../select/interfaces';
export interface MultiselectProps extends BaseSelectProps {
    selectedOptions: ReadonlyArray<MultiselectProps.Option>;
    keepOpen?: boolean;
    tokenLimit?: number;
    hideTokens?: boolean;
    deselectAriaLabel?: MultiselectProps.DeselectAriaLabelFunction;
    i18nStrings?: MultiselectProps.I18nStrings;
    onChange?: NonCancelableEventHandler<MultiselectProps.MultiselectChangeDetail>;
}
export declare namespace MultiselectProps {
    type Option = OptionDefinition;
    type OptionGroup = OptionGroupDefinition;
    type Options = ReadonlyArray<Option | OptionGroup>;
    type DeselectAriaLabelFunction = (option: Option) => string;
    interface I18nStrings {
        tokenLimitShowFewer?: string;
        tokenLimitShowMore?: string;
    }
    interface MultiselectChangeDetail {
        selectedOptions: ReadonlyArray<Option>;
    }
    interface Ref {
        focus(): void;
    }
}
