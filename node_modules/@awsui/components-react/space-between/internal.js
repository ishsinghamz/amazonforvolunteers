import { __assign, __rest } from "tslib";
import clsx from 'clsx';
import React from 'react';
import { getBaseProps } from '../internal/base-component';
import styles from './styles.css.js';
import flattenChildren from 'react-keyed-flatten-children';
export default function InternalSpaceBetween(_a) {
    var _b = _a.direction, direction = _b === void 0 ? 'vertical' : _b, size = _a.size, children = _a.children, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["direction", "size", "children", "__internalRootRef"]);
    var baseProps = getBaseProps(props);
    var flattenedChildren = flattenChildren(children);
    return (React.createElement("div", __assign({}, baseProps, { className: clsx(baseProps.className, styles.root, styles[direction], styles[direction + "-" + size]), ref: __internalRootRef }), flattenedChildren.map(function (child) {
        var key = child.key;
        return (React.createElement("div", { key: key, className: clsx(styles.child, styles["child-" + direction + "-" + size]) }, child));
    })));
}
