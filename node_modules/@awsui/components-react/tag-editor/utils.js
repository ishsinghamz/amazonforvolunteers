import { __spreadArray } from "tslib";
import { useEffect, useRef } from 'react';
export function findIndex(array, condition) {
    for (var i = 0; i < array.length; i++) {
        if (condition(array[i])) {
            return i;
        }
    }
    return -1;
}
function makeMemoizedArray(prev, next, isEqual) {
    for (var i = 0; i < Math.max(prev.length, next.length); i++) {
        if (i === next.length) {
            return prev.slice(0, i);
        }
        if (i === prev.length) {
            return __spreadArray(__spreadArray([], prev.slice(0, i), true), next.slice(i), true);
        }
        if (!isEqual(prev[i], next[i])) {
            return __spreadArray(__spreadArray(__spreadArray([], prev.slice(0, i), true), [next[i]], false), makeMemoizedArray(prev.slice(i + 1), next.slice(i + 1), isEqual), true);
        }
    }
    return prev;
}
export function useMemoizedArray(array, isEqual) {
    var ref = useRef(array);
    var updated = makeMemoizedArray(ref.current, array, isEqual);
    useEffect(function () {
        ref.current = updated;
    }, [updated]);
    return updated;
}
