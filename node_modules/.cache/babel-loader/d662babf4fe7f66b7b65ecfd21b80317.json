{"ast":null,"code":"import React, { memo, useEffect, useRef } from 'react';\nimport styles from './styles.css.js';\nexport default memo(LiveRegion);\n\nfunction LiveRegion(_a) {\n  var _b = _a.assertive,\n      assertive = _b === void 0 ? false : _b,\n      _c = _a.delay,\n      delay = _c === void 0 ? 10 : _c,\n      children = _a.children;\n  var sourceRef = useRef(null);\n  var targetRef = useRef(null);\n  useEffect(function () {\n    function updateLiveRegion() {\n      if (targetRef.current && sourceRef.current) {\n        var sourceContent = extractInnerText(sourceRef.current);\n        var targetContent = extractInnerText(targetRef.current);\n\n        if (targetContent !== sourceContent) {\n          targetRef.current.innerText = sourceContent;\n        }\n      }\n    }\n\n    var timeoutId;\n\n    if (delay) {\n      timeoutId = setTimeout(updateLiveRegion, delay);\n    } else {\n      updateLiveRegion();\n    }\n\n    return function () {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  });\n  return React.createElement(\"div\", {\n    className: styles.root\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, React.createElement(\"span\", {\n    ref: sourceRef\n  }, children)), React.createElement(\"span\", {\n    ref: targetRef,\n    \"aria-atomic\": \"true\",\n    \"aria-live\": assertive ? 'assertive' : 'polite'\n  }));\n}\n\nfunction extractInnerText(node) {\n  return (node.innerText || '').replace(/\\s+/g, ' ').trim();\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/live-region/index.js"],"names":["React","memo","useEffect","useRef","styles","LiveRegion","_a","_b","assertive","_c","delay","children","sourceRef","targetRef","updateLiveRegion","current","sourceContent","extractInnerText","targetContent","innerText","timeoutId","setTimeout","clearTimeout","createElement","className","root","ref","node","replace","trim"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,eAAeH,IAAI,CAACI,UAAD,CAAnB;;AACA,SAASA,UAAT,CAAoBC,EAApB,EAAwB;AACpB,MAAIC,EAAE,GAAGD,EAAE,CAACE,SAAZ;AAAA,MAAuBA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3D;AAAA,MAA+DE,EAAE,GAAGH,EAAE,CAACI,KAAvE;AAAA,MAA8EA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA3G;AAAA,MAA+GE,QAAQ,GAAGL,EAAE,CAACK,QAA7H;AACA,MAAIC,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAtB;AACA,MAAIU,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAtB;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClB,aAASY,gBAAT,GAA4B;AACxB,UAAID,SAAS,CAACE,OAAV,IAAqBH,SAAS,CAACG,OAAnC,EAA4C;AACxC,YAAIC,aAAa,GAAGC,gBAAgB,CAACL,SAAS,CAACG,OAAX,CAApC;AACA,YAAIG,aAAa,GAAGD,gBAAgB,CAACJ,SAAS,CAACE,OAAX,CAApC;;AACA,YAAIG,aAAa,KAAKF,aAAtB,EAAqC;AACjCH,UAAAA,SAAS,CAACE,OAAV,CAAkBI,SAAlB,GAA8BH,aAA9B;AACH;AACJ;AACJ;;AACD,QAAII,SAAJ;;AACA,QAAIV,KAAJ,EAAW;AACPU,MAAAA,SAAS,GAAGC,UAAU,CAACP,gBAAD,EAAmBJ,KAAnB,CAAtB;AACH,KAFD,MAGK;AACDI,MAAAA,gBAAgB;AACnB;;AACD,WAAO,YAAY;AACf,UAAIM,SAAJ,EAAe;AACXE,QAAAA,YAAY,CAACF,SAAD,CAAZ;AACH;AACJ,KAJD;AAKH,GAtBQ,CAAT;AAuBA,SAAQpB,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAEpB,MAAM,CAACqB;AAApB,GAA3B,EACJzB,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAAE,mBAAe;AAAjB,GAA5B,EACIvB,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAAEG,IAAAA,GAAG,EAAEd;AAAP,GAA5B,EAAgDD,QAAhD,CADJ,CADI,EAGJX,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAAEG,IAAAA,GAAG,EAAEb,SAAP;AAAkB,mBAAe,MAAjC;AAAyC,iBAAaL,SAAS,GAAG,WAAH,GAAiB;AAAhF,GAA5B,CAHI,CAAR;AAIH;;AACD,SAASS,gBAAT,CAA0BU,IAA1B,EAAgC;AAC5B,SAAO,CAACA,IAAI,CAACR,SAAL,IAAkB,EAAnB,EAAuBS,OAAvB,CAA+B,MAA/B,EAAuC,GAAvC,EAA4CC,IAA5C,EAAP;AACH","sourcesContent":["import React, { memo, useEffect, useRef } from 'react';\nimport styles from './styles.css.js';\nexport default memo(LiveRegion);\nfunction LiveRegion(_a) {\n    var _b = _a.assertive, assertive = _b === void 0 ? false : _b, _c = _a.delay, delay = _c === void 0 ? 10 : _c, children = _a.children;\n    var sourceRef = useRef(null);\n    var targetRef = useRef(null);\n    useEffect(function () {\n        function updateLiveRegion() {\n            if (targetRef.current && sourceRef.current) {\n                var sourceContent = extractInnerText(sourceRef.current);\n                var targetContent = extractInnerText(targetRef.current);\n                if (targetContent !== sourceContent) {\n                    targetRef.current.innerText = sourceContent;\n                }\n            }\n        }\n        var timeoutId;\n        if (delay) {\n            timeoutId = setTimeout(updateLiveRegion, delay);\n        }\n        else {\n            updateLiveRegion();\n        }\n        return function () {\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n            }\n        };\n    });\n    return (React.createElement(\"div\", { className: styles.root },\n        React.createElement(\"span\", { \"aria-hidden\": \"true\" },\n            React.createElement(\"span\", { ref: sourceRef }, children)),\n        React.createElement(\"span\", { ref: targetRef, \"aria-atomic\": \"true\", \"aria-live\": assertive ? 'assertive' : 'polite' })));\n}\nfunction extractInnerText(node) {\n    return (node.innerText || '').replace(/\\s+/g, ' ').trim();\n}\n"]},"metadata":{},"sourceType":"module"}