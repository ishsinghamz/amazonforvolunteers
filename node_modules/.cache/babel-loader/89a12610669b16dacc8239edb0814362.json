{"ast":null,"code":"import * as React from 'react';\nimport { isDevelopment } from '../../is-development';\nimport { warnOnce } from '../../logging';\nexport function useControllable(controlledValue, handler, defaultValue, _a) {\n  var componentName = _a.componentName,\n      changeHandler = _a.changeHandler,\n      controlledProp = _a.controlledProp;\n  var isControlled = React.useState(controlledValue !== undefined)[0];\n\n  if (isDevelopment) {\n    React.useEffect(function () {\n      if (isControlled && handler === undefined) {\n        warnOnce(componentName, \"You provided a `\" + controlledProp + \"` prop without an `\" + changeHandler + \"` handler. This will render a non-interactive component.\");\n      }\n    }, [handler, isControlled, componentName, changeHandler, controlledProp]);\n    React.useEffect(function () {\n      var isControlledNow = controlledValue !== undefined;\n\n      if (isControlled !== isControlledNow) {\n        var initialMode = isControlled ? 'controlled' : 'uncontrolled';\n        var modeNow = isControlledNow ? 'controlled' : 'uncontrolled';\n        warnOnce(componentName, \"A component tried to change \" + initialMode + \" '\" + controlledProp + \"' property to be \" + modeNow + \". \" + (\"This is not supported. Properties should not switch from \" + initialMode + \" to \" + modeNow + \" (or vice versa). \") + \"Decide between using a controlled or uncontrolled mode for the lifetime of the component. \" + \"More info: https://fb.me/react-controlled-components\");\n      }\n    }, [isControlled, controlledProp, componentName, controlledValue]);\n  }\n\n  var _b = React.useState(defaultValue),\n      valueState = _b[0],\n      setValue = _b[1];\n\n  var _c = React.useState(false),\n      valueHasBeenSet = _c[0],\n      setValueHasBeenSet = _c[1];\n\n  var currentUncontrolledValue = valueHasBeenSet ? valueState : defaultValue;\n  var setUncontrolledValue = React.useCallback(function (newValue) {\n    setValue(newValue);\n    setValueHasBeenSet(true);\n  }, [setValue, setValueHasBeenSet]);\n\n  if (isControlled) {\n    return [controlledValue, defaultCallback];\n  } else {\n    return [currentUncontrolledValue, setUncontrolledValue];\n  }\n}\n\nfunction defaultCallback() {\n  return void 0;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/hooks/use-controllable/index.js"],"names":["React","isDevelopment","warnOnce","useControllable","controlledValue","handler","defaultValue","_a","componentName","changeHandler","controlledProp","isControlled","useState","undefined","useEffect","isControlledNow","initialMode","modeNow","_b","valueState","setValue","_c","valueHasBeenSet","setValueHasBeenSet","currentUncontrolledValue","setUncontrolledValue","useCallback","newValue","defaultCallback"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,SAASC,eAAT,CAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,YAAnD,EAAiEC,EAAjE,EAAqE;AACxE,MAAIC,aAAa,GAAGD,EAAE,CAACC,aAAvB;AAAA,MAAsCC,aAAa,GAAGF,EAAE,CAACE,aAAzD;AAAA,MAAwEC,cAAc,GAAGH,EAAE,CAACG,cAA5F;AACA,MAAIC,YAAY,GAAGX,KAAK,CAACY,QAAN,CAAeR,eAAe,KAAKS,SAAnC,EAA8C,CAA9C,CAAnB;;AACA,MAAIZ,aAAJ,EAAmB;AACfD,IAAAA,KAAK,CAACc,SAAN,CAAgB,YAAY;AACxB,UAAIH,YAAY,IAAIN,OAAO,KAAKQ,SAAhC,EAA2C;AACvCX,QAAAA,QAAQ,CAACM,aAAD,EAAgB,qBAAqBE,cAArB,GAAsC,qBAAtC,GAA8DD,aAA9D,GAA8E,0DAA9F,CAAR;AACH;AACJ,KAJD,EAIG,CAACJ,OAAD,EAAUM,YAAV,EAAwBH,aAAxB,EAAuCC,aAAvC,EAAsDC,cAAtD,CAJH;AAKAV,IAAAA,KAAK,CAACc,SAAN,CAAgB,YAAY;AACxB,UAAIC,eAAe,GAAGX,eAAe,KAAKS,SAA1C;;AACA,UAAIF,YAAY,KAAKI,eAArB,EAAsC;AAClC,YAAIC,WAAW,GAAGL,YAAY,GAAG,YAAH,GAAkB,cAAhD;AACA,YAAIM,OAAO,GAAGF,eAAe,GAAG,YAAH,GAAkB,cAA/C;AACAb,QAAAA,QAAQ,CAACM,aAAD,EAAgB,iCAAiCQ,WAAjC,GAA+C,IAA/C,GAAsDN,cAAtD,GAAuE,mBAAvE,GAA6FO,OAA7F,GAAuG,IAAvG,IACnB,8DAA8DD,WAA9D,GAA4E,MAA5E,GAAqFC,OAArF,GAA+F,oBAD5E,IAEpB,4FAFoB,GAGpB,sDAHI,CAAR;AAIH;AACJ,KAVD,EAUG,CAACN,YAAD,EAAeD,cAAf,EAA+BF,aAA/B,EAA8CJ,eAA9C,CAVH;AAWH;;AACD,MAAIc,EAAE,GAAGlB,KAAK,CAACY,QAAN,CAAeN,YAAf,CAAT;AAAA,MAAuCa,UAAU,GAAGD,EAAE,CAAC,CAAD,CAAtD;AAAA,MAA2DE,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAAxE;;AACA,MAAIG,EAAE,GAAGrB,KAAK,CAACY,QAAN,CAAe,KAAf,CAAT;AAAA,MAAgCU,eAAe,GAAGD,EAAE,CAAC,CAAD,CAApD;AAAA,MAAyDE,kBAAkB,GAAGF,EAAE,CAAC,CAAD,CAAhF;;AACA,MAAIG,wBAAwB,GAAGF,eAAe,GAAGH,UAAH,GAAgBb,YAA9D;AACA,MAAImB,oBAAoB,GAAGzB,KAAK,CAAC0B,WAAN,CAAkB,UAAUC,QAAV,EAAoB;AAC7DP,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACAJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAH0B,EAGxB,CAACH,QAAD,EAAWG,kBAAX,CAHwB,CAA3B;;AAIA,MAAIZ,YAAJ,EAAkB;AACd,WAAO,CAACP,eAAD,EAAkBwB,eAAlB,CAAP;AACH,GAFD,MAGK;AACD,WAAO,CAACJ,wBAAD,EAA2BC,oBAA3B,CAAP;AACH;AACJ;;AACD,SAASG,eAAT,GAA2B;AACvB,SAAO,KAAK,CAAZ;AACH","sourcesContent":["import * as React from 'react';\nimport { isDevelopment } from '../../is-development';\nimport { warnOnce } from '../../logging';\nexport function useControllable(controlledValue, handler, defaultValue, _a) {\n    var componentName = _a.componentName, changeHandler = _a.changeHandler, controlledProp = _a.controlledProp;\n    var isControlled = React.useState(controlledValue !== undefined)[0];\n    if (isDevelopment) {\n        React.useEffect(function () {\n            if (isControlled && handler === undefined) {\n                warnOnce(componentName, \"You provided a `\" + controlledProp + \"` prop without an `\" + changeHandler + \"` handler. This will render a non-interactive component.\");\n            }\n        }, [handler, isControlled, componentName, changeHandler, controlledProp]);\n        React.useEffect(function () {\n            var isControlledNow = controlledValue !== undefined;\n            if (isControlled !== isControlledNow) {\n                var initialMode = isControlled ? 'controlled' : 'uncontrolled';\n                var modeNow = isControlledNow ? 'controlled' : 'uncontrolled';\n                warnOnce(componentName, \"A component tried to change \" + initialMode + \" '\" + controlledProp + \"' property to be \" + modeNow + \". \" +\n                    (\"This is not supported. Properties should not switch from \" + initialMode + \" to \" + modeNow + \" (or vice versa). \") +\n                    \"Decide between using a controlled or uncontrolled mode for the lifetime of the component. \" +\n                    \"More info: https://fb.me/react-controlled-components\");\n            }\n        }, [isControlled, controlledProp, componentName, controlledValue]);\n    }\n    var _b = React.useState(defaultValue), valueState = _b[0], setValue = _b[1];\n    var _c = React.useState(false), valueHasBeenSet = _c[0], setValueHasBeenSet = _c[1];\n    var currentUncontrolledValue = valueHasBeenSet ? valueState : defaultValue;\n    var setUncontrolledValue = React.useCallback(function (newValue) {\n        setValue(newValue);\n        setValueHasBeenSet(true);\n    }, [setValue, setValueHasBeenSet]);\n    if (isControlled) {\n        return [controlledValue, defaultCallback];\n    }\n    else {\n        return [currentUncontrolledValue, setUncontrolledValue];\n    }\n}\nfunction defaultCallback() {\n    return void 0;\n}\n"]},"metadata":{},"sourceType":"module"}