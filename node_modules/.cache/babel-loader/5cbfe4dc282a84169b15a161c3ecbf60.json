{"ast":null,"code":"import React, { memo, useEffect, useRef } from 'react';\nexport default memo(ResponsiveText);\n\nfunction ResponsiveText(_a) {\n  var x = _a.x,\n      y = _a.y,\n      rightSide = _a.rightSide,\n      className = _a.className,\n      children = _a.children,\n      containerBoundaries = _a.containerBoundaries;\n  var actualRef = useRef(null);\n  var virtualRef = useRef(null);\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      var groupRect = virtualRef.current.getBoundingClientRect();\n      var visibleWidth = containerBoundaries ? getVisibleWidth(groupRect, containerBoundaries) : 0;\n      renderTextContent(actualRef.current, children, visibleWidth);\n    }, 25);\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"text\", {\n    ref: virtualRef,\n    x: x,\n    y: y,\n    style: {\n      textAnchor: rightSide ? 'start' : 'end',\n      visibility: 'hidden'\n    },\n    \"aria-hidden\": \"true\",\n    className: className\n  }, children), React.createElement(\"text\", {\n    ref: actualRef,\n    x: x,\n    y: y,\n    style: {\n      textAnchor: rightSide ? 'start' : 'end'\n    },\n    className: className\n  }, children));\n}\n\nfunction getVisibleWidth(element, container) {\n  if (element.left < container.left) {\n    return element.right - container.left;\n  } else if (element.right > container.right) {\n    return container.right - element.left;\n  } else {\n    return container.right - container.left;\n  }\n}\n\nfunction renderTextContent(textNode, text, visibleWidth) {\n  var visibleLength = text.length;\n\n  while (visibleLength >= 0) {\n    textNode.textContent = truncateText(text, visibleLength);\n\n    if (textNode.getComputedTextLength() <= visibleWidth) {\n      return;\n    } else {\n      visibleLength--;\n    }\n  }\n}\n\nfunction truncateText(text, maxLength) {\n  if (text.length === maxLength) {\n    return text;\n  }\n\n  return text.slice(0, maxLength) + '…';\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/pie-chart/responsive-text.js"],"names":["React","memo","useEffect","useRef","ResponsiveText","_a","x","y","rightSide","className","children","containerBoundaries","actualRef","virtualRef","timeoutId","setTimeout","groupRect","current","getBoundingClientRect","visibleWidth","getVisibleWidth","renderTextContent","clearTimeout","createElement","Fragment","ref","style","textAnchor","visibility","element","container","left","right","textNode","text","visibleLength","length","textContent","truncateText","getComputedTextLength","maxLength","slice"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef } from 'react';\nexport default memo(ResponsiveText);\nfunction ResponsiveText(_a) {\n    var x = _a.x, y = _a.y, rightSide = _a.rightSide, className = _a.className, children = _a.children, containerBoundaries = _a.containerBoundaries;\n    var actualRef = useRef(null);\n    var virtualRef = useRef(null);\n    useEffect(function () {\n        var timeoutId = setTimeout(function () {\n            var groupRect = virtualRef.current.getBoundingClientRect();\n            var visibleWidth = containerBoundaries ? getVisibleWidth(groupRect, containerBoundaries) : 0;\n            renderTextContent(actualRef.current, children, visibleWidth);\n        }, 25);\n        return function () { return clearTimeout(timeoutId); };\n    });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"text\", { ref: virtualRef, x: x, y: y, style: { textAnchor: rightSide ? 'start' : 'end', visibility: 'hidden' }, \"aria-hidden\": \"true\", className: className }, children),\n        React.createElement(\"text\", { ref: actualRef, x: x, y: y, style: { textAnchor: rightSide ? 'start' : 'end' }, className: className }, children)));\n}\nfunction getVisibleWidth(element, container) {\n    if (element.left < container.left) {\n        return element.right - container.left;\n    }\n    else if (element.right > container.right) {\n        return container.right - element.left;\n    }\n    else {\n        return container.right - container.left;\n    }\n}\nfunction renderTextContent(textNode, text, visibleWidth) {\n    var visibleLength = text.length;\n    while (visibleLength >= 0) {\n        textNode.textContent = truncateText(text, visibleLength);\n        if (textNode.getComputedTextLength() <= visibleWidth) {\n            return;\n        }\n        else {\n            visibleLength--;\n        }\n    }\n}\nfunction truncateText(text, maxLength) {\n    if (text.length === maxLength) {\n        return text;\n    }\n    return text.slice(0, maxLength) + '…';\n}\n"]},"metadata":{},"sourceType":"module"}