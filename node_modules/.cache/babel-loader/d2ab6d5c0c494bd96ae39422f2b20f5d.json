{"ast":null,"code":"import { __assign } from \"tslib\";\nimport OptionsList from '../../internal/components/options-list';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { renderOptions } from '../utils/render-options';\nimport { scrollUntilVisible } from '../../internal/utils/scrollable-containers';\nimport styles from './styles.css.js';\n\nvar PlainList = function (_a, ref) {\n  var menuProps = _a.menuProps,\n      getOptionProps = _a.getOptionProps,\n      filteredOptions = _a.filteredOptions,\n      filteringValue = _a.filteringValue,\n      isKeyboard = _a.isKeyboard,\n      checkboxes = _a.checkboxes,\n      hasDropdownStatus = _a.hasDropdownStatus,\n      listBottom = _a.listBottom;\n  var menuRef = menuProps.ref;\n  useImperativeHandle(ref, function () {\n    return function (index) {\n      var _a;\n\n      var item = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(\"[data-mouse-target=\\\"\" + index + \"\\\"]\");\n\n      if (isKeyboard && item) {\n        scrollUntilVisible(item);\n      }\n    };\n  }, [isKeyboard, menuRef]);\n  return React.createElement(OptionsList, __assign({}, menuProps), renderOptions({\n    options: filteredOptions,\n    getOptionProps: getOptionProps,\n    filteringValue: filteringValue,\n    isKeyboard: isKeyboard,\n    checkboxes: checkboxes,\n    hasDropdownStatus: hasDropdownStatus\n  }), listBottom ? React.createElement(\"li\", {\n    className: styles['list-bottom']\n  }, listBottom) : null);\n};\n\nexport default forwardRef(PlainList);","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/select/parts/plain-list.js"],"names":["__assign","OptionsList","React","forwardRef","useImperativeHandle","renderOptions","scrollUntilVisible","styles","PlainList","_a","ref","menuProps","getOptionProps","filteredOptions","filteringValue","isKeyboard","checkboxes","hasDropdownStatus","listBottom","menuRef","index","item","current","querySelector","createElement","options","className"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,mBAA5B,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AACA,IAAIC,SAAS,GAAG,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AAC/B,MAAIC,SAAS,GAAGF,EAAE,CAACE,SAAnB;AAAA,MAA8BC,cAAc,GAAGH,EAAE,CAACG,cAAlD;AAAA,MAAkEC,eAAe,GAAGJ,EAAE,CAACI,eAAvF;AAAA,MAAwGC,cAAc,GAAGL,EAAE,CAACK,cAA5H;AAAA,MAA4IC,UAAU,GAAGN,EAAE,CAACM,UAA5J;AAAA,MAAwKC,UAAU,GAAGP,EAAE,CAACO,UAAxL;AAAA,MAAoMC,iBAAiB,GAAGR,EAAE,CAACQ,iBAA3N;AAAA,MAA8OC,UAAU,GAAGT,EAAE,CAACS,UAA9P;AACA,MAAIC,OAAO,GAAGR,SAAS,CAACD,GAAxB;AACAN,EAAAA,mBAAmB,CAACM,GAAD,EAAM,YAAY;AAAE,WAAO,UAAUU,KAAV,EAAiB;AAC3D,UAAIX,EAAJ;;AACA,UAAIY,IAAI,GAAG,CAACZ,EAAE,GAAGU,OAAO,CAACG,OAAd,MAA2B,IAA3B,IAAmCb,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACc,aAAH,CAAiB,0BAA0BH,KAA1B,GAAkC,KAAnD,CAAvE;;AACA,UAAIL,UAAU,IAAIM,IAAlB,EAAwB;AACpBf,QAAAA,kBAAkB,CAACe,IAAD,CAAlB;AACH;AACJ,KANsC;AAMnC,GANe,EAMb,CAACN,UAAD,EAAaI,OAAb,CANa,CAAnB;AAOA,SAAQjB,KAAK,CAACsB,aAAN,CAAoBvB,WAApB,EAAiCD,QAAQ,CAAC,EAAD,EAAKW,SAAL,CAAzC,EACJN,aAAa,CAAC;AACVoB,IAAAA,OAAO,EAAEZ,eADC;AAEVD,IAAAA,cAAc,EAAEA,cAFN;AAGVE,IAAAA,cAAc,EAAEA,cAHN;AAIVC,IAAAA,UAAU,EAAEA,UAJF;AAKVC,IAAAA,UAAU,EAAEA,UALF;AAMVC,IAAAA,iBAAiB,EAAEA;AANT,GAAD,CADT,EASJC,UAAU,GAAGhB,KAAK,CAACsB,aAAN,CAAoB,IAApB,EAA0B;AAAEE,IAAAA,SAAS,EAAEnB,MAAM,CAAC,aAAD;AAAnB,GAA1B,EAAgEW,UAAhE,CAAH,GAAiF,IATvF,CAAR;AAUH,CApBD;;AAqBA,eAAef,UAAU,CAACK,SAAD,CAAzB","sourcesContent":["import { __assign } from \"tslib\";\nimport OptionsList from '../../internal/components/options-list';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { renderOptions } from '../utils/render-options';\nimport { scrollUntilVisible } from '../../internal/utils/scrollable-containers';\nimport styles from './styles.css.js';\nvar PlainList = function (_a, ref) {\n    var menuProps = _a.menuProps, getOptionProps = _a.getOptionProps, filteredOptions = _a.filteredOptions, filteringValue = _a.filteringValue, isKeyboard = _a.isKeyboard, checkboxes = _a.checkboxes, hasDropdownStatus = _a.hasDropdownStatus, listBottom = _a.listBottom;\n    var menuRef = menuProps.ref;\n    useImperativeHandle(ref, function () { return function (index) {\n        var _a;\n        var item = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(\"[data-mouse-target=\\\"\" + index + \"\\\"]\");\n        if (isKeyboard && item) {\n            scrollUntilVisible(item);\n        }\n    }; }, [isKeyboard, menuRef]);\n    return (React.createElement(OptionsList, __assign({}, menuProps),\n        renderOptions({\n            options: filteredOptions,\n            getOptionProps: getOptionProps,\n            filteringValue: filteringValue,\n            isKeyboard: isKeyboard,\n            checkboxes: checkboxes,\n            hasDropdownStatus: hasDropdownStatus\n        }),\n        listBottom ? React.createElement(\"li\", { className: styles['list-bottom'] }, listBottom) : null));\n};\nexport default forwardRef(PlainList);\n"]},"metadata":{},"sourceType":"module"}