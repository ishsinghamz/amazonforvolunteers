{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { memo } from 'react';\nexport default memo(ThresholdSeries);\n\nfunction ThresholdSeries(_a) {\n  var data = _a.data,\n      xScale = _a.xScale,\n      color = _a.color,\n      chartAreaClipPath = _a.chartAreaClipPath;\n  var range = xScale.d3Scale.range();\n  var y = data[0].scaled.y0;\n  var path = {\n    x1: range[0],\n    x2: range[1],\n    y1: y,\n    y2: y\n  };\n  return React.createElement(\"line\", __assign({\n    \"aria-hidden\": true,\n    stroke: color,\n    clipPath: \"url(#\" + chartAreaClipPath + \")\"\n  }, path));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/area-chart/elements/threshold-series.js"],"names":["__assign","React","memo","ThresholdSeries","_a","data","xScale","color","chartAreaClipPath","range","d3Scale","y","scaled","y0","path","x1","x2","y1","y2","createElement","stroke","clipPath"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,eAAeA,IAAI,CAACC,eAAD,CAAnB;;AACA,SAASA,eAAT,CAAyBC,EAAzB,EAA6B;AACzB,MAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;AAAA,MAAoBC,MAAM,GAAGF,EAAE,CAACE,MAAhC;AAAA,MAAwCC,KAAK,GAAGH,EAAE,CAACG,KAAnD;AAAA,MAA0DC,iBAAiB,GAAGJ,EAAE,CAACI,iBAAjF;AACA,MAAIC,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAeD,KAAf,EAAZ;AACA,MAAIE,CAAC,GAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQO,MAAR,CAAeC,EAAvB;AACA,MAAIC,IAAI,GAAG;AAAEC,IAAAA,EAAE,EAAEN,KAAK,CAAC,CAAD,CAAX;AAAgBO,IAAAA,EAAE,EAAEP,KAAK,CAAC,CAAD,CAAzB;AAA8BQ,IAAAA,EAAE,EAAEN,CAAlC;AAAqCO,IAAAA,EAAE,EAAEP;AAAzC,GAAX;AACA,SAAOV,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4BnB,QAAQ,CAAC;AAAE,mBAAe,IAAjB;AAAuBoB,IAAAA,MAAM,EAAEb,KAA/B;AAAsCc,IAAAA,QAAQ,EAAE,UAAUb,iBAAV,GAA8B;AAA9E,GAAD,EAAsFM,IAAtF,CAApC,CAAP;AACH","sourcesContent":["import { __assign } from \"tslib\";\nimport React, { memo } from 'react';\nexport default memo(ThresholdSeries);\nfunction ThresholdSeries(_a) {\n    var data = _a.data, xScale = _a.xScale, color = _a.color, chartAreaClipPath = _a.chartAreaClipPath;\n    var range = xScale.d3Scale.range();\n    var y = data[0].scaled.y0;\n    var path = { x1: range[0], x2: range[1], y1: y, y2: y };\n    return React.createElement(\"line\", __assign({ \"aria-hidden\": true, stroke: color, clipPath: \"url(#\" + chartAreaClipPath + \")\" }, path));\n}\n"]},"metadata":{},"sourceType":"module"}