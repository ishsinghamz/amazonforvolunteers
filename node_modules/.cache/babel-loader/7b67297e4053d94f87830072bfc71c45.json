{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useCallback, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nimport { ExpandableSectionContainer } from './expandable-section-container';\nimport { ExpandableSectionHeader } from './expandable-section-header';\nexport default function InternalExpandableSection(_a) {\n  var controlledExpanded = _a.expanded,\n      defaultExpanded = _a.defaultExpanded,\n      onChange = _a.onChange,\n      _b = _a.variant,\n      variant = _b === void 0 ? 'default' : _b,\n      children = _a.children,\n      header = _a.header,\n      disableContentPaddings = _a.disableContentPaddings,\n      __internalRootRef = _a.__internalRootRef,\n      props = __rest(_a, [\"expanded\", \"defaultExpanded\", \"onChange\", \"variant\", \"children\", \"header\", \"disableContentPaddings\", \"__internalRootRef\"]);\n\n  var ref = useRef(null);\n  var controlId = useUniqueId();\n  var triggerControlId = controlId + \"-trigger\";\n  var baseProps = getBaseProps(props);\n\n  var _c = useControllable(controlledExpanded, onChange, defaultExpanded, {\n    componentName: 'ExpandableSection',\n    controlledProp: 'expanded',\n    changeHandler: 'onChange'\n  }),\n      expanded = _c[0],\n      setExpanded = _c[1];\n\n  var onExpandChange = useCallback(function (expanded) {\n    setExpanded(expanded);\n    fireNonCancelableEvent(onChange, {\n      expanded: expanded\n    });\n  }, [onChange, setExpanded]);\n  var onClick = useCallback(function () {\n    onExpandChange(!expanded);\n  }, [onExpandChange, expanded]);\n  var onKeyUp = useCallback(function (event) {\n    var interactionKeys = [KeyCode.enter, KeyCode.space];\n\n    if (interactionKeys.indexOf(event.keyCode) !== -1) {\n      onExpandChange(!expanded);\n    }\n  }, [onExpandChange, expanded]);\n  var onKeyDown = useCallback(function (event) {\n    if (event.keyCode === KeyCode.space) {\n      event.preventDefault();\n    }\n  }, []);\n  var triggerProps = {\n    ariaControls: controlId,\n    ariaLabelledBy: triggerControlId,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onClick: onClick\n  };\n  return React.createElement(ExpandableSectionContainer, __assign({}, baseProps, {\n    expanded: expanded,\n    className: clsx(baseProps.className, styles.root),\n    variant: variant,\n    disableContentPaddings: disableContentPaddings,\n    header: React.createElement(ExpandableSectionHeader, __assign({\n      id: triggerControlId,\n      className: clsx(styles.header, styles[\"header-\" + variant]),\n      variant: variant,\n      expanded: !!expanded\n    }, triggerProps), header),\n    __internalRootRef: __internalRootRef\n  }), React.createElement(CSSTransition, {\n    \"in\": expanded,\n    timeout: 30,\n    classNames: {\n      enter: styles['content-enter']\n    },\n    nodeRef: ref\n  }, React.createElement(\"div\", {\n    id: controlId,\n    ref: ref,\n    className: clsx(styles.content, styles[\"content-\" + variant], expanded && styles['content-expanded']),\n    role: \"group\",\n    \"aria-labelledby\": triggerControlId\n  }, children)));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/expandable-section/internal.js"],"names":["__assign","__rest","React","useCallback","useRef","CSSTransition","clsx","getBaseProps","useControllable","useUniqueId","KeyCode","fireNonCancelableEvent","styles","ExpandableSectionContainer","ExpandableSectionHeader","InternalExpandableSection","_a","controlledExpanded","expanded","defaultExpanded","onChange","_b","variant","children","header","disableContentPaddings","__internalRootRef","props","ref","controlId","triggerControlId","baseProps","_c","componentName","controlledProp","changeHandler","setExpanded","onExpandChange","onClick","onKeyUp","event","interactionKeys","enter","space","indexOf","keyCode","onKeyDown","preventDefault","triggerProps","ariaControls","ariaLabelledBy","createElement","className","root","id","timeout","classNames","nodeRef","content","role"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useCallback, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nimport { ExpandableSectionContainer } from './expandable-section-container';\nimport { ExpandableSectionHeader } from './expandable-section-header';\nexport default function InternalExpandableSection(_a) {\n    var controlledExpanded = _a.expanded, defaultExpanded = _a.defaultExpanded, onChange = _a.onChange, _b = _a.variant, variant = _b === void 0 ? 'default' : _b, children = _a.children, header = _a.header, disableContentPaddings = _a.disableContentPaddings, __internalRootRef = _a.__internalRootRef, props = __rest(_a, [\"expanded\", \"defaultExpanded\", \"onChange\", \"variant\", \"children\", \"header\", \"disableContentPaddings\", \"__internalRootRef\"]);\n    var ref = useRef(null);\n    var controlId = useUniqueId();\n    var triggerControlId = controlId + \"-trigger\";\n    var baseProps = getBaseProps(props);\n    var _c = useControllable(controlledExpanded, onChange, defaultExpanded, {\n        componentName: 'ExpandableSection',\n        controlledProp: 'expanded',\n        changeHandler: 'onChange'\n    }), expanded = _c[0], setExpanded = _c[1];\n    var onExpandChange = useCallback(function (expanded) {\n        setExpanded(expanded);\n        fireNonCancelableEvent(onChange, { expanded: expanded });\n    }, [onChange, setExpanded]);\n    var onClick = useCallback(function () {\n        onExpandChange(!expanded);\n    }, [onExpandChange, expanded]);\n    var onKeyUp = useCallback(function (event) {\n        var interactionKeys = [KeyCode.enter, KeyCode.space];\n        if (interactionKeys.indexOf(event.keyCode) !== -1) {\n            onExpandChange(!expanded);\n        }\n    }, [onExpandChange, expanded]);\n    var onKeyDown = useCallback(function (event) {\n        if (event.keyCode === KeyCode.space) {\n            event.preventDefault();\n        }\n    }, []);\n    var triggerProps = {\n        ariaControls: controlId,\n        ariaLabelledBy: triggerControlId,\n        onKeyUp: onKeyUp,\n        onKeyDown: onKeyDown,\n        onClick: onClick\n    };\n    return (React.createElement(ExpandableSectionContainer, __assign({}, baseProps, { expanded: expanded, className: clsx(baseProps.className, styles.root), variant: variant, disableContentPaddings: disableContentPaddings, header: React.createElement(ExpandableSectionHeader, __assign({ id: triggerControlId, className: clsx(styles.header, styles[\"header-\" + variant]), variant: variant, expanded: !!expanded }, triggerProps), header), __internalRootRef: __internalRootRef }),\n        React.createElement(CSSTransition, { \"in\": expanded, timeout: 30, classNames: { enter: styles['content-enter'] }, nodeRef: ref },\n            React.createElement(\"div\", { id: controlId, ref: ref, className: clsx(styles.content, styles[\"content-\" + variant], expanded && styles['content-expanded']), role: \"group\", \"aria-labelledby\": triggerControlId }, children))));\n}\n"]},"metadata":{},"sourceType":"module"}