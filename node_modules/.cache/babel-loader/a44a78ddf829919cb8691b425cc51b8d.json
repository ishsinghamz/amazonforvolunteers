{"ast":null,"code":"import { useRef } from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { filterOptions, isInteractive } from '../../internal/components/option/utils/filter-options';\nimport { useDebounceCallback } from '../../internal/hooks/use-debounce-callback';\nexport var isChar = function (keyCode) {\n  return [0, KeyCode.enter, KeyCode.space, KeyCode.tab].indexOf(keyCode) === -1;\n};\nexport var isRepeatedChar = function (str) {\n  return str.split('').every(function (c) {\n    return c === str[0];\n  });\n};\n\nfunction findMatchingOption(options, searchText, currentHighlight) {\n  var filter = function (searchText) {\n    return filterOptions(options, searchText, true).filter(function (option) {\n      return isInteractive(option);\n    });\n  };\n\n  var matchingOptions = filter(searchText);\n\n  if (matchingOptions.length === 1) {\n    return matchingOptions[0];\n  }\n\n  if (currentHighlight && searchText.length > 1 && isRepeatedChar(searchText)) {\n    var matchingOptions_1 = filter(searchText[0]);\n\n    if (matchingOptions_1.length > 0) {\n      var active = matchingOptions_1.map(function (_a) {\n        var option = _a.option;\n        return option.value;\n      }).indexOf(currentHighlight.value);\n      active += 1;\n      active = active % matchingOptions_1.length;\n      return matchingOptions_1[active];\n    }\n  }\n\n  if (matchingOptions.length > 0) {\n    return matchingOptions[0];\n  }\n\n  return null;\n}\n\nexport function useNativeSearch(_a) {\n  var isEnabled = _a.isEnabled,\n      options = _a.options,\n      isKeyboard = _a.isKeyboard,\n      highlightOption = _a.highlightOption,\n      highlightedOption = _a.highlightedOption;\n  var value = useRef('');\n  var delayedResetValue = useDebounceCallback(function () {\n    return value.current = '';\n  }, 500);\n  return function (event) {\n    isKeyboard.current = true;\n\n    if (!isEnabled) {\n      return;\n    }\n\n    var charCode = event.charCode;\n\n    if (!isChar(charCode)) {\n      return;\n    }\n\n    delayedResetValue();\n    var newValue = value.current + String.fromCharCode(charCode);\n    value.current = newValue;\n    var nextHighlight = findMatchingOption(options, newValue, highlightedOption);\n\n    if (nextHighlight) {\n      highlightOption(nextHighlight);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/select/utils/use-native-search.js"],"names":["useRef","KeyCode","filterOptions","isInteractive","useDebounceCallback","isChar","keyCode","enter","space","tab","indexOf","isRepeatedChar","str","split","every","c","findMatchingOption","options","searchText","currentHighlight","filter","option","matchingOptions","length","matchingOptions_1","active","map","_a","value","useNativeSearch","isEnabled","isKeyboard","highlightOption","highlightedOption","delayedResetValue","current","event","charCode","newValue","String","fromCharCode","nextHighlight"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { filterOptions, isInteractive } from '../../internal/components/option/utils/filter-options';\nimport { useDebounceCallback } from '../../internal/hooks/use-debounce-callback';\nexport var isChar = function (keyCode) {\n    return [0, KeyCode.enter, KeyCode.space, KeyCode.tab].indexOf(keyCode) === -1;\n};\nexport var isRepeatedChar = function (str) { return str.split('').every(function (c) { return c === str[0]; }); };\nfunction findMatchingOption(options, searchText, currentHighlight) {\n    var filter = function (searchText) {\n        return filterOptions(options, searchText, true).filter(function (option) { return isInteractive(option); });\n    };\n    var matchingOptions = filter(searchText);\n    if (matchingOptions.length === 1) {\n        return matchingOptions[0];\n    }\n    if (currentHighlight && searchText.length > 1 && isRepeatedChar(searchText)) {\n        var matchingOptions_1 = filter(searchText[0]);\n        if (matchingOptions_1.length > 0) {\n            var active = matchingOptions_1\n                .map(function (_a) {\n                var option = _a.option;\n                return option.value;\n            })\n                .indexOf(currentHighlight.value);\n            active += 1;\n            active = active % matchingOptions_1.length;\n            return matchingOptions_1[active];\n        }\n    }\n    if (matchingOptions.length > 0) {\n        return matchingOptions[0];\n    }\n    return null;\n}\nexport function useNativeSearch(_a) {\n    var isEnabled = _a.isEnabled, options = _a.options, isKeyboard = _a.isKeyboard, highlightOption = _a.highlightOption, highlightedOption = _a.highlightedOption;\n    var value = useRef('');\n    var delayedResetValue = useDebounceCallback(function () { return (value.current = ''); }, 500);\n    return function (event) {\n        isKeyboard.current = true;\n        if (!isEnabled) {\n            return;\n        }\n        var charCode = event.charCode;\n        if (!isChar(charCode)) {\n            return;\n        }\n        delayedResetValue();\n        var newValue = value.current + String.fromCharCode(charCode);\n        value.current = newValue;\n        var nextHighlight = findMatchingOption(options, newValue, highlightedOption);\n        if (nextHighlight) {\n            highlightOption(nextHighlight);\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}