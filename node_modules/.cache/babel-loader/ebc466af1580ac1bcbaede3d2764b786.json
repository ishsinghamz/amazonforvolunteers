{"ast":null,"code":"import { useState } from 'react';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { makeCancellable, PromiseCancelledSignal } from '../../internal/utils/promises';\nimport { extractBucketName, validate } from './validation';\nexport function useVersionsFetch(fetchVersions) {\n  var _a = useState(false),\n      loading = _a[0],\n      setLoading = _a[1];\n\n  var _b = useState(''),\n      lastFetchedValue = _b[0],\n      setLastFetched = _b[1];\n\n  var _c = useState([]),\n      versions = _c[0],\n      setVersions = _c[1];\n\n  var loadVersions = function (uri) {\n    if (uri === lastFetchedValue) {\n      return;\n    }\n\n    setLastFetched(uri);\n    var errorCode = validate(uri);\n\n    var _a = extractBucketName(uri),\n        bucketName = _a[0],\n        prefix = _a[1];\n\n    if (errorCode || !bucketName || !prefix || prefix.slice(-1) === '/') {\n      return;\n    }\n\n    setLoading(true);\n    var result = makeCancellable(fetchVersions(bucketName, prefix));\n    result.promise.then(function (versions) {\n      setLoading(false);\n      setVersions(versions.map(function (version) {\n        return {\n          value: version.VersionId,\n          label: version.LastModified\n        };\n      }));\n    }, function (err) {\n      if (!(err instanceof PromiseCancelledSignal)) {\n        setLoading(false);\n      }\n    });\n    return result;\n  };\n\n  return {\n    loading: loading,\n    versions: versions,\n    resetVersions: function () {\n      return setVersions([]);\n    },\n    loadVersions: useStableEventHandler(loadVersions)\n  };\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/s3-resource-selector/s3-in-context/use-versions-fetch.js"],"names":["useState","useStableEventHandler","makeCancellable","PromiseCancelledSignal","extractBucketName","validate","useVersionsFetch","fetchVersions","_a","loading","setLoading","_b","lastFetchedValue","setLastFetched","_c","versions","setVersions","loadVersions","uri","errorCode","bucketName","prefix","slice","result","promise","then","map","version","value","VersionId","label","LastModified","err","resetVersions"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,qBAAT,QAAsC,+CAAtC;AACA,SAASC,eAAT,EAA0BC,sBAA1B,QAAwD,+BAAxD;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,cAA5C;AACA,OAAO,SAASC,gBAAT,CAA0BC,aAA1B,EAAyC;AAC5C,MAAIC,EAAE,GAAGR,QAAQ,CAAC,KAAD,CAAjB;AAAA,MAA0BS,OAAO,GAAGD,EAAE,CAAC,CAAD,CAAtC;AAAA,MAA2CE,UAAU,GAAGF,EAAE,CAAC,CAAD,CAA1D;;AACA,MAAIG,EAAE,GAAGX,QAAQ,CAAC,EAAD,CAAjB;AAAA,MAAuBY,gBAAgB,GAAGD,EAAE,CAAC,CAAD,CAA5C;AAAA,MAAiDE,cAAc,GAAGF,EAAE,CAAC,CAAD,CAApE;;AACA,MAAIG,EAAE,GAAGd,QAAQ,CAAC,EAAD,CAAjB;AAAA,MAAuBe,QAAQ,GAAGD,EAAE,CAAC,CAAD,CAApC;AAAA,MAAyCE,WAAW,GAAGF,EAAE,CAAC,CAAD,CAAzD;;AACA,MAAIG,YAAY,GAAG,UAAUC,GAAV,EAAe;AAC9B,QAAIA,GAAG,KAAKN,gBAAZ,EAA8B;AAC1B;AACH;;AACDC,IAAAA,cAAc,CAACK,GAAD,CAAd;AACA,QAAIC,SAAS,GAAGd,QAAQ,CAACa,GAAD,CAAxB;;AACA,QAAIV,EAAE,GAAGJ,iBAAiB,CAACc,GAAD,CAA1B;AAAA,QAAiCE,UAAU,GAAGZ,EAAE,CAAC,CAAD,CAAhD;AAAA,QAAqDa,MAAM,GAAGb,EAAE,CAAC,CAAD,CAAhE;;AACA,QAAIW,SAAS,IAAI,CAACC,UAAd,IAA4B,CAACC,MAA7B,IAAuCA,MAAM,CAACC,KAAP,CAAa,CAAC,CAAd,MAAqB,GAAhE,EAAqE;AACjE;AACH;;AACDZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIa,MAAM,GAAGrB,eAAe,CAACK,aAAa,CAACa,UAAD,EAAaC,MAAb,CAAd,CAA5B;AACAE,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoB,UAAUV,QAAV,EAAoB;AACpCL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAM,MAAAA,WAAW,CAACD,QAAQ,CAACW,GAAT,CAAa,UAAUC,OAAV,EAAmB;AAAE,eAAQ;AAClDC,UAAAA,KAAK,EAAED,OAAO,CAACE,SADmC;AAElDC,UAAAA,KAAK,EAAEH,OAAO,CAACI;AAFmC,SAAR;AAGzC,OAHO,CAAD,CAAX;AAIH,KAND,EAMG,UAAUC,GAAV,EAAe;AACd,UAAI,EAAEA,GAAG,YAAY7B,sBAAjB,CAAJ,EAA8C;AAC1CO,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAVD;AAWA,WAAOa,MAAP;AACH,GAxBD;;AAyBA,SAAO;AACHd,IAAAA,OAAO,EAAEA,OADN;AAEHM,IAAAA,QAAQ,EAAEA,QAFP;AAGHkB,IAAAA,aAAa,EAAE,YAAY;AAAE,aAAOjB,WAAW,CAAC,EAAD,CAAlB;AAAyB,KAHnD;AAIHC,IAAAA,YAAY,EAAEhB,qBAAqB,CAACgB,YAAD;AAJhC,GAAP;AAMH","sourcesContent":["import { useState } from 'react';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { makeCancellable, PromiseCancelledSignal } from '../../internal/utils/promises';\nimport { extractBucketName, validate } from './validation';\nexport function useVersionsFetch(fetchVersions) {\n    var _a = useState(false), loading = _a[0], setLoading = _a[1];\n    var _b = useState(''), lastFetchedValue = _b[0], setLastFetched = _b[1];\n    var _c = useState([]), versions = _c[0], setVersions = _c[1];\n    var loadVersions = function (uri) {\n        if (uri === lastFetchedValue) {\n            return;\n        }\n        setLastFetched(uri);\n        var errorCode = validate(uri);\n        var _a = extractBucketName(uri), bucketName = _a[0], prefix = _a[1];\n        if (errorCode || !bucketName || !prefix || prefix.slice(-1) === '/') {\n            return;\n        }\n        setLoading(true);\n        var result = makeCancellable(fetchVersions(bucketName, prefix));\n        result.promise.then(function (versions) {\n            setLoading(false);\n            setVersions(versions.map(function (version) { return ({\n                value: version.VersionId,\n                label: version.LastModified\n            }); }));\n        }, function (err) {\n            if (!(err instanceof PromiseCancelledSignal)) {\n                setLoading(false);\n            }\n        });\n        return result;\n    };\n    return {\n        loading: loading,\n        versions: versions,\n        resetVersions: function () { return setVersions([]); },\n        loadVersions: useStableEventHandler(loadVersions)\n    };\n}\n"]},"metadata":{},"sourceType":"module"}