{"ast":null,"code":"import { __assign } from \"tslib\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport SelectionControl from './selection-control';\nimport { focusMarkers } from './use-selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getColumnKey } from './utils';\nimport { TableHeaderCell } from './header-cell';\nimport { Resizer } from './resizer';\nimport { useColumnWidths } from './use-column-widths';\nimport styles from './styles.css.js';\nvar Thead = React.forwardRef(function (_a, outerRef) {\n  var containerWidth = _a.containerWidth,\n      selectionType = _a.selectionType,\n      selectAllProps = _a.selectAllProps,\n      columnDefinitions = _a.columnDefinitions,\n      sortingColumn = _a.sortingColumn,\n      sortingDisabled = _a.sortingDisabled,\n      sortingDescending = _a.sortingDescending,\n      resizableColumns = _a.resizableColumns,\n      variant = _a.variant,\n      wrapLines = _a.wrapLines,\n      onFocusMove = _a.onFocusMove,\n      onCellFocus = _a.onCellFocus,\n      onCellBlur = _a.onCellBlur,\n      onSortingChange = _a.onSortingChange,\n      onResizeFinish = _a.onResizeFinish,\n      _b = _a.showFocusRing,\n      showFocusRing = _b === void 0 ? null : _b,\n      _c = _a.sticky,\n      sticky = _c === void 0 ? false : _c,\n      _d = _a.hidden,\n      hidden = _d === void 0 ? false : _d,\n      _e = _a.stuck,\n      stuck = _e === void 0 ? false : _e;\n  var headerCellClass = clsx(styles.cell, styles['header-cell'], styles[\"header-cell-variant-\" + variant], sticky && styles['header-cell-sticky'], stuck && styles['header-cell-stuck']);\n\n  var _f = useColumnWidths(),\n      columnWidths = _f.columnWidths,\n      totalWidth = _f.totalWidth,\n      updateColumn = _f.updateColumn;\n\n  return React.createElement(\"thead\", {\n    className: clsx(!hidden && styles['thead-active'])\n  }, React.createElement(\"tr\", __assign({}, focusMarkers.all, {\n    ref: outerRef\n  }), selectionType === 'multi' && React.createElement(SelectionControl, __assign({\n    className: clsx(headerCellClass, styles['selection-control']),\n    onFocusDown: function (event) {\n      return onFocusMove(event.target, -1, +1);\n    }\n  }, selectAllProps, hidden ? {\n    tabIndex: -1\n  } : {}, {\n    rootTag: \"th\",\n    scope: \"col\"\n  })), selectionType === 'single' && React.createElement(\"th\", {\n    className: clsx(headerCellClass, styles['selection-control']),\n    scope: \"col\"\n  }, React.createElement(\"span\", {\n    className: styles.stud,\n    \"aria-hidden\": true\n  }, \"\\u00A0\")), columnDefinitions.map(function (column, colIndex) {\n    var widthOverride;\n\n    if (resizableColumns) {\n      if (columnWidths) {\n        widthOverride = columnWidths[getColumnKey(column, colIndex)];\n      }\n\n      if (colIndex === columnDefinitions.length - 1 && containerWidth && containerWidth > totalWidth) {\n        widthOverride = 'auto';\n      }\n    }\n\n    return React.createElement(TableHeaderCell, {\n      key: getColumnKey(column, colIndex),\n      className: headerCellClass,\n      style: {\n        width: widthOverride || column.width,\n        minWidth: sticky ? undefined : column.minWidth,\n        maxWidth: resizableColumns || sticky ? undefined : column.maxWidth\n      },\n      tabIndex: sticky ? -1 : 0,\n      showFocusRing: colIndex === showFocusRing,\n      column: column,\n      activeSortingColumn: sortingColumn,\n      sortingDescending: sortingDescending,\n      sortingDisabled: sortingDisabled,\n      wrapLines: wrapLines,\n      resizer: resizableColumns && React.createElement(Resizer, {\n        onDragMove: function (newWidth) {\n          return updateColumn(colIndex, newWidth);\n        },\n        onFinish: function () {\n          return onResizeFinish(columnWidths);\n        }\n      }),\n      onClick: function (detail) {\n        return fireNonCancelableEvent(onSortingChange, detail);\n      },\n      onFocus: function () {\n        return onCellFocus === null || onCellFocus === void 0 ? void 0 : onCellFocus(colIndex);\n      },\n      onBlur: onCellBlur\n    });\n  })));\n});\nexport default Thead;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/table/thead.js"],"names":["__assign","clsx","React","SelectionControl","focusMarkers","fireNonCancelableEvent","getColumnKey","TableHeaderCell","Resizer","useColumnWidths","styles","Thead","forwardRef","_a","outerRef","containerWidth","selectionType","selectAllProps","columnDefinitions","sortingColumn","sortingDisabled","sortingDescending","resizableColumns","variant","wrapLines","onFocusMove","onCellFocus","onCellBlur","onSortingChange","onResizeFinish","_b","showFocusRing","_c","sticky","_d","hidden","_e","stuck","headerCellClass","cell","_f","columnWidths","totalWidth","updateColumn","createElement","className","all","ref","onFocusDown","event","target","tabIndex","rootTag","scope","stud","map","column","colIndex","widthOverride","length","key","style","width","minWidth","undefined","maxWidth","activeSortingColumn","resizer","onDragMove","newWidth","onFinish","onClick","detail","onFocus","onBlur"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport SelectionControl from './selection-control';\nimport { focusMarkers } from './use-selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getColumnKey } from './utils';\nimport { TableHeaderCell } from './header-cell';\nimport { Resizer } from './resizer';\nimport { useColumnWidths } from './use-column-widths';\nimport styles from './styles.css.js';\nvar Thead = React.forwardRef(function (_a, outerRef) {\n    var containerWidth = _a.containerWidth, selectionType = _a.selectionType, selectAllProps = _a.selectAllProps, columnDefinitions = _a.columnDefinitions, sortingColumn = _a.sortingColumn, sortingDisabled = _a.sortingDisabled, sortingDescending = _a.sortingDescending, resizableColumns = _a.resizableColumns, variant = _a.variant, wrapLines = _a.wrapLines, onFocusMove = _a.onFocusMove, onCellFocus = _a.onCellFocus, onCellBlur = _a.onCellBlur, onSortingChange = _a.onSortingChange, onResizeFinish = _a.onResizeFinish, _b = _a.showFocusRing, showFocusRing = _b === void 0 ? null : _b, _c = _a.sticky, sticky = _c === void 0 ? false : _c, _d = _a.hidden, hidden = _d === void 0 ? false : _d, _e = _a.stuck, stuck = _e === void 0 ? false : _e;\n    var headerCellClass = clsx(styles.cell, styles['header-cell'], styles[\"header-cell-variant-\" + variant], sticky && styles['header-cell-sticky'], stuck && styles['header-cell-stuck']);\n    var _f = useColumnWidths(), columnWidths = _f.columnWidths, totalWidth = _f.totalWidth, updateColumn = _f.updateColumn;\n    return (React.createElement(\"thead\", { className: clsx(!hidden && styles['thead-active']) },\n        React.createElement(\"tr\", __assign({}, focusMarkers.all, { ref: outerRef }),\n            selectionType === 'multi' && (React.createElement(SelectionControl, __assign({ className: clsx(headerCellClass, styles['selection-control']), onFocusDown: function (event) { return onFocusMove(event.target, -1, +1); } }, selectAllProps, (hidden ? { tabIndex: -1 } : {}), { rootTag: \"th\", scope: \"col\" }))),\n            selectionType === 'single' && (React.createElement(\"th\", { className: clsx(headerCellClass, styles['selection-control']), scope: \"col\" },\n                React.createElement(\"span\", { className: styles.stud, \"aria-hidden\": true }, \"\\u00A0\"))),\n            columnDefinitions.map(function (column, colIndex) {\n                var widthOverride;\n                if (resizableColumns) {\n                    if (columnWidths) {\n                        widthOverride = columnWidths[getColumnKey(column, colIndex)];\n                    }\n                    if (colIndex === columnDefinitions.length - 1 && containerWidth && containerWidth > totalWidth) {\n                        widthOverride = 'auto';\n                    }\n                }\n                return (React.createElement(TableHeaderCell, { key: getColumnKey(column, colIndex), className: headerCellClass, style: {\n                        width: widthOverride || column.width,\n                        minWidth: sticky ? undefined : column.minWidth,\n                        maxWidth: resizableColumns || sticky ? undefined : column.maxWidth\n                    }, tabIndex: sticky ? -1 : 0, showFocusRing: colIndex === showFocusRing, column: column, activeSortingColumn: sortingColumn, sortingDescending: sortingDescending, sortingDisabled: sortingDisabled, wrapLines: wrapLines, resizer: resizableColumns && (React.createElement(Resizer, { onDragMove: function (newWidth) { return updateColumn(colIndex, newWidth); }, onFinish: function () { return onResizeFinish(columnWidths); } })), onClick: function (detail) { return fireNonCancelableEvent(onSortingChange, detail); }, onFocus: function () { return onCellFocus === null || onCellFocus === void 0 ? void 0 : onCellFocus(colIndex); }, onBlur: onCellBlur }));\n            }))));\n});\nexport default Thead;\n"]},"metadata":{},"sourceType":"module"}