{"ast":null,"code":"import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport AreaSeries from './area-series';\nimport ThresholdSeries from './threshold-series';\nimport styles from '../styles.css.js';\nimport { useSelector } from '../model/async-store';\nexport default memo(DataSeries);\n\nfunction DataSeries(_a) {\n  var model = _a.model;\n  var chartAreaClipPath = useUniqueId('awsui-area-chart__chart-area-');\n  var highlightedX = useSelector(model.interactions, function (state) {\n    return state.highlightedX;\n  });\n  var highlightedSeries = useSelector(model.interactions, function (state) {\n    return state.highlightedSeries;\n  });\n  var useHighlightDimmed = !highlightedX;\n  var seriesData = [];\n\n  for (var seriesIndex = model.series.length - 1; seriesIndex >= 0; seriesIndex--) {\n    if (model.computed.plot.sx[seriesIndex]) {\n      seriesData.push([model.series[seriesIndex], model.computed.plot.sx[seriesIndex] || []]);\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"defs\", {\n    \"aria-hidden\": \"true\"\n  }, React.createElement(\"clipPath\", {\n    id: chartAreaClipPath\n  }, React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: model.width,\n    height: model.height\n  }))), React.createElement(\"g\", {\n    role: \"group\"\n  }, seriesData.map(function (_a) {\n    var _b;\n\n    var series = _a[0],\n        data = _a[1];\n    var isHighlighted = series === highlightedSeries;\n    var isDimmed = !!highlightedSeries && !isHighlighted;\n    return React.createElement(\"g\", {\n      key: series.title,\n      role: \"group\",\n      \"aria-label\": series.title,\n      className: clsx(styles.series, styles[\"series--\" + series.type], (_b = {}, _b[styles['series--highlighted']] = isHighlighted, _b[styles['series--dimmed']] = useHighlightDimmed && isDimmed, _b))\n    }, series.type === 'area' ? React.createElement(AreaSeries, {\n      data: data,\n      color: model.getInternalSeries(series).color,\n      chartAreaClipPath: chartAreaClipPath\n    }) : React.createElement(ThresholdSeries, {\n      data: data,\n      xScale: model.computed.xScale,\n      color: model.getInternalSeries(series).color,\n      chartAreaClipPath: chartAreaClipPath\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/area-chart/elements/data-series.js"],"names":["React","memo","clsx","useUniqueId","AreaSeries","ThresholdSeries","styles","useSelector","DataSeries","_a","model","chartAreaClipPath","highlightedX","interactions","state","highlightedSeries","useHighlightDimmed","seriesData","seriesIndex","series","length","computed","plot","sx","push","createElement","Fragment","id","x","y","width","height","role","map","_b","data","isHighlighted","isDimmed","key","title","className","type","color","getInternalSeries","xScale"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport AreaSeries from './area-series';\nimport ThresholdSeries from './threshold-series';\nimport styles from '../styles.css.js';\nimport { useSelector } from '../model/async-store';\nexport default memo(DataSeries);\nfunction DataSeries(_a) {\n    var model = _a.model;\n    var chartAreaClipPath = useUniqueId('awsui-area-chart__chart-area-');\n    var highlightedX = useSelector(model.interactions, function (state) { return state.highlightedX; });\n    var highlightedSeries = useSelector(model.interactions, function (state) { return state.highlightedSeries; });\n    var useHighlightDimmed = !highlightedX;\n    var seriesData = [];\n    for (var seriesIndex = model.series.length - 1; seriesIndex >= 0; seriesIndex--) {\n        if (model.computed.plot.sx[seriesIndex]) {\n            seriesData.push([model.series[seriesIndex], model.computed.plot.sx[seriesIndex] || []]);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"defs\", { \"aria-hidden\": \"true\" },\n            React.createElement(\"clipPath\", { id: chartAreaClipPath },\n                React.createElement(\"rect\", { x: 0, y: 0, width: model.width, height: model.height }))),\n        React.createElement(\"g\", { role: \"group\" }, seriesData.map(function (_a) {\n            var _b;\n            var series = _a[0], data = _a[1];\n            var isHighlighted = series === highlightedSeries;\n            var isDimmed = !!highlightedSeries && !isHighlighted;\n            return (React.createElement(\"g\", { key: series.title, role: \"group\", \"aria-label\": series.title, className: clsx(styles.series, styles[\"series--\" + series.type], (_b = {},\n                    _b[styles['series--highlighted']] = isHighlighted,\n                    _b[styles['series--dimmed']] = useHighlightDimmed && isDimmed,\n                    _b)) }, series.type === 'area' ? (React.createElement(AreaSeries, { data: data, color: model.getInternalSeries(series).color, chartAreaClipPath: chartAreaClipPath })) : (React.createElement(ThresholdSeries, { data: data, xScale: model.computed.xScale, color: model.getInternalSeries(series).color, chartAreaClipPath: chartAreaClipPath }))));\n        }))));\n}\n"]},"metadata":{},"sourceType":"module"}