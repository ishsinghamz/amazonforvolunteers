{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\nexport default function useAppLayoutOffsets(element) {\n  var _a = useState({\n    left: 0,\n    right: 0\n  }),\n      offsets = _a[0],\n      setOffsets = _a[1];\n\n  var updatePosition = useCallback(function () {\n    if (!element) {\n      return;\n    }\n\n    var _a = element.getBoundingClientRect(),\n        left = _a.left,\n        right = _a.right;\n\n    var bodyWidth = document.body.clientWidth;\n    setOffsets({\n      left: left,\n      right: bodyWidth - right\n    });\n  }, [element]);\n  useEffect(function () {\n    window.addEventListener('resize', updatePosition);\n    return function () {\n      return window.removeEventListener('resize', updatePosition);\n    };\n  }, [updatePosition]);\n  var getElement = useCallback(function () {\n    return element;\n  }, [element]);\n  useResizeObserver(getElement, updatePosition);\n  return offsets;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/app-layout/utils/use-content-width.js"],"names":["useCallback","useEffect","useState","useResizeObserver","useAppLayoutOffsets","element","_a","left","right","offsets","setOffsets","updatePosition","getBoundingClientRect","bodyWidth","document","body","clientWidth","window","addEventListener","removeEventListener","getElement"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,eAAe,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACjD,MAAIC,EAAE,GAAGJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAD,CAAjB;AAAA,MAA0CC,OAAO,GAAGH,EAAE,CAAC,CAAD,CAAtD;AAAA,MAA2DI,UAAU,GAAGJ,EAAE,CAAC,CAAD,CAA1E;;AACA,MAAIK,cAAc,GAAGX,WAAW,CAAC,YAAY;AACzC,QAAI,CAACK,OAAL,EAAc;AACV;AACH;;AACD,QAAIC,EAAE,GAAGD,OAAO,CAACO,qBAAR,EAAT;AAAA,QAA0CL,IAAI,GAAGD,EAAE,CAACC,IAApD;AAAA,QAA0DC,KAAK,GAAGF,EAAE,CAACE,KAArE;;AACA,QAAIK,SAAS,GAAGC,QAAQ,CAACC,IAAT,CAAcC,WAA9B;AACAN,IAAAA,UAAU,CAAC;AAAEH,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,KAAK,EAAEK,SAAS,GAAGL;AAAjC,KAAD,CAAV;AACH,GAP+B,EAO7B,CAACH,OAAD,CAP6B,CAAhC;AAQAJ,EAAAA,SAAS,CAAC,YAAY;AAClBgB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCP,cAAlC;AACA,WAAO,YAAY;AAAE,aAAOM,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCR,cAArC,CAAP;AAA8D,KAAnF;AACH,GAHQ,EAGN,CAACA,cAAD,CAHM,CAAT;AAIA,MAAIS,UAAU,GAAGpB,WAAW,CAAC,YAAY;AAAE,WAAOK,OAAP;AAAiB,GAAhC,EAAkC,CAACA,OAAD,CAAlC,CAA5B;AACAF,EAAAA,iBAAiB,CAACiB,UAAD,EAAaT,cAAb,CAAjB;AACA,SAAOF,OAAP;AACH","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\nexport default function useAppLayoutOffsets(element) {\n    var _a = useState({ left: 0, right: 0 }), offsets = _a[0], setOffsets = _a[1];\n    var updatePosition = useCallback(function () {\n        if (!element) {\n            return;\n        }\n        var _a = element.getBoundingClientRect(), left = _a.left, right = _a.right;\n        var bodyWidth = document.body.clientWidth;\n        setOffsets({ left: left, right: bodyWidth - right });\n    }, [element]);\n    useEffect(function () {\n        window.addEventListener('resize', updatePosition);\n        return function () { return window.removeEventListener('resize', updatePosition); };\n    }, [updatePosition]);\n    var getElement = useCallback(function () { return element; }, [element]);\n    useResizeObserver(getElement, updatePosition);\n    return offsets;\n}\n"]},"metadata":{},"sourceType":"module"}