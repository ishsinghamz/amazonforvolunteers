{"ast":null,"code":"import { isMotionDisabled } from '../internal/motion';\nimport isNativeSmoothScrollingSupported from './native-smooth-scroll-supported';\n\nvar getScrollSpeed = function (pixels) {\n  return 0.0015 * Math.abs(pixels) + 0.558;\n};\n\nvar getScrollTime = function (pixels) {\n  return Math.round(Math.abs(pixels) / getScrollSpeed(pixels));\n};\n\nvar now = function () {\n  return window.performance ? window.performance.now() : Date.now();\n};\n\nvar ease = function (k) {\n  return 0.5 * (1 - Math.cos(Math.PI * k));\n};\n\nvar step = function (context) {\n  var time = now();\n  var elapsed = Math.min((time - context.startTime) / context.scrollTime, 1);\n  var value = ease(elapsed);\n  var currentX = context.startX + (context.endX - context.startX) * value;\n  context.scrollable.scrollLeft = currentX;\n\n  if (currentX !== context.endX) {\n    requestAnimationFrame(function () {\n      return step(context);\n    });\n  }\n};\n\nvar simulateSmoothScroll = function (element, endX) {\n  var startX = element.scrollLeft;\n  step({\n    scrollable: element,\n    startX: startX,\n    endX: endX,\n    startTime: now(),\n    scrollTime: getScrollTime(endX - startX)\n  });\n};\n\nvar smoothScroll = function (element, to) {\n  if (isMotionDisabled(element)) {\n    element.scrollLeft = to;\n    return;\n  }\n\n  if (isNativeSmoothScrollingSupported() && element.scrollTo) {\n    element.scrollTo({\n      left: to,\n      behavior: 'smooth'\n    });\n    return;\n  }\n\n  simulateSmoothScroll(element, to);\n};\n\nexport default smoothScroll;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/tabs/smooth-scroll.js"],"names":["isMotionDisabled","isNativeSmoothScrollingSupported","getScrollSpeed","pixels","Math","abs","getScrollTime","round","now","window","performance","Date","ease","k","cos","PI","step","context","time","elapsed","min","startTime","scrollTime","value","currentX","startX","endX","scrollable","scrollLeft","requestAnimationFrame","simulateSmoothScroll","element","smoothScroll","to","scrollTo","left","behavior"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,gCAAP,MAA6C,kCAA7C;;AACA,IAAIC,cAAc,GAAG,UAAUC,MAAV,EAAkB;AAAE,SAAO,SAASC,IAAI,CAACC,GAAL,CAASF,MAAT,CAAT,GAA4B,KAAnC;AAA2C,CAApF;;AACA,IAAIG,aAAa,GAAG,UAAUH,MAAV,EAAkB;AAAE,SAAOC,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACC,GAAL,CAASF,MAAT,IAAmBD,cAAc,CAACC,MAAD,CAA5C,CAAP;AAA+D,CAAvG;;AACA,IAAIK,GAAG,GAAG,YAAY;AAAE,SAAQC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACC,WAAP,CAAmBF,GAAnB,EAArB,GAAgDG,IAAI,CAACH,GAAL,EAAxD;AAAsE,CAA9F;;AACA,IAAII,IAAI,GAAG,UAAUC,CAAV,EAAa;AACpB,SAAO,OAAO,IAAIT,IAAI,CAACU,GAAL,CAASV,IAAI,CAACW,EAAL,GAAUF,CAAnB,CAAX,CAAP;AACH,CAFD;;AAGA,IAAIG,IAAI,GAAG,UAAUC,OAAV,EAAmB;AAC1B,MAAIC,IAAI,GAAGV,GAAG,EAAd;AACA,MAAIW,OAAO,GAAGf,IAAI,CAACgB,GAAL,CAAS,CAACF,IAAI,GAAGD,OAAO,CAACI,SAAhB,IAA6BJ,OAAO,CAACK,UAA9C,EAA0D,CAA1D,CAAd;AACA,MAAIC,KAAK,GAAGX,IAAI,CAACO,OAAD,CAAhB;AACA,MAAIK,QAAQ,GAAGP,OAAO,CAACQ,MAAR,GAAiB,CAACR,OAAO,CAACS,IAAR,GAAeT,OAAO,CAACQ,MAAxB,IAAkCF,KAAlE;AACAN,EAAAA,OAAO,CAACU,UAAR,CAAmBC,UAAnB,GAAgCJ,QAAhC;;AACA,MAAIA,QAAQ,KAAKP,OAAO,CAACS,IAAzB,EAA+B;AAC3BG,IAAAA,qBAAqB,CAAC,YAAY;AAAE,aAAOb,IAAI,CAACC,OAAD,CAAX;AAAuB,KAAtC,CAArB;AACH;AACJ,CATD;;AAUA,IAAIa,oBAAoB,GAAG,UAAUC,OAAV,EAAmBL,IAAnB,EAAyB;AAChD,MAAID,MAAM,GAAGM,OAAO,CAACH,UAArB;AACAZ,EAAAA,IAAI,CAAC;AACDW,IAAAA,UAAU,EAAEI,OADX;AAEDN,IAAAA,MAAM,EAAEA,MAFP;AAGDC,IAAAA,IAAI,EAAEA,IAHL;AAIDL,IAAAA,SAAS,EAAEb,GAAG,EAJb;AAKDc,IAAAA,UAAU,EAAEhB,aAAa,CAACoB,IAAI,GAAGD,MAAR;AALxB,GAAD,CAAJ;AAOH,CATD;;AAUA,IAAIO,YAAY,GAAG,UAAUD,OAAV,EAAmBE,EAAnB,EAAuB;AACtC,MAAIjC,gBAAgB,CAAC+B,OAAD,CAApB,EAA+B;AAC3BA,IAAAA,OAAO,CAACH,UAAR,GAAqBK,EAArB;AACA;AACH;;AACD,MAAIhC,gCAAgC,MAAM8B,OAAO,CAACG,QAAlD,EAA4D;AACxDH,IAAAA,OAAO,CAACG,QAAR,CAAiB;AACbC,MAAAA,IAAI,EAAEF,EADO;AAEbG,MAAAA,QAAQ,EAAE;AAFG,KAAjB;AAIA;AACH;;AACDN,EAAAA,oBAAoB,CAACC,OAAD,EAAUE,EAAV,CAApB;AACH,CAbD;;AAcA,eAAeD,YAAf","sourcesContent":["import { isMotionDisabled } from '../internal/motion';\nimport isNativeSmoothScrollingSupported from './native-smooth-scroll-supported';\nvar getScrollSpeed = function (pixels) { return 0.0015 * Math.abs(pixels) + 0.558; };\nvar getScrollTime = function (pixels) { return Math.round(Math.abs(pixels) / getScrollSpeed(pixels)); };\nvar now = function () { return (window.performance ? window.performance.now() : Date.now()); };\nvar ease = function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n};\nvar step = function (context) {\n    var time = now();\n    var elapsed = Math.min((time - context.startTime) / context.scrollTime, 1);\n    var value = ease(elapsed);\n    var currentX = context.startX + (context.endX - context.startX) * value;\n    context.scrollable.scrollLeft = currentX;\n    if (currentX !== context.endX) {\n        requestAnimationFrame(function () { return step(context); });\n    }\n};\nvar simulateSmoothScroll = function (element, endX) {\n    var startX = element.scrollLeft;\n    step({\n        scrollable: element,\n        startX: startX,\n        endX: endX,\n        startTime: now(),\n        scrollTime: getScrollTime(endX - startX)\n    });\n};\nvar smoothScroll = function (element, to) {\n    if (isMotionDisabled(element)) {\n        element.scrollLeft = to;\n        return;\n    }\n    if (isNativeSmoothScrollingSupported() && element.scrollTo) {\n        element.scrollTo({\n            left: to,\n            behavior: 'smooth'\n        });\n        return;\n    }\n    simulateSmoothScroll(element, to);\n};\nexport default smoothScroll;\n"]},"metadata":{},"sourceType":"module"}