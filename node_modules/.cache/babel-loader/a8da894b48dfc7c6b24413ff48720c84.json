{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalBox from '../box/internal';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { warnOnce } from '../internal/logging';\nimport InternalChartFilters from './chart-filters';\nimport InternalChartLegend from './chart-legend';\nimport ChartContainer from './chart-container';\nimport cartesianStyles from '../internal/components/cartesian-chart/styles.css.js';\nimport styles from './styles.css.js';\nimport { isDevelopment } from '../internal/is-development';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport mergeRefs from 'react-merge-refs';\nimport { nodeContains } from '../internal/utils/dom';\nexport default function InternalMixedLineBarChart(_a) {\n  var _b;\n\n  var _c = _a.height,\n      height = _c === void 0 ? 500 : _c,\n      _d = _a.xScaleType,\n      xScaleType = _d === void 0 ? 'linear' : _d,\n      _e = _a.yScaleType,\n      yScaleType = _e === void 0 ? 'linear' : _e,\n      xDomain = _a.xDomain,\n      yDomain = _a.yDomain,\n      controlledHighlightedSeries = _a.highlightedSeries,\n      controlledVisibleSeries = _a.visibleSeries,\n      _f = _a.series,\n      externalSeries = _f === void 0 ? [] : _f,\n      onFilterChange = _a.onFilterChange,\n      controlledOnHighlightChange = _a.onHighlightChange,\n      i18nStrings = _a.i18nStrings,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaDescription = _a.ariaDescription,\n      xTitle = _a.xTitle,\n      yTitle = _a.yTitle,\n      _g = _a.stackedBars,\n      stackedBars = _g === void 0 ? false : _g,\n      _h = _a.horizontalBars,\n      horizontalBars = _h === void 0 ? false : _h,\n      hideFilter = _a.hideFilter,\n      additionalFilters = _a.additionalFilters,\n      hideLegend = _a.hideLegend,\n      legendTitle = _a.legendTitle,\n      _j = _a.statusType,\n      statusType = _j === void 0 ? 'finished' : _j,\n      _k = _a.detailPopoverSize,\n      detailPopoverSize = _k === void 0 ? 'medium' : _k,\n      _l = _a.emphasizeBaselineAxis,\n      emphasizeBaselineAxis = _l === void 0 ? true : _l,\n      empty = _a.empty,\n      noMatch = _a.noMatch,\n      errorText = _a.errorText,\n      loadingText = _a.loadingText,\n      recoveryText = _a.recoveryText,\n      onRecoveryClick = _a.onRecoveryClick,\n      _m = _a.__internalRootRef,\n      __internalRootRef = _m === void 0 ? null : _m,\n      props = __rest(_a, [\"height\", \"xScaleType\", \"yScaleType\", \"xDomain\", \"yDomain\", \"highlightedSeries\", \"visibleSeries\", \"series\", \"onFilterChange\", \"onHighlightChange\", \"i18nStrings\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescription\", \"xTitle\", \"yTitle\", \"stackedBars\", \"horizontalBars\", \"hideFilter\", \"additionalFilters\", \"hideLegend\", \"legendTitle\", \"statusType\", \"detailPopoverSize\", \"emphasizeBaselineAxis\", \"empty\", \"noMatch\", \"errorText\", \"loadingText\", \"recoveryText\", \"onRecoveryClick\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(props);\n  var containerRef = useRef(null);\n  useEffect(function () {\n    var gotBarSeries = externalSeries.some(function (s) {\n      return s.type === 'bar';\n    });\n    var gotLineSeries = externalSeries.some(function (s) {\n      return s.type === 'line';\n    });\n\n    if (xScaleType !== 'categorical' && gotBarSeries) {\n      warnOnce('MixedLineBarChart', \"Bar series cannot be used with a \" + xScaleType + \" scale. Use a categorical x axis instead.\");\n    }\n\n    if (horizontalBars && gotLineSeries) {\n      warnOnce('MixedLineBarChart', \"Property horizontalBars can only be used with charts that contain only bar or threshold series.\");\n    }\n  }, [xScaleType, horizontalBars, externalSeries]);\n  var series = useMemo(function () {\n    var colors = createCategoryColorScale(externalSeries, function (it) {\n      return it.type === 'threshold';\n    }, function (it) {\n      return it.color || null;\n    });\n    return externalSeries.map(function (s, i) {\n      return {\n        index: i,\n        color: colors[i],\n        series: s\n      };\n    });\n  }, [externalSeries]);\n\n  var _o = useState(null),\n      highlightedPoint = _o[0],\n      setHighlightedPoint = _o[1];\n\n  var _p = useState(null),\n      highlightedGroupIndex = _p[0],\n      setHighlightedGroupIndex = _p[1];\n\n  var _q = useControllable(controlledHighlightedSeries, controlledOnHighlightChange, null, {\n    componentName: 'MixedLineBarChart',\n    controlledProp: 'highlightedSeries',\n    changeHandler: 'onHighlightChange'\n  }),\n      _r = _q[0],\n      highlightedSeries = _r === void 0 ? null : _r,\n      setHighlightedSeries = _q[1];\n\n  var _s = useState(highlightedSeries),\n      legendSeries = _s[0],\n      setLegendSeries = _s[1];\n\n  useEffect(function () {\n    setLegendSeries(controlledHighlightedSeries || null);\n  }, [controlledHighlightedSeries]);\n\n  var _t = useControllable(controlledVisibleSeries, onFilterChange, externalSeries, {\n    componentName: 'MixedLineBarChart',\n    controlledProp: 'visibleSeries',\n    changeHandler: 'onFilterChange'\n  }),\n      externalVisibleSeries = _t[0],\n      setExternalVisibleSeries = _t[1];\n\n  if (isDevelopment) {\n    var previousSeries = usePrevious(externalSeries);\n    var hasPrevious = !!(previousSeries && previousSeries.length);\n    var hasCurrent = !!externalSeries.length;\n\n    if (hasPrevious && hasCurrent && externalSeries !== previousSeries && !controlledVisibleSeries && !hideFilter) {\n      warnOnce('MixedLineBarChart', 'The `series` value passed into the component changed. ' + 'This may cause problems with filtering - we recommend that you make the `series` value constant, ' + 'or provide a `visibleSeries` value that derives from the current `series` value.');\n    }\n  }\n\n  var visibleSeries = useMemo(function () {\n    return series.filter(function (s) {\n      return (externalVisibleSeries === null || externalVisibleSeries === void 0 ? void 0 : externalVisibleSeries.indexOf(s.series)) !== -1;\n    });\n  }, [series, externalVisibleSeries]);\n\n  var filterChange = function (selectedSeries) {\n    setExternalVisibleSeries(selectedSeries);\n    fireNonCancelableEvent(onFilterChange, {\n      visibleSeries: selectedSeries\n    });\n  };\n\n  var onHighlightChange = function (series) {\n    setHighlightedSeries(series);\n    fireNonCancelableEvent(controlledOnHighlightChange, {\n      highlightedSeries: series\n    });\n    series && setLegendSeries(series);\n  };\n\n  var onBlur = function (event) {\n    if (event.relatedTarget && !nodeContains(containerRef.current, event.relatedTarget)) {\n      highlightedSeries && onHighlightChange(highlightedSeries);\n      setHighlightedPoint(null);\n      setHighlightedGroupIndex(null);\n      setLegendSeries(null);\n    }\n  };\n\n  var _u = getChartStatus({\n    externalData: externalSeries,\n    visibleData: visibleSeries || [],\n    statusType: statusType\n  }),\n      isEmpty = _u.isEmpty,\n      isNoMatch = _u.isNoMatch,\n      showChart = _u.showChart;\n\n  var showFilters = statusType === 'finished' && (!isEmpty || isNoMatch);\n  var showLegend = !hideLegend && !isEmpty && statusType === 'finished';\n  var reserveLegendSpace = !showChart && !hideLegend;\n  var reserveFilterSpace = !showChart && !isNoMatch && (!hideFilter || additionalFilters);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergeRefs([containerRef, __internalRootRef]),\n    onBlur: onBlur\n  }), showFilters && React.createElement(InternalBox, {\n    className: cartesianStyles['filter-container'],\n    margin: {\n      bottom: 'l'\n    }\n  }, React.createElement(InternalChartFilters, {\n    series: series,\n    visibleSeries: externalVisibleSeries || [],\n    onChange: filterChange,\n    i18nStrings: i18nStrings,\n    hideFilter: hideFilter,\n    additionalFilters: additionalFilters\n  })), React.createElement(\"div\", {\n    className: clsx(styles.content, (_b = {}, _b[styles['content--reserve-filter']] = reserveFilterSpace, _b[styles['content--reserve-legend']] = reserveLegendSpace, _b)),\n    style: {\n      minHeight: height\n    }\n  }, React.createElement(ChartStatusContainer, {\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    showChart: showChart,\n    statusType: statusType,\n    empty: empty,\n    noMatch: noMatch,\n    loadingText: loadingText,\n    errorText: errorText,\n    recoveryText: recoveryText,\n    onRecoveryClick: onRecoveryClick\n  }), showChart && React.createElement(ChartContainer, {\n    height: height,\n    xScaleType: xScaleType,\n    yScaleType: yScaleType,\n    xDomain: xDomain,\n    yDomain: yDomain,\n    xTickFormatter: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.xTickFormatter,\n    yTickFormatter: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.yTickFormatter,\n    emphasizeBaselineAxis: emphasizeBaselineAxis,\n    stackedBars: stackedBars,\n    horizontalBars: horizontalBars,\n    series: series,\n    visibleSeries: visibleSeries,\n    highlightedSeries: highlightedSeries,\n    onHighlightChange: onHighlightChange,\n    highlightedPoint: highlightedPoint,\n    setHighlightedPoint: setHighlightedPoint,\n    highlightedGroupIndex: highlightedGroupIndex,\n    setHighlightedGroupIndex: setHighlightedGroupIndex,\n    legendSeries: legendSeries,\n    detailPopoverSize: detailPopoverSize,\n    xTitle: xTitle,\n    yTitle: yTitle,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescription: ariaDescription,\n    i18nStrings: i18nStrings\n  })), showLegend && React.createElement(InternalBox, {\n    margin: {\n      top: 'm'\n    }\n  }, React.createElement(InternalChartLegend, {\n    series: series,\n    visibleSeries: externalVisibleSeries || [],\n    highlightedSeries: legendSeries,\n    onHighlightChange: onHighlightChange,\n    legendTitle: legendTitle,\n    ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel\n  })));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/mixed-line-bar-chart/internal.js"],"names":["__assign","__rest","React","useEffect","useMemo","useRef","useState","clsx","getBaseProps","fireNonCancelableEvent","InternalBox","ChartStatusContainer","getChartStatus","useControllable","usePrevious","warnOnce","InternalChartFilters","InternalChartLegend","ChartContainer","cartesianStyles","styles","isDevelopment","createCategoryColorScale","mergeRefs","nodeContains","InternalMixedLineBarChart","_a","_b","_c","height","_d","xScaleType","_e","yScaleType","xDomain","yDomain","controlledHighlightedSeries","highlightedSeries","controlledVisibleSeries","visibleSeries","_f","series","externalSeries","onFilterChange","controlledOnHighlightChange","onHighlightChange","i18nStrings","ariaLabel","ariaLabelledby","ariaDescription","xTitle","yTitle","_g","stackedBars","_h","horizontalBars","hideFilter","additionalFilters","hideLegend","legendTitle","_j","statusType","_k","detailPopoverSize","_l","emphasizeBaselineAxis","empty","noMatch","errorText","loadingText","recoveryText","onRecoveryClick","_m","__internalRootRef","props","baseProps","containerRef","gotBarSeries","some","s","type","gotLineSeries","colors","it","color","map","i","index","_o","highlightedPoint","setHighlightedPoint","_p","highlightedGroupIndex","setHighlightedGroupIndex","_q","componentName","controlledProp","changeHandler","_r","setHighlightedSeries","_s","legendSeries","setLegendSeries","_t","externalVisibleSeries","setExternalVisibleSeries","previousSeries","hasPrevious","length","hasCurrent","filter","indexOf","filterChange","selectedSeries","onBlur","event","relatedTarget","current","_u","externalData","visibleData","isEmpty","isNoMatch","showChart","showFilters","showLegend","reserveLegendSpace","reserveFilterSpace","createElement","className","root","ref","margin","bottom","onChange","content","style","minHeight","xTickFormatter","yTickFormatter","top","legendAriaLabel"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalBox from '../box/internal';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { warnOnce } from '../internal/logging';\nimport InternalChartFilters from './chart-filters';\nimport InternalChartLegend from './chart-legend';\nimport ChartContainer from './chart-container';\nimport cartesianStyles from '../internal/components/cartesian-chart/styles.css.js';\nimport styles from './styles.css.js';\nimport { isDevelopment } from '../internal/is-development';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport mergeRefs from 'react-merge-refs';\nimport { nodeContains } from '../internal/utils/dom';\nexport default function InternalMixedLineBarChart(_a) {\n    var _b;\n    var _c = _a.height, height = _c === void 0 ? 500 : _c, _d = _a.xScaleType, xScaleType = _d === void 0 ? 'linear' : _d, _e = _a.yScaleType, yScaleType = _e === void 0 ? 'linear' : _e, xDomain = _a.xDomain, yDomain = _a.yDomain, controlledHighlightedSeries = _a.highlightedSeries, controlledVisibleSeries = _a.visibleSeries, _f = _a.series, externalSeries = _f === void 0 ? [] : _f, onFilterChange = _a.onFilterChange, controlledOnHighlightChange = _a.onHighlightChange, i18nStrings = _a.i18nStrings, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, ariaDescription = _a.ariaDescription, xTitle = _a.xTitle, yTitle = _a.yTitle, _g = _a.stackedBars, stackedBars = _g === void 0 ? false : _g, _h = _a.horizontalBars, horizontalBars = _h === void 0 ? false : _h, hideFilter = _a.hideFilter, additionalFilters = _a.additionalFilters, hideLegend = _a.hideLegend, legendTitle = _a.legendTitle, _j = _a.statusType, statusType = _j === void 0 ? 'finished' : _j, _k = _a.detailPopoverSize, detailPopoverSize = _k === void 0 ? 'medium' : _k, _l = _a.emphasizeBaselineAxis, emphasizeBaselineAxis = _l === void 0 ? true : _l, empty = _a.empty, noMatch = _a.noMatch, errorText = _a.errorText, loadingText = _a.loadingText, recoveryText = _a.recoveryText, onRecoveryClick = _a.onRecoveryClick, _m = _a.__internalRootRef, __internalRootRef = _m === void 0 ? null : _m, props = __rest(_a, [\"height\", \"xScaleType\", \"yScaleType\", \"xDomain\", \"yDomain\", \"highlightedSeries\", \"visibleSeries\", \"series\", \"onFilterChange\", \"onHighlightChange\", \"i18nStrings\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescription\", \"xTitle\", \"yTitle\", \"stackedBars\", \"horizontalBars\", \"hideFilter\", \"additionalFilters\", \"hideLegend\", \"legendTitle\", \"statusType\", \"detailPopoverSize\", \"emphasizeBaselineAxis\", \"empty\", \"noMatch\", \"errorText\", \"loadingText\", \"recoveryText\", \"onRecoveryClick\", \"__internalRootRef\"]);\n    var baseProps = getBaseProps(props);\n    var containerRef = useRef(null);\n    useEffect(function () {\n        var gotBarSeries = externalSeries.some(function (s) { return s.type === 'bar'; });\n        var gotLineSeries = externalSeries.some(function (s) { return s.type === 'line'; });\n        if (xScaleType !== 'categorical' && gotBarSeries) {\n            warnOnce('MixedLineBarChart', \"Bar series cannot be used with a \" + xScaleType + \" scale. Use a categorical x axis instead.\");\n        }\n        if (horizontalBars && gotLineSeries) {\n            warnOnce('MixedLineBarChart', \"Property horizontalBars can only be used with charts that contain only bar or threshold series.\");\n        }\n    }, [xScaleType, horizontalBars, externalSeries]);\n    var series = useMemo(function () {\n        var colors = createCategoryColorScale(externalSeries, function (it) { return it.type === 'threshold'; }, function (it) { return it.color || null; });\n        return externalSeries.map(function (s, i) { return ({\n            index: i,\n            color: colors[i],\n            series: s\n        }); });\n    }, [externalSeries]);\n    var _o = useState(null), highlightedPoint = _o[0], setHighlightedPoint = _o[1];\n    var _p = useState(null), highlightedGroupIndex = _p[0], setHighlightedGroupIndex = _p[1];\n    var _q = useControllable(controlledHighlightedSeries, controlledOnHighlightChange, null, {\n        componentName: 'MixedLineBarChart',\n        controlledProp: 'highlightedSeries',\n        changeHandler: 'onHighlightChange'\n    }), _r = _q[0], highlightedSeries = _r === void 0 ? null : _r, setHighlightedSeries = _q[1];\n    var _s = useState(highlightedSeries), legendSeries = _s[0], setLegendSeries = _s[1];\n    useEffect(function () {\n        setLegendSeries(controlledHighlightedSeries || null);\n    }, [controlledHighlightedSeries]);\n    var _t = useControllable(controlledVisibleSeries, onFilterChange, externalSeries, {\n        componentName: 'MixedLineBarChart',\n        controlledProp: 'visibleSeries',\n        changeHandler: 'onFilterChange'\n    }), externalVisibleSeries = _t[0], setExternalVisibleSeries = _t[1];\n    if (isDevelopment) {\n        var previousSeries = usePrevious(externalSeries);\n        var hasPrevious = !!(previousSeries && previousSeries.length);\n        var hasCurrent = !!externalSeries.length;\n        if (hasPrevious && hasCurrent && externalSeries !== previousSeries && !controlledVisibleSeries && !hideFilter) {\n            warnOnce('MixedLineBarChart', 'The `series` value passed into the component changed. ' +\n                'This may cause problems with filtering - we recommend that you make the `series` value constant, ' +\n                'or provide a `visibleSeries` value that derives from the current `series` value.');\n        }\n    }\n    var visibleSeries = useMemo(function () { return series.filter(function (s) { return (externalVisibleSeries === null || externalVisibleSeries === void 0 ? void 0 : externalVisibleSeries.indexOf(s.series)) !== -1; }); }, [series, externalVisibleSeries]);\n    var filterChange = function (selectedSeries) {\n        setExternalVisibleSeries(selectedSeries);\n        fireNonCancelableEvent(onFilterChange, {\n            visibleSeries: selectedSeries\n        });\n    };\n    var onHighlightChange = function (series) {\n        setHighlightedSeries(series);\n        fireNonCancelableEvent(controlledOnHighlightChange, {\n            highlightedSeries: series\n        });\n        series && setLegendSeries(series);\n    };\n    var onBlur = function (event) {\n        if (event.relatedTarget && !nodeContains(containerRef.current, event.relatedTarget)) {\n            highlightedSeries && onHighlightChange(highlightedSeries);\n            setHighlightedPoint(null);\n            setHighlightedGroupIndex(null);\n            setLegendSeries(null);\n        }\n    };\n    var _u = getChartStatus({\n        externalData: externalSeries,\n        visibleData: visibleSeries || [],\n        statusType: statusType\n    }), isEmpty = _u.isEmpty, isNoMatch = _u.isNoMatch, showChart = _u.showChart;\n    var showFilters = statusType === 'finished' && (!isEmpty || isNoMatch);\n    var showLegend = !hideLegend && !isEmpty && statusType === 'finished';\n    var reserveLegendSpace = !showChart && !hideLegend;\n    var reserveFilterSpace = !showChart && !isNoMatch && (!hideFilter || additionalFilters);\n    return (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(baseProps.className, styles.root), ref: mergeRefs([containerRef, __internalRootRef]), onBlur: onBlur }),\n        showFilters && (React.createElement(InternalBox, { className: cartesianStyles['filter-container'], margin: { bottom: 'l' } },\n            React.createElement(InternalChartFilters, { series: series, visibleSeries: externalVisibleSeries || [], onChange: filterChange, i18nStrings: i18nStrings, hideFilter: hideFilter, additionalFilters: additionalFilters }))),\n        React.createElement(\"div\", { className: clsx(styles.content, (_b = {},\n                _b[styles['content--reserve-filter']] = reserveFilterSpace,\n                _b[styles['content--reserve-legend']] = reserveLegendSpace,\n                _b)), style: { minHeight: height } },\n            React.createElement(ChartStatusContainer, { isEmpty: isEmpty, isNoMatch: isNoMatch, showChart: showChart, statusType: statusType, empty: empty, noMatch: noMatch, loadingText: loadingText, errorText: errorText, recoveryText: recoveryText, onRecoveryClick: onRecoveryClick }),\n            showChart && (React.createElement(ChartContainer, { height: height, xScaleType: xScaleType, yScaleType: yScaleType, xDomain: xDomain, yDomain: yDomain, xTickFormatter: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.xTickFormatter, yTickFormatter: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.yTickFormatter, emphasizeBaselineAxis: emphasizeBaselineAxis, stackedBars: stackedBars, horizontalBars: horizontalBars, series: series, visibleSeries: visibleSeries, highlightedSeries: highlightedSeries, onHighlightChange: onHighlightChange, highlightedPoint: highlightedPoint, setHighlightedPoint: setHighlightedPoint, highlightedGroupIndex: highlightedGroupIndex, setHighlightedGroupIndex: setHighlightedGroupIndex, legendSeries: legendSeries, detailPopoverSize: detailPopoverSize, xTitle: xTitle, yTitle: yTitle, ariaLabel: ariaLabel, ariaLabelledby: ariaLabelledby, ariaDescription: ariaDescription, i18nStrings: i18nStrings }))),\n        showLegend && (React.createElement(InternalBox, { margin: { top: 'm' } },\n            React.createElement(InternalChartLegend, { series: series, visibleSeries: externalVisibleSeries || [], highlightedSeries: legendSeries, onHighlightChange: onHighlightChange, legendTitle: legendTitle, ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel })))));\n}\n"]},"metadata":{},"sourceType":"module"}