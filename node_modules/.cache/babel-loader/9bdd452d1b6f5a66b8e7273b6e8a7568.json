{"ast":null,"code":"import { useState } from 'react';\nimport { nodeContains } from '../../internal/utils/dom';\nimport styles from '../styles.css.js';\nvar MAX_HOVER_MARGIN = 6;\nexport function useMouseHover(_a) {\n  var plotRef = _a.plotRef,\n      scaledSeries = _a.scaledSeries,\n      barGroups = _a.barGroups,\n      highlightSeries = _a.highlightSeries,\n      highlightPoint = _a.highlightPoint,\n      highlightGroup = _a.highlightGroup,\n      clearHighlightedSeries = _a.clearHighlightedSeries,\n      isGroupNavigation = _a.isGroupNavigation,\n      isHandlersDisabled = _a.isHandlersDisabled;\n\n  var _b = useState(null),\n      verticalMarkerLeft = _b[0],\n      setVerticalMarkerLeft = _b[1];\n\n  var onSeriesMouseMove = function (event) {\n    var svgRect = event.target.getBoundingClientRect();\n    var offsetX = event.clientX - svgRect.left;\n    var offsetY = event.clientY - svgRect.top;\n    var closestX = scaledSeries.map(function (v) {\n      return v.x;\n    }).reduce(function (prev, curr) {\n      return Math.abs(curr - offsetX) < Math.abs(prev - offsetX) ? curr : prev;\n    }, -Infinity);\n    var closestY = scaledSeries.filter(function (v) {\n      return v.x === closestX || v.series.type === 'threshold';\n    }).map(function (v) {\n      return v.y;\n    }).reduce(function (prev, curr) {\n      return Math.abs(curr - offsetY) < Math.abs(prev - offsetY) ? curr : prev;\n    }, -Infinity);\n\n    if (isFinite(closestX)) {\n      setVerticalMarkerLeft(closestX);\n\n      if (isFinite(closestY) && Math.abs(offsetX - closestX) < MAX_HOVER_MARGIN && Math.abs(offsetY - closestY) < MAX_HOVER_MARGIN) {\n        var _a = scaledSeries.filter(function (s) {\n          return (s.x === closestX || s.series.type === 'threshold') && s.y === closestY;\n        })[0],\n            color = _a.color,\n            datum = _a.datum,\n            series = _a.series;\n        highlightSeries(series);\n        highlightPoint({\n          x: closestX,\n          y: closestY,\n          color: color,\n          datum: datum,\n          series: series\n        });\n      } else {\n        highlightSeries(null);\n        highlightPoint(null);\n      }\n    }\n  };\n\n  var onGroupMouseMove = function (event) {\n    var svgRect = event.target.getBoundingClientRect();\n    var offsetX = event.clientX - svgRect.left;\n    var offsetY = event.clientY - svgRect.top;\n\n    for (var groupIndex = 0; groupIndex < barGroups.length; groupIndex++) {\n      var _a = barGroups[groupIndex].position,\n          x = _a.x,\n          y = _a.y,\n          width = _a.width,\n          height = _a.height;\n\n      if (x <= offsetX && offsetX <= x + width && y <= offsetY && offsetY <= y + height) {\n        highlightGroup(groupIndex);\n        return;\n      }\n    }\n\n    clearHighlightedSeries();\n  };\n\n  var onSVGMouseMove = function (event) {\n    if (event.target === plotRef.current.svg && !isHandlersDisabled) {\n      if (isGroupNavigation) {\n        onGroupMouseMove(event);\n      } else if (scaledSeries.length > 0) {\n        onSeriesMouseMove(event);\n      }\n    }\n  };\n\n  var onSVGMouseOut = function (event) {\n    if (isHandlersDisabled) {\n      return;\n    }\n\n    if (!nodeContains(plotRef.current.svg, event.relatedTarget) || (event.relatedTarget && event.relatedTarget.getAttribute('class') || '').split(' ').indexOf(styles.series) > -1) {\n      setVerticalMarkerLeft(null);\n      clearHighlightedSeries();\n    }\n  };\n\n  return {\n    verticalMarkerLeft: verticalMarkerLeft,\n    onSVGMouseMove: onSVGMouseMove,\n    onSVGMouseOut: onSVGMouseOut\n  };\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/mixed-line-bar-chart/hooks/use-mouse-hover.js"],"names":["useState","nodeContains","styles","MAX_HOVER_MARGIN","useMouseHover","_a","plotRef","scaledSeries","barGroups","highlightSeries","highlightPoint","highlightGroup","clearHighlightedSeries","isGroupNavigation","isHandlersDisabled","_b","verticalMarkerLeft","setVerticalMarkerLeft","onSeriesMouseMove","event","svgRect","target","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","closestX","map","v","x","reduce","prev","curr","Math","abs","Infinity","closestY","filter","series","type","y","isFinite","s","color","datum","onGroupMouseMove","groupIndex","length","position","width","height","onSVGMouseMove","current","svg","onSVGMouseOut","relatedTarget","getAttribute","split","indexOf"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { nodeContains } from '../../internal/utils/dom';\nimport styles from '../styles.css.js';\nvar MAX_HOVER_MARGIN = 6;\nexport function useMouseHover(_a) {\n    var plotRef = _a.plotRef, scaledSeries = _a.scaledSeries, barGroups = _a.barGroups, highlightSeries = _a.highlightSeries, highlightPoint = _a.highlightPoint, highlightGroup = _a.highlightGroup, clearHighlightedSeries = _a.clearHighlightedSeries, isGroupNavigation = _a.isGroupNavigation, isHandlersDisabled = _a.isHandlersDisabled;\n    var _b = useState(null), verticalMarkerLeft = _b[0], setVerticalMarkerLeft = _b[1];\n    var onSeriesMouseMove = function (event) {\n        var svgRect = event.target.getBoundingClientRect();\n        var offsetX = event.clientX - svgRect.left;\n        var offsetY = event.clientY - svgRect.top;\n        var closestX = scaledSeries\n            .map(function (v) { return v.x; })\n            .reduce(function (prev, curr) { return (Math.abs(curr - offsetX) < Math.abs(prev - offsetX) ? curr : prev); }, -Infinity);\n        var closestY = scaledSeries\n            .filter(function (v) { return v.x === closestX || v.series.type === 'threshold'; })\n            .map(function (v) { return v.y; })\n            .reduce(function (prev, curr) { return (Math.abs(curr - offsetY) < Math.abs(prev - offsetY) ? curr : prev); }, -Infinity);\n        if (isFinite(closestX)) {\n            setVerticalMarkerLeft(closestX);\n            if (isFinite(closestY) &&\n                Math.abs(offsetX - closestX) < MAX_HOVER_MARGIN &&\n                Math.abs(offsetY - closestY) < MAX_HOVER_MARGIN) {\n                var _a = scaledSeries.filter(function (s) { return (s.x === closestX || s.series.type === 'threshold') && s.y === closestY; })[0], color = _a.color, datum = _a.datum, series = _a.series;\n                highlightSeries(series);\n                highlightPoint({ x: closestX, y: closestY, color: color, datum: datum, series: series });\n            }\n            else {\n                highlightSeries(null);\n                highlightPoint(null);\n            }\n        }\n    };\n    var onGroupMouseMove = function (event) {\n        var svgRect = event.target.getBoundingClientRect();\n        var offsetX = event.clientX - svgRect.left;\n        var offsetY = event.clientY - svgRect.top;\n        for (var groupIndex = 0; groupIndex < barGroups.length; groupIndex++) {\n            var _a = barGroups[groupIndex].position, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n            if (x <= offsetX && offsetX <= x + width && y <= offsetY && offsetY <= y + height) {\n                highlightGroup(groupIndex);\n                return;\n            }\n        }\n        clearHighlightedSeries();\n    };\n    var onSVGMouseMove = function (event) {\n        if (event.target === plotRef.current.svg && !isHandlersDisabled) {\n            if (isGroupNavigation) {\n                onGroupMouseMove(event);\n            }\n            else if (scaledSeries.length > 0) {\n                onSeriesMouseMove(event);\n            }\n        }\n    };\n    var onSVGMouseOut = function (event) {\n        if (isHandlersDisabled) {\n            return;\n        }\n        if (!nodeContains(plotRef.current.svg, event.relatedTarget) ||\n            ((event.relatedTarget && event.relatedTarget.getAttribute('class')) || '')\n                .split(' ')\n                .indexOf(styles.series) > -1) {\n            setVerticalMarkerLeft(null);\n            clearHighlightedSeries();\n        }\n    };\n    return { verticalMarkerLeft: verticalMarkerLeft, onSVGMouseMove: onSVGMouseMove, onSVGMouseOut: onSVGMouseOut };\n}\n"]},"metadata":{},"sourceType":"module"}