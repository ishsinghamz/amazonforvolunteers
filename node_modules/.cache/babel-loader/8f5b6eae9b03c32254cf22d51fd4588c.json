{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nvar InternalToggle = React.forwardRef(function (_a, ref) {\n  var _b, _c;\n\n  var controlId = _a.controlId,\n      checked = _a.checked,\n      name = _a.name,\n      disabled = _a.disabled,\n      children = _a.children,\n      description = _a.description,\n      ariaLabel = _a.ariaLabel,\n      ariaDescribedby = _a.ariaDescribedby,\n      ariaLabelledby = _a.ariaLabelledby,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      _d = _a.__internalRootRef,\n      __internalRootRef = _d === void 0 ? null : _d,\n      rest = __rest(_a, [\"controlId\", \"checked\", \"name\", \"disabled\", \"children\", \"description\", \"ariaLabel\", \"ariaDescribedby\", \"ariaLabelledby\", \"onFocus\", \"onBlur\", \"onChange\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n  var checkboxRef = useRef(null);\n  useForwardFocus(ref, checkboxRef);\n  return React.createElement(AbstractSwitch, __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    controlClassName: clsx(styles['toggle-control'], (_b = {}, _b[styles['toggle-control-checked']] = checked, _b[styles['toggle-control-disabled']] = disabled, _b)),\n    controlId: controlId,\n    disabled: disabled,\n    label: children,\n    description: description,\n    descriptionBottomPadding: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    nativeControl: function (nativeControlProps) {\n      return React.createElement(\"input\", __assign({}, nativeControlProps, {\n        ref: checkboxRef,\n        className: styles.input,\n        type: \"checkbox\",\n        checked: checked,\n        name: name,\n        onFocus: onFocus && function () {\n          return fireNonCancelableEvent(onFocus);\n        },\n        onBlur: onBlur && function () {\n          return fireNonCancelableEvent(onBlur);\n        },\n        onChange: onChange && function (event) {\n          return fireNonCancelableEvent(onChange, {\n            checked: event.target.checked\n          });\n        }\n      }));\n    },\n    styledControl: React.createElement(\"div\", {\n      className: clsx(styles['toggle-handle'], (_c = {}, _c[styles['toggle-handle-checked']] = checked, _c[styles['toggle-handle-disabled']] = disabled, _c))\n    }),\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default InternalToggle;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/toggle/internal.js"],"names":["__assign","__rest","clsx","React","useRef","AbstractSwitch","useForwardFocus","fireNonCancelableEvent","getBaseProps","styles","InternalToggle","forwardRef","_a","ref","_b","_c","controlId","checked","name","disabled","children","description","ariaLabel","ariaDescribedby","ariaLabelledby","onFocus","onBlur","onChange","_d","__internalRootRef","rest","baseProps","checkboxRef","createElement","className","root","controlClassName","label","descriptionBottomPadding","nativeControl","nativeControlProps","input","type","event","target","styledControl"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,IAAIC,cAAc,GAAGP,KAAK,CAACQ,UAAN,CAAiB,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AACrD,MAAIC,EAAJ,EAAQC,EAAR;;AACA,MAAIC,SAAS,GAAGJ,EAAE,CAACI,SAAnB;AAAA,MAA8BC,OAAO,GAAGL,EAAE,CAACK,OAA3C;AAAA,MAAoDC,IAAI,GAAGN,EAAE,CAACM,IAA9D;AAAA,MAAoEC,QAAQ,GAAGP,EAAE,CAACO,QAAlF;AAAA,MAA4FC,QAAQ,GAAGR,EAAE,CAACQ,QAA1G;AAAA,MAAoHC,WAAW,GAAGT,EAAE,CAACS,WAArI;AAAA,MAAkJC,SAAS,GAAGV,EAAE,CAACU,SAAjK;AAAA,MAA4KC,eAAe,GAAGX,EAAE,CAACW,eAAjM;AAAA,MAAkNC,cAAc,GAAGZ,EAAE,CAACY,cAAtO;AAAA,MAAsPC,OAAO,GAAGb,EAAE,CAACa,OAAnQ;AAAA,MAA4QC,MAAM,GAAGd,EAAE,CAACc,MAAxR;AAAA,MAAgSC,QAAQ,GAAGf,EAAE,CAACe,QAA9S;AAAA,MAAwTC,EAAE,GAAGhB,EAAE,CAACiB,iBAAhU;AAAA,MAAmVA,iBAAiB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA9X;AAAA,MAAkYE,IAAI,GAAG7B,MAAM,CAACW,EAAD,EAAK,CAAC,WAAD,EAAc,SAAd,EAAyB,MAAzB,EAAiC,UAAjC,EAA6C,UAA7C,EAAyD,aAAzD,EAAwE,WAAxE,EAAqF,iBAArF,EAAwG,gBAAxG,EAA0H,SAA1H,EAAqI,QAArI,EAA+I,UAA/I,EAA2J,mBAA3J,CAAL,CAA/Y;;AACA,MAAImB,SAAS,GAAGvB,YAAY,CAACsB,IAAD,CAA5B;AACA,MAAIE,WAAW,GAAG5B,MAAM,CAAC,IAAD,CAAxB;AACAE,EAAAA,eAAe,CAACO,GAAD,EAAMmB,WAAN,CAAf;AACA,SAAQ7B,KAAK,CAAC8B,aAAN,CAAoB5B,cAApB,EAAoCL,QAAQ,CAAC,EAAD,EAAK+B,SAAL,EAAgB;AAAEG,IAAAA,SAAS,EAAEhC,IAAI,CAACO,MAAM,CAAC0B,IAAR,EAAcJ,SAAS,CAACG,SAAxB,CAAjB;AAAqDE,IAAAA,gBAAgB,EAAElC,IAAI,CAACO,MAAM,CAAC,gBAAD,CAAP,GAA4BK,EAAE,GAAG,EAAL,EACnKA,EAAE,CAACL,MAAM,CAAC,wBAAD,CAAP,CAAF,GAAuCQ,OAD4H,EAEnKH,EAAE,CAACL,MAAM,CAAC,yBAAD,CAAP,CAAF,GAAwCU,QAF2H,EAGnKL,EAHuI,EAA3E;AAGtDE,IAAAA,SAAS,EAAEA,SAH2C;AAGhCG,IAAAA,QAAQ,EAAEA,QAHsB;AAGZkB,IAAAA,KAAK,EAAEjB,QAHK;AAGKC,IAAAA,WAAW,EAAEA,WAHlB;AAG+BiB,IAAAA,wBAAwB,EAAE,IAHzD;AAG+DhB,IAAAA,SAAS,EAAEA,SAH1E;AAGqFE,IAAAA,cAAc,EAAEA,cAHrG;AAGqHD,IAAAA,eAAe,EAAEA,eAHtI;AAGuJgB,IAAAA,aAAa,EAAE,UAAUC,kBAAV,EAA8B;AAAE,aAAQrC,KAAK,CAAC8B,aAAN,CAAoB,OAApB,EAA6BjC,QAAQ,CAAC,EAAD,EAAKwC,kBAAL,EAAyB;AAAE3B,QAAAA,GAAG,EAAEmB,WAAP;AAAoBE,QAAAA,SAAS,EAAEzB,MAAM,CAACgC,KAAtC;AAA6CC,QAAAA,IAAI,EAAE,UAAnD;AAA+DzB,QAAAA,OAAO,EAAEA,OAAxE;AAAiFC,QAAAA,IAAI,EAAEA,IAAvF;AAA6FO,QAAAA,OAAO,EAAEA,OAAO,IAAK,YAAY;AAAE,iBAAOlB,sBAAsB,CAACkB,OAAD,CAA7B;AAAyC,SAAzK;AAA4KC,QAAAA,MAAM,EAAEA,MAAM,IAAK,YAAY;AAAE,iBAAOnB,sBAAsB,CAACmB,MAAD,CAA7B;AAAwC,SAArP;AAAwPC,QAAAA,QAAQ,EAAEA,QAAQ,IAAK,UAAUgB,KAAV,EAAiB;AAAE,iBAAOpC,sBAAsB,CAACoB,QAAD,EAAW;AAAEV,YAAAA,OAAO,EAAE0B,KAAK,CAACC,MAAN,CAAa3B;AAAxB,WAAX,CAA7B;AAA6E;AAA/W,OAAzB,CAArC,CAAR;AAA8b,KAHpoB;AAGsoB4B,IAAAA,aAAa,EAAE1C,KAAK,CAAC8B,aAAN,CAAoB,KAApB,EAA2B;AAAEC,MAAAA,SAAS,EAAEhC,IAAI,CAACO,MAAM,CAAC,eAAD,CAAP,GAA2BM,EAAE,GAAG,EAAL,EACpxBA,EAAE,CAACN,MAAM,CAAC,uBAAD,CAAP,CAAF,GAAsCQ,OAD8uB,EAEpxBF,EAAE,CAACN,MAAM,CAAC,wBAAD,CAAP,CAAF,GAAuCU,QAF6uB,EAGpxBJ,EAHyvB;AAAjB,KAA3B,CAHrpB;AAM/Cc,IAAAA,iBAAiB,EAAEA;AAN4B,GAAhB,CAA5C,CAAR;AAOH,CAboB,CAArB;AAcA,eAAenB,cAAf","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nvar InternalToggle = React.forwardRef(function (_a, ref) {\n    var _b, _c;\n    var controlId = _a.controlId, checked = _a.checked, name = _a.name, disabled = _a.disabled, children = _a.children, description = _a.description, ariaLabel = _a.ariaLabel, ariaDescribedby = _a.ariaDescribedby, ariaLabelledby = _a.ariaLabelledby, onFocus = _a.onFocus, onBlur = _a.onBlur, onChange = _a.onChange, _d = _a.__internalRootRef, __internalRootRef = _d === void 0 ? null : _d, rest = __rest(_a, [\"controlId\", \"checked\", \"name\", \"disabled\", \"children\", \"description\", \"ariaLabel\", \"ariaDescribedby\", \"ariaLabelledby\", \"onFocus\", \"onBlur\", \"onChange\", \"__internalRootRef\"]);\n    var baseProps = getBaseProps(rest);\n    var checkboxRef = useRef(null);\n    useForwardFocus(ref, checkboxRef);\n    return (React.createElement(AbstractSwitch, __assign({}, baseProps, { className: clsx(styles.root, baseProps.className), controlClassName: clsx(styles['toggle-control'], (_b = {},\n            _b[styles['toggle-control-checked']] = checked,\n            _b[styles['toggle-control-disabled']] = disabled,\n            _b)), controlId: controlId, disabled: disabled, label: children, description: description, descriptionBottomPadding: true, ariaLabel: ariaLabel, ariaLabelledby: ariaLabelledby, ariaDescribedby: ariaDescribedby, nativeControl: function (nativeControlProps) { return (React.createElement(\"input\", __assign({}, nativeControlProps, { ref: checkboxRef, className: styles.input, type: \"checkbox\", checked: checked, name: name, onFocus: onFocus && (function () { return fireNonCancelableEvent(onFocus); }), onBlur: onBlur && (function () { return fireNonCancelableEvent(onBlur); }), onChange: onChange && (function (event) { return fireNonCancelableEvent(onChange, { checked: event.target.checked }); }) }))); }, styledControl: React.createElement(\"div\", { className: clsx(styles['toggle-handle'], (_c = {},\n                _c[styles['toggle-handle-checked']] = checked,\n                _c[styles['toggle-handle-disabled']] = disabled,\n                _c)) }), __internalRootRef: __internalRootRef })));\n});\nexport default InternalToggle;\n"]},"metadata":{},"sourceType":"module"}