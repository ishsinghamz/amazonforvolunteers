{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { addDays } from './add-days';\nimport { setDate } from './set-date';\nvar DAYS_IN_WEEK = 7;\nexport var getCalendarMonth = function getCalendarMonth(date, options) {\n  var _firstDayOfWeek$optio = _objectSpread({\n    firstDayOfWeek: 1\n  }, options),\n      firstDayOfWeek = _firstDayOfWeek$optio.firstDayOfWeek;\n\n  var firstDateOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  var lastDateOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  var firstWeekdayOfMonth = firstDateOfMonth.getDay();\n  var lastWeekdayOfMonth = lastDateOfMonth.getDay();\n  var daysInMonth = lastDateOfMonth.getDate();\n  var daysToPrepend = (firstWeekdayOfMonth - firstDayOfWeek + DAYS_IN_WEEK) % DAYS_IN_WEEK;\n  var daysToAppend = (DAYS_IN_WEEK - 1 - lastWeekdayOfMonth + firstDayOfWeek) % DAYS_IN_WEEK;\n  var month = [];\n  var week = [];\n\n  for (var i = 1 - daysToPrepend; i <= daysInMonth + daysToAppend + 1; i++) {\n    if (i <= 0) {\n      week.push(addDays(firstDateOfMonth, i - 1));\n    } else if (i > daysInMonth) {\n      week.push(addDays(lastDateOfMonth, i - daysInMonth));\n    } else {\n      week.push(setDate(date, i));\n    }\n\n    if (week.length === 7) {\n      month.push(week);\n      week = [];\n    }\n  }\n\n  return month;\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,YAAY,GAAG,CAArB;AAMA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAaC,OAAb,EAA8C;AAAA;AAE1EC,kBAAc,EAAE;AAF0D,KAGvED,OAHuE;AAAA,MACpEC,cADoE,yBACpEA,cADoE;;AAK5E,MAAMC,gBAAgB,GAAG,IAAIC,IAAJ,CAASJ,IAAI,CAACK,WAALL,EAAT,EAA6BA,IAAI,CAACM,QAALN,EAA7B,EAA8C,CAA9C,CAAzB;AACA,MAAMO,eAAe,GAAG,IAAIH,IAAJ,CAASJ,IAAI,CAACK,WAALL,EAAT,EAA6BA,IAAI,CAACM,QAALN,KAAkB,CAA/C,EAAkD,CAAlD,CAAxB;AACA,MAAMQ,mBAAmB,GAAGL,gBAAgB,CAACM,MAAjBN,EAA5B;AACA,MAAMO,kBAAkB,GAAGH,eAAe,CAACE,MAAhBF,EAA3B;AACA,MAAMI,WAAW,GAAGJ,eAAe,CAACK,OAAhBL,EAApB;AACA,MAAMM,aAAa,GAAG,CAACL,mBAAmB,GAAGN,cAAtBM,GAAuCV,YAAxC,IAAwDA,YAA9E;AACA,MAAMgB,YAAY,GAAG,CAAChB,YAAY,GAAG,CAAfA,GAAmBY,kBAAnBZ,GAAwCI,cAAzC,IAA2DJ,YAAhF;AACA,MAAMiB,KAAe,GAAG,EAAxB;AACA,MAAIC,IAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,IAAIJ,aAAjB,EAAgCI,CAAC,IAAIN,WAAW,GAAGG,YAAdH,GAA6B,CAAlE,EAAqEM,CAAC,EAAtE,EAA0E;AACxE,QAAIA,CAAC,IAAI,CAAT,EAAY;AACVD,UAAI,CAACE,IAALF,CACEpB,OAAO,CAACO,gBAAD,EAAmBc,CAAC,GAAG,CAAvB,CADTD;AADF,WAIO,IAAIC,CAAC,GAAGN,WAAR,EAAqB;AAC1BK,UAAI,CAACE,IAALF,CACEpB,OAAO,CAACW,eAAD,EAAkBU,CAAC,GAAGN,WAAtB,CADTK;AADK,WAIA;AACLA,UAAI,CAACE,IAALF,CACEnB,OAAO,CAACG,IAAD,EAAOiB,CAAP,CADTD;AAGD;;AAED,QAAIA,IAAI,CAACG,MAALH,KAAgB,CAApB,EAAuB;AACrBD,WAAK,CAACG,IAANH,CAAWC,IAAXD;AACAC,UAAI,GAAG,EAAPA;AACD;AACF;;AAED,SAAOD,KAAP;AApCK","names":["addDays","setDate","DAYS_IN_WEEK","getCalendarMonth","date","options","firstDayOfWeek","firstDateOfMonth","Date","getFullYear","getMonth","lastDateOfMonth","firstWeekdayOfMonth","getDay","lastWeekdayOfMonth","daysInMonth","getDate","daysToPrepend","daysToAppend","month","week","i","push","length"],"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/mnth/web/index.ts"],"sourcesContent":["import { addDays } from './add-days'\nimport { setDate } from './set-date'\n\nconst DAYS_IN_WEEK = 7\n\ntype TOptions = {\n  firstDayOfWeek: 0 | 1 | 2 | 3 | 4 | 5 | 6,\n}\n\nexport const getCalendarMonth = (date: Date, options?: TOptions): Date[][] => {\n  const { firstDayOfWeek } = {\n    firstDayOfWeek: 1,\n    ...options,\n  }\n  const firstDateOfMonth = new Date(date.getFullYear(), date.getMonth(), 1)\n  const lastDateOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n  const firstWeekdayOfMonth = firstDateOfMonth.getDay()\n  const lastWeekdayOfMonth = lastDateOfMonth.getDay()\n  const daysInMonth = lastDateOfMonth.getDate()\n  const daysToPrepend = (firstWeekdayOfMonth - firstDayOfWeek + DAYS_IN_WEEK) % DAYS_IN_WEEK\n  const daysToAppend = (DAYS_IN_WEEK - 1 - lastWeekdayOfMonth + firstDayOfWeek) % DAYS_IN_WEEK\n  const month: Date[][] = []\n  let week: Date[] = []\n\n  for (let i = 1 - daysToPrepend; i <= daysInMonth + daysToAppend + 1; i++) {\n    if (i <= 0) {\n      week.push(\n        addDays(firstDateOfMonth, i - 1)\n      )\n    } else if (i > daysInMonth) {\n      week.push(\n        addDays(lastDateOfMonth, i - daysInMonth)\n      )\n    } else {\n      week.push(\n        setDate(date, i)\n      )\n    }\n\n    if (week.length === 7) {\n      month.push(week)\n      week = []\n    }\n  }\n\n  return month\n}\n"]},"metadata":{},"sourceType":"module"}