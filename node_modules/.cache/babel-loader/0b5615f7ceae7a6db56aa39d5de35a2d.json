{"ast":null,"code":"import { matchesX } from './utils';\nexport default function makeScaledBarGroups(series, xScale, plotWidth, plotHeight, axis) {\n  if (!xScale.isCategorical()) {\n    return [];\n  }\n\n  return xScale.domain.map(function (x) {\n    var scaledX = xScale.d3Scale(x);\n    var isValid = typeof scaledX !== 'undefined' && isFinite(scaledX);\n    return {\n      x: x,\n      isValid: isValid,\n      hasData: series.some(function (_a) {\n        var series = _a.series;\n\n        if (series.type === 'threshold') {\n          return true;\n        }\n\n        return series.data.some(function (datum) {\n          return matchesX(datum.x, x);\n        });\n      }),\n      position: axis === 'x' ? {\n        x: 0,\n        y: isValid ? scaledX || 0 : 0,\n        width: plotWidth,\n        height: xScale.d3Scale.bandwidth()\n      } : {\n        x: isValid ? scaledX || 0 : 0,\n        y: 0,\n        width: xScale.d3Scale.bandwidth(),\n        height: plotHeight\n      }\n    };\n  });\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/mixed-line-bar-chart/make-scaled-bar-groups.js"],"names":["matchesX","makeScaledBarGroups","series","xScale","plotWidth","plotHeight","axis","isCategorical","domain","map","x","scaledX","d3Scale","isValid","isFinite","hasData","some","_a","type","data","datum","position","y","width","height","bandwidth"],"mappings":"AAAA,SAASA,QAAT,QAAyB,SAAzB;AACA,eAAe,SAASC,mBAAT,CAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwDC,UAAxD,EAAoEC,IAApE,EAA0E;AACrF,MAAI,CAACH,MAAM,CAACI,aAAP,EAAL,EAA6B;AACzB,WAAO,EAAP;AACH;;AACD,SAAOJ,MAAM,CAACK,MAAP,CAAcC,GAAd,CAAkB,UAAUC,CAAV,EAAa;AAClC,QAAIC,OAAO,GAAGR,MAAM,CAACS,OAAP,CAAeF,CAAf,CAAd;AACA,QAAIG,OAAO,GAAG,OAAOF,OAAP,KAAmB,WAAnB,IAAkCG,QAAQ,CAACH,OAAD,CAAxD;AACA,WAAO;AACHD,MAAAA,CAAC,EAAEA,CADA;AAEHG,MAAAA,OAAO,EAAEA,OAFN;AAGHE,MAAAA,OAAO,EAAEb,MAAM,CAACc,IAAP,CAAY,UAAUC,EAAV,EAAc;AAC/B,YAAIf,MAAM,GAAGe,EAAE,CAACf,MAAhB;;AACA,YAAIA,MAAM,CAACgB,IAAP,KAAgB,WAApB,EAAiC;AAC7B,iBAAO,IAAP;AACH;;AACD,eAAOhB,MAAM,CAACiB,IAAP,CAAYH,IAAZ,CAAiB,UAAUI,KAAV,EAAiB;AAAE,iBAAOpB,QAAQ,CAACoB,KAAK,CAACV,CAAP,EAAUA,CAAV,CAAf;AAA8B,SAAlE,CAAP;AACH,OANQ,CAHN;AAUHW,MAAAA,QAAQ,EAAEf,IAAI,KAAK,GAAT,GACJ;AACEI,QAAAA,CAAC,EAAE,CADL;AAEEY,QAAAA,CAAC,EAAET,OAAO,GAAGF,OAAO,IAAI,CAAd,GAAkB,CAF9B;AAGEY,QAAAA,KAAK,EAAEnB,SAHT;AAIEoB,QAAAA,MAAM,EAAErB,MAAM,CAACS,OAAP,CAAea,SAAf;AAJV,OADI,GAOJ;AACEf,QAAAA,CAAC,EAAEG,OAAO,GAAGF,OAAO,IAAI,CAAd,GAAkB,CAD9B;AAEEW,QAAAA,CAAC,EAAE,CAFL;AAGEC,QAAAA,KAAK,EAAEpB,MAAM,CAACS,OAAP,CAAea,SAAf,EAHT;AAIED,QAAAA,MAAM,EAAEnB;AAJV;AAjBH,KAAP;AAwBH,GA3BM,CAAP;AA4BH","sourcesContent":["import { matchesX } from './utils';\nexport default function makeScaledBarGroups(series, xScale, plotWidth, plotHeight, axis) {\n    if (!xScale.isCategorical()) {\n        return [];\n    }\n    return xScale.domain.map(function (x) {\n        var scaledX = xScale.d3Scale(x);\n        var isValid = typeof scaledX !== 'undefined' && isFinite(scaledX);\n        return {\n            x: x,\n            isValid: isValid,\n            hasData: series.some(function (_a) {\n                var series = _a.series;\n                if (series.type === 'threshold') {\n                    return true;\n                }\n                return series.data.some(function (datum) { return matchesX(datum.x, x); });\n            }),\n            position: axis === 'x'\n                ? {\n                    x: 0,\n                    y: isValid ? scaledX || 0 : 0,\n                    width: plotWidth,\n                    height: xScale.d3Scale.bandwidth()\n                }\n                : {\n                    x: isValid ? scaledX || 0 : 0,\n                    y: 0,\n                    width: xScale.d3Scale.bandwidth(),\n                    height: plotHeight\n                }\n        };\n    });\n}\n"]},"metadata":{},"sourceType":"module"}