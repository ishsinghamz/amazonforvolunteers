{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { applyDefaults } from './defaults';\nimport { Notifications } from './notifications';\nimport { MobileToolbar } from './mobile-toolbar';\nimport { SplitPanelWrapper } from './split-panel-wrapper';\nimport { useFocusControl } from './utils/use-focus-control';\nimport useWindowWidth from './utils/use-window-width';\nimport useContentHeight from './utils/use-content-height';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-utils/styles.css.js';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { AppLayoutDomContext } from '../internal/context/app-layout-context';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { useStableEventHandler } from '../internal/hooks/use-stable-event-handler';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getSplitPanelDefaultSize, MAIN_PANEL_MIN_HEIGHT } from '../split-panel/utils/size-utils';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useDensityMode, useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport ContentWrapper from './content-wrapper';\nimport { DarkHeader } from './dark-header';\nimport { isMotionDisabled } from '../internal/motion';\nimport { useEffectOnUpdate } from '../internal/hooks/use-effect-on-update';\nimport { NavigationPanel } from './navigation-panel';\nimport { ToolsAndSplitPanel } from './tools-and-split-panel';\nimport { usePreviousFrameValue } from '../internal/hooks/use-previous-frame';\nimport useAppLayoutOffsets from './utils/use-content-width';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '../internal/logging';\nimport RefreshedAppLayout from './visual-refresh';\nvar AppLayout = React.forwardRef(function (_a, ref) {\n  var _b = _a.contentType,\n      contentType = _b === void 0 ? 'default' : _b,\n      _c = _a.headerSelector,\n      headerSelector = _c === void 0 ? '#b #h' : _c,\n      _d = _a.footerSelector,\n      footerSelector = _d === void 0 ? '#b #f' : _d,\n      rest = __rest(_a, [\"contentType\", \"headerSelector\", \"footerSelector\"]);\n\n  var __internalRootRef = useBaseComponent('AppLayout').__internalRootRef;\n\n  var isRefresh = useVisualRefresh(__internalRootRef);\n\n  var props = __assign({\n    contentType: contentType,\n    headerSelector: headerSelector,\n    footerSelector: footerSelector\n  }, rest);\n\n  if (isRefresh) {\n    return React.createElement(RefreshedAppLayout, __assign({\n      __internalRootRef: __internalRootRef\n    }, props, {\n      ref: ref\n    }));\n  } else {\n    return React.createElement(OldAppLayout, __assign({\n      __internalRootRef: __internalRootRef\n    }, props, {\n      ref: ref\n    }));\n  }\n});\nvar OldAppLayout = React.forwardRef(function (_a, ref) {\n  var _b, _c;\n\n  var _d;\n\n  var navigation = _a.navigation,\n      _e = _a.navigationWidth,\n      navigationWidth = _e === void 0 ? 280 : _e,\n      navigationHide = _a.navigationHide,\n      controlledNavigationOpen = _a.navigationOpen,\n      tools = _a.tools,\n      _f = _a.toolsWidth,\n      toolsWidth = _f === void 0 ? 290 : _f,\n      toolsHide = _a.toolsHide,\n      controlledToolsOpen = _a.toolsOpen,\n      breadcrumbs = _a.breadcrumbs,\n      notifications = _a.notifications,\n      stickyNotifications = _a.stickyNotifications,\n      contentHeader = _a.contentHeader,\n      disableContentHeaderOverlap = _a.disableContentHeaderOverlap,\n      content = _a.content,\n      _g = _a.contentType,\n      contentType = _g === void 0 ? 'default' : _g,\n      disableContentPaddings = _a.disableContentPaddings,\n      disableBodyScroll = _a.disableBodyScroll,\n      maxContentWidth = _a.maxContentWidth,\n      minContentWidth = _a.minContentWidth,\n      _h = _a.headerSelector,\n      headerSelector = _h === void 0 ? '#b #h' : _h,\n      _j = _a.footerSelector,\n      footerSelector = _j === void 0 ? '#b #f' : _j,\n      ariaLabels = _a.ariaLabels,\n      splitPanel = _a.splitPanel,\n      controlledSplitPanelSize = _a.splitPanelSize,\n      controlledSplitPanelOpen = _a.splitPanelOpen,\n      controlledSplitPanelPreferences = _a.splitPanelPreferences,\n      onSplitPanelPreferencesChange = _a.onSplitPanelPreferencesChange,\n      onSplitPanelResize = _a.onSplitPanelResize,\n      onSplitPanelToggle = _a.onSplitPanelToggle,\n      onNavigationChange = _a.onNavigationChange,\n      onToolsChange = _a.onToolsChange,\n      __internalRootRef = _a.__internalRootRef,\n      rest = __rest(_a, [\"navigation\", \"navigationWidth\", \"navigationHide\", \"navigationOpen\", \"tools\", \"toolsWidth\", \"toolsHide\", \"toolsOpen\", \"breadcrumbs\", \"notifications\", \"stickyNotifications\", \"contentHeader\", \"disableContentHeaderOverlap\", \"content\", \"contentType\", \"disableContentPaddings\", \"disableBodyScroll\", \"maxContentWidth\", \"minContentWidth\", \"headerSelector\", \"footerSelector\", \"ariaLabels\", \"splitPanel\", \"splitPanelSize\", \"splitPanelOpen\", \"splitPanelPreferences\", \"onSplitPanelPreferencesChange\", \"onSplitPanelResize\", \"onSplitPanelToggle\", \"onNavigationChange\", \"onToolsChange\", \"__internalRootRef\"]);\n\n  if (isDevelopment) {\n    if (controlledToolsOpen && toolsHide) {\n      warnOnce('AppLayout', \"You have enabled both the `toolsOpen` prop and the `toolsHide` prop. This is not supported. Set `toolsOpen` to `false` when you set `toolsHide` to `true`.\");\n    }\n  }\n\n  if (__internalRootRef === null) {\n    throw Error('__internalRootRef has to be passed.');\n  }\n\n  var baseProps = getBaseProps(rest);\n  var isMobile = useMobile();\n  var isRefresh = useVisualRefresh(__internalRootRef);\n  var isMotionEnabled = __internalRootRef.current ? !isMotionDisabled(__internalRootRef.current) : false;\n  var defaults = applyDefaults(contentType, {\n    maxContentWidth: maxContentWidth,\n    minContentWidth: minContentWidth\n  }, isRefresh);\n  var darkStickyHeaderContentType = ['cards', 'table'].indexOf(contentType) > -1;\n  var darkHeaderContentType = darkStickyHeaderContentType || contentType === 'wizard';\n\n  var _k = useControllable(controlledNavigationOpen, onNavigationChange, isMobile ? false : defaults.navigationOpen, {\n    componentName: 'AppLayout',\n    controlledProp: 'navigationOpen',\n    changeHandler: 'onNavigationChange'\n  }),\n      _l = _k[0],\n      navigationOpen = _l === void 0 ? false : _l,\n      setNavigationOpen = _k[1];\n\n  var _m = useState(navigationOpen ? 'entered' : 'exited'),\n      navigationPanelTransitionState = _m[0],\n      setNavigationPanelTransitionState = _m[1];\n\n  var _o = useControllable(controlledToolsOpen, onToolsChange, isMobile ? false : defaults.toolsOpen, {\n    componentName: 'AppLayout',\n    controlledProp: 'toolsOpen',\n    changeHandler: 'onToolsChange'\n  }),\n      _p = _o[0],\n      toolsOpen = _p === void 0 ? false : _p,\n      setToolsOpen = _o[1];\n\n  var _q = useState(toolsOpen ? 'entered' : 'exited'),\n      toolsPanelTransitionState = _q[0],\n      setToolsPanelTransitionState = _q[1];\n\n  var onNavigationToggle = useCallback(function (open) {\n    setNavigationOpen(open);\n    fireNonCancelableEvent(onNavigationChange, {\n      open: open\n    });\n  }, [setNavigationOpen, onNavigationChange]);\n  var onToolsToggle = useCallback(function (open) {\n    setToolsOpen(open);\n    fireNonCancelableEvent(onToolsChange, {\n      open: open\n    });\n  }, [setToolsOpen, onToolsChange]);\n\n  var onNavigationClick = function (event) {\n    var hasLink = findUpUntil(event.target, function (node) {\n      return node.tagName === 'A' && !!node.href;\n    });\n\n    if (hasLink) {\n      onNavigationToggle(false);\n    }\n  };\n\n  var navigationVisible = !navigationHide && navigationOpen;\n  var toolsVisible = !toolsHide && toolsOpen;\n\n  var _r = useContentHeight(headerSelector, footerSelector, disableBodyScroll),\n      contentHeightStyle = _r.contentHeightStyle,\n      headerHeight = _r.headerHeight,\n      footerHeight = _r.footerHeight,\n      panelHeightStyle = _r.panelHeightStyle;\n\n  var _s = useContainerQuery(function (rect) {\n    return rect.height;\n  }),\n      notificationsHeight = _s[0],\n      notificationsRef = _s[1];\n\n  var _t = useContainerQuery(function (rect) {\n    return splitPanel ? rect.height : 0;\n  }, [splitPanel]),\n      splitPanelHeight = _t[0],\n      splitPanelRef = _t[1];\n\n  var _u = useContainerQuery(function (rect) {\n    return splitPanel ? rect.height : 0;\n  }, [splitPanel]),\n      splitPanelHeaderHeight = _u[0],\n      splitPanelHeaderRef = _u[1];\n\n  var anyPanelOpen = navigationVisible || toolsVisible;\n  var hasRenderedNotifications = notificationsHeight ? notificationsHeight > 0 : false;\n  var stickyNotificationsHeight = stickyNotifications ? notificationsHeight : null;\n\n  var _v = useControllable(controlledSplitPanelPreferences, onSplitPanelPreferencesChange, undefined, {\n    componentName: 'AppLayout',\n    controlledProp: 'splitPanelPreferences',\n    changeHandler: 'onSplitPanelPreferencesChange'\n  }),\n      splitPanelPreferences = _v[0],\n      setSplitPanelPreferences = _v[1];\n\n  var splitPanelPosition = (splitPanelPreferences === null || splitPanelPreferences === void 0 ? void 0 : splitPanelPreferences.position) || 'bottom';\n  var densityMode = useDensityMode(__internalRootRef);\n  var closedDrawerWidth = isRefresh ? densityMode === 'compact' ? 72 : 80 : 40;\n  var effectiveNavigationWidth = navigationHide ? 0 : navigationOpen ? navigationWidth : disableContentPaddings && isRefresh ? 0 : closedDrawerWidth;\n  var effectiveToolsWidth = toolsHide && (!splitPanel || (splitPanelPreferences === null || splitPanelPreferences === void 0 ? void 0 : splitPanelPreferences.position) !== 'side') ? 0 : toolsOpen ? toolsWidth : disableContentPaddings && isRefresh ? 0 : closedDrawerWidth;\n  var defaultSplitPanelSize = getSplitPanelDefaultSize(splitPanelPosition);\n\n  var _w = useControllable(controlledSplitPanelSize, onSplitPanelResize, defaultSplitPanelSize, {\n    componentName: 'AppLayout',\n    controlledProp: 'splitPanelSize',\n    changeHandler: 'onSplitPanelResize'\n  }),\n      _x = _w[0],\n      splitPanelSize = _x === void 0 ? defaultSplitPanelSize : _x,\n      setSplitPanelSize = _w[1];\n\n  var _y = useControllable(controlledSplitPanelOpen, onSplitPanelToggle, false, {\n    componentName: 'AppLayout',\n    controlledProp: 'splitPanelOpen',\n    changeHandler: 'onSplitPanelToggle'\n  }),\n      _z = _y[0],\n      splitPanelOpen = _z === void 0 ? false : _z,\n      setSplitPanelOpen = _y[1];\n\n  var _0 = useState(splitPanelOpen ? 'entered' : 'exited'),\n      splitPanelTransitionState = _0[0],\n      setSplitPanelTransitionState = _0[1];\n\n  var mainContentRef = useRef(null);\n  var legacyScrollRootRef = useRef(null);\n  var onSplitPanelPreferencesSet = useCallback(function (detail) {\n    setSplitPanelPreferences(detail);\n    fireNonCancelableEvent(onSplitPanelPreferencesChange, detail);\n  }, [setSplitPanelPreferences, onSplitPanelPreferencesChange]);\n  var onSplitPanelSizeSet = useCallback(function (detail) {\n    setSplitPanelSize(detail.size);\n    fireNonCancelableEvent(onSplitPanelResize, detail);\n  }, [setSplitPanelSize, onSplitPanelResize]);\n  var onToggle = useCallback(function () {\n    setSplitPanelOpen(!splitPanelOpen);\n    fireNonCancelableEvent(onSplitPanelToggle, {\n      open: !splitPanelOpen\n    });\n  }, [setSplitPanelOpen, splitPanelOpen, onSplitPanelToggle]);\n  var getSplitPanelMaxWidth = useStableEventHandler(function () {\n    if (!mainContentRef.current || !defaults.minContentWidth) {\n      return NaN;\n    }\n\n    var width = parseInt(getComputedStyle(mainContentRef.current).width);\n    var contentPadding = disableContentPaddings ? 80 : 0;\n    var spaceAvailable = width - defaults.minContentWidth - contentPadding;\n    var spaceTaken = finalSplitPanePosition === 'side' ? splitPanelSize : 0;\n    return Math.max(0, spaceTaken + spaceAvailable);\n  });\n  var getSplitPanelMaxHeight = useStableEventHandler(function () {\n    if (typeof document === 'undefined') {\n      return 0;\n    } else if (disableBodyScroll && legacyScrollRootRef.current) {\n      return legacyScrollRootRef.current.clientHeight - MAIN_PANEL_MIN_HEIGHT;\n    } else {\n      return document.documentElement.clientHeight - headerHeight - footerHeight - MAIN_PANEL_MIN_HEIGHT;\n    }\n  });\n\n  var _1 = useState(false),\n      isForcedPosition = _1[0],\n      setIsForcedPosition = _1[1];\n\n  var finalSplitPanePosition = isForcedPosition ? 'bottom' : splitPanelPosition;\n  var splitPaneAvailableOnTheSide = Boolean(splitPanel) && finalSplitPanePosition === 'side';\n  var splitPanelOpenOnTheSide = splitPaneAvailableOnTheSide && splitPanelOpen;\n  var toggleButtonsBarWidth = isRefresh && (!toolsHide || splitPaneAvailableOnTheSide) ? closedDrawerWidth : 0;\n  var windowWidth = useWindowWidth();\n\n  var _2 = useAppLayoutOffsets(__internalRootRef.current),\n      leftOffset = _2.left,\n      rightOffset = _2.right;\n\n  var contentWidthWithSplitPanel = windowWidth - leftOffset - rightOffset - effectiveToolsWidth - effectiveNavigationWidth - (disableContentPaddings ? 0 : toggleButtonsBarWidth);\n  useEffect(function () {\n    var contentWidth = contentWidthWithSplitPanel - splitPanelSize;\n    setIsForcedPosition(isMobile || (defaults.minContentWidth || 0) > contentWidth);\n  }, [contentWidthWithSplitPanel, defaults.minContentWidth, isMobile]);\n  var navigationClosedWidth = navigationHide || isRefresh || isMobile ? 0 : closedDrawerWidth;\n  var toolsClosedWidth = toolsHide || isRefresh || isMobile ? 0 : closedDrawerWidth;\n  useEffectOnUpdate(function () {\n    if (finalSplitPanePosition === 'bottom') {\n      setSplitPanelTransitionState(splitPanelOpen ? 'entered' : 'exited');\n    }\n  }, [finalSplitPanePosition, splitPanelOpen]);\n\n  var _3 = useState(),\n      splitPanelLastInteraction = _3[0],\n      setSplitPanelLastInteraction = _3[1];\n\n  useEffectOnUpdate(function () {\n    return setSplitPanelLastInteraction(splitPanelOpen ? {\n      type: 'open'\n    } : {\n      type: 'close'\n    });\n  }, [splitPanelOpen]);\n  useEffectOnUpdate(function () {\n    return setSplitPanelLastInteraction({\n      type: 'position'\n    });\n  }, [splitPanelPosition]);\n  var contentMaxWidthStyle = !isMobile ? {\n    maxWidth: defaults.maxContentWidth\n  } : isRefresh ? {\n    maxWidth: '100%'\n  } : undefined;\n  var contentWrapperPaddings = !isMobile && isRefresh ? {\n    closedNav: !navigationHide && !navigationOpen,\n    closedTools: !toolsHide && !toolsOpen\n  } : undefined;\n\n  var _4 = useState(0),\n      splitPanelReportedSize = _4[0],\n      setSplitPanelReportedSize = _4[1];\n\n  var splitPanelContext = {\n    topOffset: (isRefresh ? 0 : headerHeight) + (finalSplitPanePosition === 'bottom' ? stickyNotificationsHeight || 0 : 0),\n    bottomOffset: footerHeight,\n    leftOffset: leftOffset + (isMobile ? 0 : !navigationHide && navigationOpen ? navigationWidth : navigationClosedWidth),\n    rightOffset: rightOffset + (isMobile ? 0 : !toolsHide && toolsOpen ? toolsWidth : toolsClosedWidth),\n    position: finalSplitPanePosition,\n    size: splitPanelSize,\n    getMaxWidth: getSplitPanelMaxWidth,\n    getMaxHeight: getSplitPanelMaxHeight,\n    disableContentPaddings: disableContentPaddings,\n    contentWidthStyles: contentMaxWidthStyle,\n    contentWrapperPaddings: contentWrapperPaddings,\n    isOpen: splitPanelOpen || splitPanelTransitionState === 'exiting' && isMotionEnabled,\n    isMobile: isMobile,\n    isRefresh: isRefresh,\n    isForcedPosition: isForcedPosition,\n    lastInteraction: splitPanelLastInteraction,\n    splitPanelRef: splitPanelRef,\n    splitPanelHeaderRef: splitPanelHeaderRef,\n    onResize: onSplitPanelSizeSet,\n    onToggle: onToggle,\n    onPreferencesChange: onSplitPanelPreferencesSet,\n    reportSize: setSplitPanelReportedSize\n  };\n  var contentWrapperProps = {\n    navigationPadding: navigationHide || !!navigationOpen,\n    toolsPadding: toolsHide && (!splitPanel || finalSplitPanePosition !== 'side') || toolsVisible || splitPanelOpenOnTheSide,\n    isRefresh: isRefresh,\n    isMobile: isMobile\n  };\n  var navigationRefs = useFocusControl(navigationOpen);\n  var toolsRefs = useFocusControl(toolsOpen);\n  useImperativeHandle(ref, function () {\n    return {\n      openTools: function () {\n        return onToolsToggle(true);\n      },\n      closeNavigationIfNecessary: function () {\n        if (isMobile) {\n          onNavigationToggle(false);\n        }\n      }\n    };\n  }, [isMobile, onNavigationToggle, onToolsToggle]);\n  var showSideButtonsBar = isRefresh && !!splitPanel && finalSplitPanePosition === 'side';\n  var splitPanelBottomOffset = (_d = !splitPanel || finalSplitPanePosition !== 'bottom' ? undefined : splitPanelOpen ? splitPanelHeight : splitPanelHeaderHeight) !== null && _d !== void 0 ? _d : undefined;\n  var contentWidthStyles = !isMobile ? {\n    minWidth: defaults.minContentWidth,\n    maxWidth: defaults.maxContentWidth\n  } : isRefresh ? {\n    maxWidth: '100%'\n  } : undefined;\n  var isToolsDrawerHidden = disableContentPaddings || !toolsOpen && showSideButtonsBar;\n\n  var toolsDrawerWidth = function () {\n    if (isMobile) {\n      return 0;\n    }\n\n    if (isRefresh) {\n      if (toolsHide && !splitPanelOpenOnTheSide) {\n        return 0;\n      }\n\n      if (!toolsVisible && !splitPanelOpenOnTheSide) {\n        return disableContentPaddings || showSideButtonsBar ? 0 : closedDrawerWidth;\n      }\n\n      var toolsPanelWidth = toolsVisible ? toolsWidth : 0;\n      var splitPanelWidth = splitPanelOpenOnTheSide ? splitPanelReportedSize : 0;\n      var buttonBar = disableContentPaddings && showSideButtonsBar && (!toolsHide || !splitPanelOpen) ? toggleButtonsBarWidth : 0;\n      return toolsPanelWidth + splitPanelWidth + buttonBar;\n    } else {\n      var toolsPanelWidth = toolsHide ? 0 : toolsOpen ? toolsWidth : closedDrawerWidth;\n      var splitPanelWidth = !splitPanel || finalSplitPanePosition !== 'side' ? 0 : splitPanelOpen ? splitPanelReportedSize : closedDrawerWidth;\n      return toolsPanelWidth + splitPanelWidth;\n    }\n  }();\n\n  var navigationDrawerWidth = function () {\n    if (isMobile) {\n      return 0;\n    }\n\n    if (disableContentPaddings && isRefresh && !navigationVisible) {\n      return 0;\n    }\n\n    return effectiveNavigationWidth;\n  }();\n\n  var contentHeaderProps = {\n    isMobile: isMobile,\n    isRefresh: isRefresh,\n    navigationWidth: effectiveNavigationWidth,\n    toolsWidth: disableContentPaddings ? 0 : toolsDrawerWidth ? toolsDrawerWidth : isToolsDrawerHidden ? toggleButtonsBarWidth : 0\n  };\n  var transitionInProgress = isMotionEnabled && [navigationPanelTransitionState, toolsPanelTransitionState, finalSplitPanePosition === 'side' ? splitPanelTransitionState : undefined].some(function (state) {\n    return state === 'entering' || state === 'exiting';\n  });\n  var previousContentWidth = usePreviousFrameValue(contentWidthWithSplitPanel - (splitPanelOpenOnTheSide ? splitPanelReportedSize : 0));\n\n  var contentScaleX = function () {\n    if (isMobile || !isMotionEnabled || !disableContentPaddings || !previousContentWidth) {\n      return undefined;\n    }\n\n    var transitionStarted = isMotionEnabled && [navigationPanelTransitionState, toolsPanelTransitionState, finalSplitPanePosition === 'side' ? splitPanelTransitionState : undefined].some(function (state) {\n      return state === 'enter' || state === 'exit';\n    });\n\n    if (transitionStarted) {\n      var newContentWidth = contentWidthWithSplitPanel - (splitPanelOpenOnTheSide ? splitPanelReportedSize : 0);\n      return previousContentWidth / newContentWidth;\n    }\n  }();\n\n  var navigationPanelTransitioning = isMotionEnabled && ['enter', 'entering', 'exit', 'exiting'].indexOf(navigationPanelTransitionState) !== -1;\n  var toolsPanelTransitioning = isMotionEnabled && ['enter', 'entering', 'exit', 'exiting'].indexOf(toolsPanelTransitionState) !== -1;\n  var splitPanelTransitioning = isMotionEnabled && ['enter', 'entering', 'exit', 'exiting'].indexOf(splitPanelTransitionState) !== -1;\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles.root, testutilStyles.root, baseProps.className, disableBodyScroll && styles['root-no-scroll']),\n    ref: __internalRootRef\n  }), React.createElement(\"div\", {\n    className: styles['layout-wrapper'],\n    style: contentHeightStyle\n  }, isMobile && (!toolsHide || !navigationHide || breadcrumbs) && React.createElement(MobileToolbar, {\n    anyPanelOpen: anyPanelOpen && !transitionInProgress,\n    toggleRefs: {\n      navigation: navigationRefs.toggle,\n      tools: toolsRefs.toggle\n    },\n    isRefresh: isRefresh,\n    topOffset: headerHeight,\n    ariaLabels: ariaLabels,\n    navigationHide: navigationHide,\n    toolsHide: toolsHide,\n    onNavigationOpen: function () {\n      return onNavigationToggle(true);\n    },\n    onToolsOpen: function () {\n      return onToolsToggle(true);\n    },\n    unfocusable: anyPanelOpen && !transitionInProgress\n  }, breadcrumbs), React.createElement(\"div\", {\n    className: clsx(styles.layout, disableBodyScroll && styles['layout-no-scroll'])\n  }, !navigationHide && React.createElement(NavigationPanel, {\n    ariaLabels: ariaLabels,\n    footerHeight: footerHeight,\n    headerHeight: headerHeight,\n    isHidden: disableContentPaddings,\n    isMobile: isMobile,\n    isMotionEnabled: isMotionEnabled,\n    isRefresh: isRefresh,\n    navigation: navigation,\n    navigationDrawerWidth: navigationDrawerWidth,\n    navigationOpen: navigationOpen,\n    navigationPanelTransitionState: navigationPanelTransitionState,\n    onClick: isMobile ? onNavigationClick : undefined,\n    onNavigationToggle: onNavigationToggle,\n    panelHeightStyle: panelHeightStyle,\n    setNavigationPanelTransitionState: setNavigationPanelTransitionState,\n    toggleRefs: navigationRefs,\n    navigationWidth: navigationWidth\n  }), React.createElement(\"main\", {\n    ref: legacyScrollRootRef,\n    className: clsx(styles['layout-main'], (_b = {}, _b[styles['layout-main-scrollable']] = disableBodyScroll, _b[styles.unfocusable] = isMobile && anyPanelOpen && !transitionInProgress, _b))\n  }, React.createElement(\"div\", {\n    className: clsx(styles['layout-main-inner'], (_c = {}, _c[styles['enable-motion']] = isMotionEnabled && transitionInProgress, _c[styles.refresh] = isRefresh, _c)),\n    style: {\n      marginBottom: splitPanelBottomOffset,\n      transform: contentScaleX ? \"scaleX(\" + contentScaleX + \")\" : undefined,\n      transformOrigin: navigationPanelTransitioning ? 'right' : toolsPanelTransitioning || splitPanelTransitioning ? 'left' : undefined\n    }\n  }, notifications && React.createElement(DarkHeader, __assign({}, contentHeaderProps, {\n    topOffset: headerHeight,\n    sticky: !isMobile && darkStickyHeaderContentType && stickyNotifications\n  }), React.createElement(Notifications, {\n    testUtilsClassName: clsx(styles.notifications, testutilStyles.notifications),\n    labels: ariaLabels,\n    topOffset: headerHeight,\n    sticky: !isMobile && stickyNotifications,\n    ref: notificationsRef,\n    isRefresh: isRefresh,\n    isMobile: isMobile,\n    navigationPadding: contentWrapperProps.navigationPadding,\n    toolsPadding: contentWrapperProps.toolsPadding,\n    contentWidthStyles: contentWidthStyles\n  }, notifications)), (!isMobile && breadcrumbs || contentHeader) && React.createElement(DarkHeader, __assign({}, contentHeaderProps), React.createElement(ContentWrapper, __assign({}, contentWrapperProps, {\n    contentWidthStyles: contentWidthStyles\n  }), !isMobile && breadcrumbs && React.createElement(\"div\", {\n    className: clsx(styles.breadcrumbs, testutilStyles.breadcrumbs, styles['breadcrumbs-desktop'], darkStickyHeaderContentType && styles['breadcrumbs-desktop-sticky-header'], isRefresh && styles['breadcrumbs-desktop-refresh'], isRefresh && hasRenderedNotifications && styles['breadcrumbs-desktop-refresh-with-notifications'])\n  }, breadcrumbs), contentHeader && React.createElement(\"div\", {\n    className: clsx(styles['content-header-wrapper'], isRefresh && styles['content-header-wrapper-refresh'], (!isRefresh || !hasRenderedNotifications) && (isMobile || !breadcrumbs && !isRefresh) && styles['content-extra-top-padding'], !hasRenderedNotifications && !breadcrumbs && styles['content-header-wrapper-first-child'], !disableContentHeaderOverlap && styles['content-header-wrapper-overlapped'])\n  }, contentHeader))), React.createElement(ContentWrapper, __assign({}, contentWrapperProps, {\n    ref: mainContentRef,\n    disablePaddings: disableContentPaddings,\n    className: clsx(!disableContentPaddings && styles['content-wrapper'], !disableContentPaddings && (isMobile || !breadcrumbs) && !contentHeader && (!isRefresh || !darkHeaderContentType) && styles['content-extra-top-padding'], isRefresh && styles['content-wrapper-refresh'], !hasRenderedNotifications && !breadcrumbs && !isMobile && !contentHeader && styles['content-wrapper-first-child'])\n  }), React.createElement(AppLayoutDomContext.RootProvider, {\n    value: {\n      stickyOffsetTop: headerHeight + (stickyNotificationsHeight !== null ? isRefresh ? stickyNotificationsHeight - 5 : stickyNotificationsHeight : 0),\n      stickyOffsetBottom: footerHeight + (splitPanelBottomOffset || 0)\n    },\n    className: clsx(styles.content, testutilStyles.content, isRefresh && styles['content-refresh'], !disableContentHeaderOverlap && contentHeader && styles['content-refresh-overlapped']),\n    style: contentWidthStyles\n  }, content))), finalSplitPanePosition === 'bottom' && React.createElement(SplitPanelWrapper, {\n    context: splitPanelContext\n  }, splitPanel)), React.createElement(ToolsAndSplitPanel, {\n    splitPanel: finalSplitPanePosition === 'side' ? splitPanel : undefined,\n    ariaLabels: ariaLabels,\n    closedDrawerWidth: closedDrawerWidth,\n    contentHeightStyle: contentHeightStyle,\n    disableContentPaddings: disableContentPaddings,\n    drawerWidth: toolsDrawerWidth,\n    footerHeight: footerHeight,\n    headerHeight: headerHeight,\n    isHidden: isToolsDrawerHidden,\n    isMobile: isMobile,\n    isMotionEnabled: isMotionEnabled,\n    isRefresh: isRefresh,\n    onToolsToggle: onToolsToggle,\n    panelHeightStyle: panelHeightStyle,\n    setSplitPanelTransitionState: setSplitPanelTransitionState,\n    setToolsPanelTransitionState: setToolsPanelTransitionState,\n    splitPanelContext: splitPanelContext,\n    splitPanelOpen: splitPanelOpenOnTheSide,\n    splitPanelReportedSize: splitPanelReportedSize,\n    splitPanelTransitionState: splitPanelTransitionState,\n    toggleRefs: toolsRefs,\n    tools: tools,\n    toolsHide: Boolean(toolsHide),\n    toolsOpen: toolsOpen,\n    toolsPanelTransitionState: toolsPanelTransitionState,\n    toolsWidth: toolsWidth\n  }))));\n});\napplyDisplayName(AppLayout, 'AppLayout');\nexport default AppLayout;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/app-layout/index.js"],"names":["__assign","__rest","clsx","React","useCallback","useEffect","useImperativeHandle","useRef","useState","getBaseProps","useControllable","useMobile","fireNonCancelableEvent","applyDefaults","Notifications","MobileToolbar","SplitPanelWrapper","useFocusControl","useWindowWidth","useContentHeight","styles","testutilStyles","findUpUntil","AppLayoutDomContext","useContainerQuery","useStableEventHandler","applyDisplayName","getSplitPanelDefaultSize","MAIN_PANEL_MIN_HEIGHT","useBaseComponent","useDensityMode","useVisualRefresh","ContentWrapper","DarkHeader","isMotionDisabled","useEffectOnUpdate","NavigationPanel","ToolsAndSplitPanel","usePreviousFrameValue","useAppLayoutOffsets","isDevelopment","warnOnce","RefreshedAppLayout","AppLayout","forwardRef","_a","ref","_b","contentType","_c","headerSelector","_d","footerSelector","rest","__internalRootRef","isRefresh","props","createElement","OldAppLayout","navigation","_e","navigationWidth","navigationHide","controlledNavigationOpen","navigationOpen","tools","_f","toolsWidth","toolsHide","controlledToolsOpen","toolsOpen","breadcrumbs","notifications","stickyNotifications","contentHeader","disableContentHeaderOverlap","content","_g","disableContentPaddings","disableBodyScroll","maxContentWidth","minContentWidth","_h","_j","ariaLabels","splitPanel","controlledSplitPanelSize","splitPanelSize","controlledSplitPanelOpen","splitPanelOpen","controlledSplitPanelPreferences","splitPanelPreferences","onSplitPanelPreferencesChange","onSplitPanelResize","onSplitPanelToggle","onNavigationChange","onToolsChange","Error","baseProps","isMobile","isMotionEnabled","current","defaults","darkStickyHeaderContentType","indexOf","darkHeaderContentType","_k","componentName","controlledProp","changeHandler","_l","setNavigationOpen","_m","navigationPanelTransitionState","setNavigationPanelTransitionState","_o","_p","setToolsOpen","_q","toolsPanelTransitionState","setToolsPanelTransitionState","onNavigationToggle","open","onToolsToggle","onNavigationClick","event","hasLink","target","node","tagName","href","navigationVisible","toolsVisible","_r","contentHeightStyle","headerHeight","footerHeight","panelHeightStyle","_s","rect","height","notificationsHeight","notificationsRef","_t","splitPanelHeight","splitPanelRef","_u","splitPanelHeaderHeight","splitPanelHeaderRef","anyPanelOpen","hasRenderedNotifications","stickyNotificationsHeight","_v","undefined","setSplitPanelPreferences","splitPanelPosition","position","densityMode","closedDrawerWidth","effectiveNavigationWidth","effectiveToolsWidth","defaultSplitPanelSize","_w","_x","setSplitPanelSize","_y","_z","setSplitPanelOpen","_0","splitPanelTransitionState","setSplitPanelTransitionState","mainContentRef","legacyScrollRootRef","onSplitPanelPreferencesSet","detail","onSplitPanelSizeSet","size","onToggle","getSplitPanelMaxWidth","NaN","width","parseInt","getComputedStyle","contentPadding","spaceAvailable","spaceTaken","finalSplitPanePosition","Math","max","getSplitPanelMaxHeight","document","clientHeight","documentElement","_1","isForcedPosition","setIsForcedPosition","splitPaneAvailableOnTheSide","Boolean","splitPanelOpenOnTheSide","toggleButtonsBarWidth","windowWidth","_2","leftOffset","left","rightOffset","right","contentWidthWithSplitPanel","contentWidth","navigationClosedWidth","toolsClosedWidth","_3","splitPanelLastInteraction","setSplitPanelLastInteraction","type","contentMaxWidthStyle","maxWidth","contentWrapperPaddings","closedNav","closedTools","_4","splitPanelReportedSize","setSplitPanelReportedSize","splitPanelContext","topOffset","bottomOffset","getMaxWidth","getMaxHeight","contentWidthStyles","isOpen","lastInteraction","onResize","onPreferencesChange","reportSize","contentWrapperProps","navigationPadding","toolsPadding","navigationRefs","toolsRefs","openTools","closeNavigationIfNecessary","showSideButtonsBar","splitPanelBottomOffset","minWidth","isToolsDrawerHidden","toolsDrawerWidth","toolsPanelWidth","splitPanelWidth","buttonBar","navigationDrawerWidth","contentHeaderProps","transitionInProgress","some","state","previousContentWidth","contentScaleX","transitionStarted","newContentWidth","navigationPanelTransitioning","toolsPanelTransitioning","splitPanelTransitioning","className","root","style","toggleRefs","toggle","onNavigationOpen","onToolsOpen","unfocusable","layout","isHidden","onClick","refresh","marginBottom","transform","transformOrigin","sticky","testUtilsClassName","labels","disablePaddings","RootProvider","value","stickyOffsetTop","stickyOffsetBottom","context","drawerWidth"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { applyDefaults } from './defaults';\nimport { Notifications } from './notifications';\nimport { MobileToolbar } from './mobile-toolbar';\nimport { SplitPanelWrapper } from './split-panel-wrapper';\nimport { useFocusControl } from './utils/use-focus-control';\nimport useWindowWidth from './utils/use-window-width';\nimport useContentHeight from './utils/use-content-height';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-utils/styles.css.js';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { AppLayoutDomContext } from '../internal/context/app-layout-context';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { useStableEventHandler } from '../internal/hooks/use-stable-event-handler';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getSplitPanelDefaultSize, MAIN_PANEL_MIN_HEIGHT } from '../split-panel/utils/size-utils';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useDensityMode, useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport ContentWrapper from './content-wrapper';\nimport { DarkHeader } from './dark-header';\nimport { isMotionDisabled } from '../internal/motion';\nimport { useEffectOnUpdate } from '../internal/hooks/use-effect-on-update';\nimport { NavigationPanel } from './navigation-panel';\nimport { ToolsAndSplitPanel } from './tools-and-split-panel';\nimport { usePreviousFrameValue } from '../internal/hooks/use-previous-frame';\nimport useAppLayoutOffsets from './utils/use-content-width';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '../internal/logging';\nimport RefreshedAppLayout from './visual-refresh';\nvar AppLayout = React.forwardRef(function (_a, ref) {\n    var _b = _a.contentType, contentType = _b === void 0 ? 'default' : _b, _c = _a.headerSelector, headerSelector = _c === void 0 ? '#b #h' : _c, _d = _a.footerSelector, footerSelector = _d === void 0 ? '#b #f' : _d, rest = __rest(_a, [\"contentType\", \"headerSelector\", \"footerSelector\"]);\n    var __internalRootRef = useBaseComponent('AppLayout').__internalRootRef;\n    var isRefresh = useVisualRefresh(__internalRootRef);\n    var props = __assign({ contentType: contentType, headerSelector: headerSelector, footerSelector: footerSelector }, rest);\n    if (isRefresh) {\n        return React.createElement(RefreshedAppLayout, __assign({ __internalRootRef: __internalRootRef }, props, { ref: ref }));\n    }\n    else {\n        return React.createElement(OldAppLayout, __assign({ __internalRootRef: __internalRootRef }, props, { ref: ref }));\n    }\n});\nvar OldAppLayout = React.forwardRef(function (_a, ref) {\n    var _b, _c;\n    var _d;\n    var navigation = _a.navigation, _e = _a.navigationWidth, navigationWidth = _e === void 0 ? 280 : _e, navigationHide = _a.navigationHide, controlledNavigationOpen = _a.navigationOpen, tools = _a.tools, _f = _a.toolsWidth, toolsWidth = _f === void 0 ? 290 : _f, toolsHide = _a.toolsHide, controlledToolsOpen = _a.toolsOpen, breadcrumbs = _a.breadcrumbs, notifications = _a.notifications, stickyNotifications = _a.stickyNotifications, contentHeader = _a.contentHeader, disableContentHeaderOverlap = _a.disableContentHeaderOverlap, content = _a.content, _g = _a.contentType, contentType = _g === void 0 ? 'default' : _g, disableContentPaddings = _a.disableContentPaddings, disableBodyScroll = _a.disableBodyScroll, maxContentWidth = _a.maxContentWidth, minContentWidth = _a.minContentWidth, _h = _a.headerSelector, headerSelector = _h === void 0 ? '#b #h' : _h, _j = _a.footerSelector, footerSelector = _j === void 0 ? '#b #f' : _j, ariaLabels = _a.ariaLabels, splitPanel = _a.splitPanel, controlledSplitPanelSize = _a.splitPanelSize, controlledSplitPanelOpen = _a.splitPanelOpen, controlledSplitPanelPreferences = _a.splitPanelPreferences, onSplitPanelPreferencesChange = _a.onSplitPanelPreferencesChange, onSplitPanelResize = _a.onSplitPanelResize, onSplitPanelToggle = _a.onSplitPanelToggle, onNavigationChange = _a.onNavigationChange, onToolsChange = _a.onToolsChange, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, [\"navigation\", \"navigationWidth\", \"navigationHide\", \"navigationOpen\", \"tools\", \"toolsWidth\", \"toolsHide\", \"toolsOpen\", \"breadcrumbs\", \"notifications\", \"stickyNotifications\", \"contentHeader\", \"disableContentHeaderOverlap\", \"content\", \"contentType\", \"disableContentPaddings\", \"disableBodyScroll\", \"maxContentWidth\", \"minContentWidth\", \"headerSelector\", \"footerSelector\", \"ariaLabels\", \"splitPanel\", \"splitPanelSize\", \"splitPanelOpen\", \"splitPanelPreferences\", \"onSplitPanelPreferencesChange\", \"onSplitPanelResize\", \"onSplitPanelToggle\", \"onNavigationChange\", \"onToolsChange\", \"__internalRootRef\"]);\n    if (isDevelopment) {\n        if (controlledToolsOpen && toolsHide) {\n            warnOnce('AppLayout', \"You have enabled both the `toolsOpen` prop and the `toolsHide` prop. This is not supported. Set `toolsOpen` to `false` when you set `toolsHide` to `true`.\");\n        }\n    }\n    if (__internalRootRef === null) {\n        throw Error('__internalRootRef has to be passed.');\n    }\n    var baseProps = getBaseProps(rest);\n    var isMobile = useMobile();\n    var isRefresh = useVisualRefresh(__internalRootRef);\n    var isMotionEnabled = __internalRootRef.current ? !isMotionDisabled(__internalRootRef.current) : false;\n    var defaults = applyDefaults(contentType, { maxContentWidth: maxContentWidth, minContentWidth: minContentWidth }, isRefresh);\n    var darkStickyHeaderContentType = ['cards', 'table'].indexOf(contentType) > -1;\n    var darkHeaderContentType = darkStickyHeaderContentType || contentType === 'wizard';\n    var _k = useControllable(controlledNavigationOpen, onNavigationChange, isMobile ? false : defaults.navigationOpen, { componentName: 'AppLayout', controlledProp: 'navigationOpen', changeHandler: 'onNavigationChange' }), _l = _k[0], navigationOpen = _l === void 0 ? false : _l, setNavigationOpen = _k[1];\n    var _m = useState(navigationOpen ? 'entered' : 'exited'), navigationPanelTransitionState = _m[0], setNavigationPanelTransitionState = _m[1];\n    var _o = useControllable(controlledToolsOpen, onToolsChange, isMobile ? false : defaults.toolsOpen, { componentName: 'AppLayout', controlledProp: 'toolsOpen', changeHandler: 'onToolsChange' }), _p = _o[0], toolsOpen = _p === void 0 ? false : _p, setToolsOpen = _o[1];\n    var _q = useState(toolsOpen ? 'entered' : 'exited'), toolsPanelTransitionState = _q[0], setToolsPanelTransitionState = _q[1];\n    var onNavigationToggle = useCallback(function (open) {\n        setNavigationOpen(open);\n        fireNonCancelableEvent(onNavigationChange, { open: open });\n    }, [setNavigationOpen, onNavigationChange]);\n    var onToolsToggle = useCallback(function (open) {\n        setToolsOpen(open);\n        fireNonCancelableEvent(onToolsChange, { open: open });\n    }, [setToolsOpen, onToolsChange]);\n    var onNavigationClick = function (event) {\n        var hasLink = findUpUntil(event.target, function (node) { return node.tagName === 'A' && !!node.href; });\n        if (hasLink) {\n            onNavigationToggle(false);\n        }\n    };\n    var navigationVisible = !navigationHide && navigationOpen;\n    var toolsVisible = !toolsHide && toolsOpen;\n    var _r = useContentHeight(headerSelector, footerSelector, disableBodyScroll), contentHeightStyle = _r.contentHeightStyle, headerHeight = _r.headerHeight, footerHeight = _r.footerHeight, panelHeightStyle = _r.panelHeightStyle;\n    var _s = useContainerQuery(function (rect) { return rect.height; }), notificationsHeight = _s[0], notificationsRef = _s[1];\n    var _t = useContainerQuery(function (rect) { return (splitPanel ? rect.height : 0); }, [splitPanel]), splitPanelHeight = _t[0], splitPanelRef = _t[1];\n    var _u = useContainerQuery(function (rect) { return (splitPanel ? rect.height : 0); }, [splitPanel]), splitPanelHeaderHeight = _u[0], splitPanelHeaderRef = _u[1];\n    var anyPanelOpen = navigationVisible || toolsVisible;\n    var hasRenderedNotifications = notificationsHeight ? notificationsHeight > 0 : false;\n    var stickyNotificationsHeight = stickyNotifications ? notificationsHeight : null;\n    var _v = useControllable(controlledSplitPanelPreferences, onSplitPanelPreferencesChange, undefined, {\n        componentName: 'AppLayout',\n        controlledProp: 'splitPanelPreferences',\n        changeHandler: 'onSplitPanelPreferencesChange'\n    }), splitPanelPreferences = _v[0], setSplitPanelPreferences = _v[1];\n    var splitPanelPosition = (splitPanelPreferences === null || splitPanelPreferences === void 0 ? void 0 : splitPanelPreferences.position) || 'bottom';\n    var densityMode = useDensityMode(__internalRootRef);\n    var closedDrawerWidth = isRefresh ? (densityMode === 'compact' ? 72 : 80) : 40;\n    var effectiveNavigationWidth = navigationHide\n        ? 0\n        : navigationOpen\n            ? navigationWidth\n            : disableContentPaddings && isRefresh\n                ? 0\n                : closedDrawerWidth;\n    var effectiveToolsWidth = toolsHide && (!splitPanel || (splitPanelPreferences === null || splitPanelPreferences === void 0 ? void 0 : splitPanelPreferences.position) !== 'side')\n        ? 0\n        : toolsOpen\n            ? toolsWidth\n            : disableContentPaddings && isRefresh\n                ? 0\n                : closedDrawerWidth;\n    var defaultSplitPanelSize = getSplitPanelDefaultSize(splitPanelPosition);\n    var _w = useControllable(controlledSplitPanelSize, onSplitPanelResize, defaultSplitPanelSize, {\n        componentName: 'AppLayout',\n        controlledProp: 'splitPanelSize',\n        changeHandler: 'onSplitPanelResize'\n    }), _x = _w[0], splitPanelSize = _x === void 0 ? defaultSplitPanelSize : _x, setSplitPanelSize = _w[1];\n    var _y = useControllable(controlledSplitPanelOpen, onSplitPanelToggle, false, {\n        componentName: 'AppLayout',\n        controlledProp: 'splitPanelOpen',\n        changeHandler: 'onSplitPanelToggle'\n    }), _z = _y[0], splitPanelOpen = _z === void 0 ? false : _z, setSplitPanelOpen = _y[1];\n    var _0 = useState(splitPanelOpen ? 'entered' : 'exited'), splitPanelTransitionState = _0[0], setSplitPanelTransitionState = _0[1];\n    var mainContentRef = useRef(null);\n    var legacyScrollRootRef = useRef(null);\n    var onSplitPanelPreferencesSet = useCallback(function (detail) {\n        setSplitPanelPreferences(detail);\n        fireNonCancelableEvent(onSplitPanelPreferencesChange, detail);\n    }, [setSplitPanelPreferences, onSplitPanelPreferencesChange]);\n    var onSplitPanelSizeSet = useCallback(function (detail) {\n        setSplitPanelSize(detail.size);\n        fireNonCancelableEvent(onSplitPanelResize, detail);\n    }, [setSplitPanelSize, onSplitPanelResize]);\n    var onToggle = useCallback(function () {\n        setSplitPanelOpen(!splitPanelOpen);\n        fireNonCancelableEvent(onSplitPanelToggle, { open: !splitPanelOpen });\n    }, [setSplitPanelOpen, splitPanelOpen, onSplitPanelToggle]);\n    var getSplitPanelMaxWidth = useStableEventHandler(function () {\n        if (!mainContentRef.current || !defaults.minContentWidth) {\n            return NaN;\n        }\n        var width = parseInt(getComputedStyle(mainContentRef.current).width);\n        var contentPadding = disableContentPaddings ? 80 : 0;\n        var spaceAvailable = width - defaults.minContentWidth - contentPadding;\n        var spaceTaken = finalSplitPanePosition === 'side' ? splitPanelSize : 0;\n        return Math.max(0, spaceTaken + spaceAvailable);\n    });\n    var getSplitPanelMaxHeight = useStableEventHandler(function () {\n        if (typeof document === 'undefined') {\n            return 0;\n        }\n        else if (disableBodyScroll && legacyScrollRootRef.current) {\n            return legacyScrollRootRef.current.clientHeight - MAIN_PANEL_MIN_HEIGHT;\n        }\n        else {\n            return document.documentElement.clientHeight - headerHeight - footerHeight - MAIN_PANEL_MIN_HEIGHT;\n        }\n    });\n    var _1 = useState(false), isForcedPosition = _1[0], setIsForcedPosition = _1[1];\n    var finalSplitPanePosition = isForcedPosition ? 'bottom' : splitPanelPosition;\n    var splitPaneAvailableOnTheSide = Boolean(splitPanel) && finalSplitPanePosition === 'side';\n    var splitPanelOpenOnTheSide = splitPaneAvailableOnTheSide && splitPanelOpen;\n    var toggleButtonsBarWidth = isRefresh && (!toolsHide || splitPaneAvailableOnTheSide) ? closedDrawerWidth : 0;\n    var windowWidth = useWindowWidth();\n    var _2 = useAppLayoutOffsets(__internalRootRef.current), leftOffset = _2.left, rightOffset = _2.right;\n    var contentWidthWithSplitPanel = windowWidth -\n        leftOffset -\n        rightOffset -\n        effectiveToolsWidth -\n        effectiveNavigationWidth -\n        (disableContentPaddings ? 0 : toggleButtonsBarWidth);\n    useEffect(function () {\n        var contentWidth = contentWidthWithSplitPanel - splitPanelSize;\n        setIsForcedPosition(isMobile || (defaults.minContentWidth || 0) > contentWidth);\n    }, [contentWidthWithSplitPanel, defaults.minContentWidth, isMobile]);\n    var navigationClosedWidth = navigationHide || isRefresh || isMobile ? 0 : closedDrawerWidth;\n    var toolsClosedWidth = toolsHide || isRefresh || isMobile ? 0 : closedDrawerWidth;\n    useEffectOnUpdate(function () {\n        if (finalSplitPanePosition === 'bottom') {\n            setSplitPanelTransitionState(splitPanelOpen ? 'entered' : 'exited');\n        }\n    }, [finalSplitPanePosition, splitPanelOpen]);\n    var _3 = useState(), splitPanelLastInteraction = _3[0], setSplitPanelLastInteraction = _3[1];\n    useEffectOnUpdate(function () { return setSplitPanelLastInteraction(splitPanelOpen ? { type: 'open' } : { type: 'close' }); }, [splitPanelOpen]);\n    useEffectOnUpdate(function () { return setSplitPanelLastInteraction({ type: 'position' }); }, [splitPanelPosition]);\n    var contentMaxWidthStyle = !isMobile\n        ? { maxWidth: defaults.maxContentWidth }\n        : isRefresh\n            ? { maxWidth: '100%' }\n            : undefined;\n    var contentWrapperPaddings = !isMobile && isRefresh\n        ? {\n            closedNav: !navigationHide && !navigationOpen,\n            closedTools: !toolsHide && !toolsOpen\n        }\n        : undefined;\n    var _4 = useState(0), splitPanelReportedSize = _4[0], setSplitPanelReportedSize = _4[1];\n    var splitPanelContext = {\n        topOffset: (isRefresh ? 0 : headerHeight) + (finalSplitPanePosition === 'bottom' ? stickyNotificationsHeight || 0 : 0),\n        bottomOffset: footerHeight,\n        leftOffset: leftOffset + (isMobile ? 0 : !navigationHide && navigationOpen ? navigationWidth : navigationClosedWidth),\n        rightOffset: rightOffset + (isMobile ? 0 : !toolsHide && toolsOpen ? toolsWidth : toolsClosedWidth),\n        position: finalSplitPanePosition,\n        size: splitPanelSize,\n        getMaxWidth: getSplitPanelMaxWidth,\n        getMaxHeight: getSplitPanelMaxHeight,\n        disableContentPaddings: disableContentPaddings,\n        contentWidthStyles: contentMaxWidthStyle,\n        contentWrapperPaddings: contentWrapperPaddings,\n        isOpen: splitPanelOpen || (splitPanelTransitionState === 'exiting' && isMotionEnabled),\n        isMobile: isMobile,\n        isRefresh: isRefresh,\n        isForcedPosition: isForcedPosition,\n        lastInteraction: splitPanelLastInteraction,\n        splitPanelRef: splitPanelRef,\n        splitPanelHeaderRef: splitPanelHeaderRef,\n        onResize: onSplitPanelSizeSet,\n        onToggle: onToggle,\n        onPreferencesChange: onSplitPanelPreferencesSet,\n        reportSize: setSplitPanelReportedSize\n    };\n    var contentWrapperProps = {\n        navigationPadding: navigationHide || !!navigationOpen,\n        toolsPadding: (toolsHide && (!splitPanel || finalSplitPanePosition !== 'side')) ||\n            toolsVisible ||\n            splitPanelOpenOnTheSide,\n        isRefresh: isRefresh,\n        isMobile: isMobile\n    };\n    var navigationRefs = useFocusControl(navigationOpen);\n    var toolsRefs = useFocusControl(toolsOpen);\n    useImperativeHandle(ref, function () { return ({\n        openTools: function () { return onToolsToggle(true); },\n        closeNavigationIfNecessary: function () {\n            if (isMobile) {\n                onNavigationToggle(false);\n            }\n        }\n    }); }, [isMobile, onNavigationToggle, onToolsToggle]);\n    var showSideButtonsBar = isRefresh && !!splitPanel && finalSplitPanePosition === 'side';\n    var splitPanelBottomOffset = (_d = (!splitPanel || finalSplitPanePosition !== 'bottom'\n        ? undefined\n        : splitPanelOpen\n            ? splitPanelHeight\n            : splitPanelHeaderHeight)) !== null && _d !== void 0 ? _d : undefined;\n    var contentWidthStyles = !isMobile\n        ? { minWidth: defaults.minContentWidth, maxWidth: defaults.maxContentWidth }\n        : isRefresh\n            ? { maxWidth: '100%' }\n            : undefined;\n    var isToolsDrawerHidden = disableContentPaddings || (!toolsOpen && showSideButtonsBar);\n    var toolsDrawerWidth = (function () {\n        if (isMobile) {\n            return 0;\n        }\n        if (isRefresh) {\n            if (toolsHide && !splitPanelOpenOnTheSide) {\n                return 0;\n            }\n            if (!toolsVisible && !splitPanelOpenOnTheSide) {\n                return disableContentPaddings || showSideButtonsBar ? 0 : closedDrawerWidth;\n            }\n            var toolsPanelWidth = toolsVisible ? toolsWidth : 0;\n            var splitPanelWidth = splitPanelOpenOnTheSide ? splitPanelReportedSize : 0;\n            var buttonBar = disableContentPaddings && showSideButtonsBar && (!toolsHide || !splitPanelOpen) ? toggleButtonsBarWidth : 0;\n            return toolsPanelWidth + splitPanelWidth + buttonBar;\n        }\n        else {\n            var toolsPanelWidth = toolsHide ? 0 : toolsOpen ? toolsWidth : closedDrawerWidth;\n            var splitPanelWidth = !splitPanel || finalSplitPanePosition !== 'side'\n                ? 0\n                : splitPanelOpen\n                    ? splitPanelReportedSize\n                    : closedDrawerWidth;\n            return toolsPanelWidth + splitPanelWidth;\n        }\n    })();\n    var navigationDrawerWidth = (function () {\n        if (isMobile) {\n            return 0;\n        }\n        if (disableContentPaddings && isRefresh && !navigationVisible) {\n            return 0;\n        }\n        return effectiveNavigationWidth;\n    })();\n    var contentHeaderProps = {\n        isMobile: isMobile,\n        isRefresh: isRefresh,\n        navigationWidth: effectiveNavigationWidth,\n        toolsWidth: disableContentPaddings\n            ? 0\n            : toolsDrawerWidth\n                ? toolsDrawerWidth\n                : isToolsDrawerHidden\n                    ? toggleButtonsBarWidth\n                    : 0\n    };\n    var transitionInProgress = isMotionEnabled &&\n        [\n            navigationPanelTransitionState,\n            toolsPanelTransitionState,\n            finalSplitPanePosition === 'side' ? splitPanelTransitionState : undefined,\n        ].some(function (state) { return state === 'entering' || state === 'exiting'; });\n    var previousContentWidth = usePreviousFrameValue(contentWidthWithSplitPanel - (splitPanelOpenOnTheSide ? splitPanelReportedSize : 0));\n    var contentScaleX = (function () {\n        if (isMobile || !isMotionEnabled || !disableContentPaddings || !previousContentWidth) {\n            return undefined;\n        }\n        var transitionStarted = isMotionEnabled &&\n            [\n                navigationPanelTransitionState,\n                toolsPanelTransitionState,\n                finalSplitPanePosition === 'side' ? splitPanelTransitionState : undefined,\n            ].some(function (state) { return state === 'enter' || state === 'exit'; });\n        if (transitionStarted) {\n            var newContentWidth = contentWidthWithSplitPanel - (splitPanelOpenOnTheSide ? splitPanelReportedSize : 0);\n            return previousContentWidth / newContentWidth;\n        }\n    })();\n    var navigationPanelTransitioning = isMotionEnabled && ['enter', 'entering', 'exit', 'exiting'].indexOf(navigationPanelTransitionState) !== -1;\n    var toolsPanelTransitioning = isMotionEnabled && ['enter', 'entering', 'exit', 'exiting'].indexOf(toolsPanelTransitionState) !== -1;\n    var splitPanelTransitioning = isMotionEnabled && ['enter', 'entering', 'exit', 'exiting'].indexOf(splitPanelTransitionState) !== -1;\n    return (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(styles.root, testutilStyles.root, baseProps.className, disableBodyScroll && styles['root-no-scroll']), ref: __internalRootRef }),\n        React.createElement(\"div\", { className: styles['layout-wrapper'], style: contentHeightStyle },\n            isMobile && (!toolsHide || !navigationHide || breadcrumbs) && (React.createElement(MobileToolbar, { anyPanelOpen: anyPanelOpen && !transitionInProgress, toggleRefs: { navigation: navigationRefs.toggle, tools: toolsRefs.toggle }, isRefresh: isRefresh, topOffset: headerHeight, ariaLabels: ariaLabels, navigationHide: navigationHide, toolsHide: toolsHide, onNavigationOpen: function () { return onNavigationToggle(true); }, onToolsOpen: function () { return onToolsToggle(true); }, unfocusable: anyPanelOpen && !transitionInProgress }, breadcrumbs)),\n            React.createElement(\"div\", { className: clsx(styles.layout, disableBodyScroll && styles['layout-no-scroll']) },\n                !navigationHide && (React.createElement(NavigationPanel, { ariaLabels: ariaLabels, footerHeight: footerHeight, headerHeight: headerHeight, isHidden: disableContentPaddings, isMobile: isMobile, isMotionEnabled: isMotionEnabled, isRefresh: isRefresh, navigation: navigation, navigationDrawerWidth: navigationDrawerWidth, navigationOpen: navigationOpen, navigationPanelTransitionState: navigationPanelTransitionState, onClick: isMobile ? onNavigationClick : undefined, onNavigationToggle: onNavigationToggle, panelHeightStyle: panelHeightStyle, setNavigationPanelTransitionState: setNavigationPanelTransitionState, toggleRefs: navigationRefs, navigationWidth: navigationWidth })),\n                React.createElement(\"main\", { ref: legacyScrollRootRef, className: clsx(styles['layout-main'], (_b = {},\n                        _b[styles['layout-main-scrollable']] = disableBodyScroll,\n                        _b[styles.unfocusable] = isMobile && anyPanelOpen && !transitionInProgress,\n                        _b)) },\n                    React.createElement(\"div\", { className: clsx(styles['layout-main-inner'], (_c = {},\n                            _c[styles['enable-motion']] = isMotionEnabled && transitionInProgress,\n                            _c[styles.refresh] = isRefresh,\n                            _c)), style: {\n                            marginBottom: splitPanelBottomOffset,\n                            transform: contentScaleX ? \"scaleX(\" + contentScaleX + \")\" : undefined,\n                            transformOrigin: navigationPanelTransitioning\n                                ? 'right'\n                                : toolsPanelTransitioning || splitPanelTransitioning\n                                    ? 'left'\n                                    : undefined\n                        } },\n                        notifications && (React.createElement(DarkHeader, __assign({}, contentHeaderProps, { topOffset: headerHeight, sticky: !isMobile && darkStickyHeaderContentType && stickyNotifications }),\n                            React.createElement(Notifications, { testUtilsClassName: clsx(styles.notifications, testutilStyles.notifications), labels: ariaLabels, topOffset: headerHeight, sticky: !isMobile && stickyNotifications, ref: notificationsRef, isRefresh: isRefresh, isMobile: isMobile, navigationPadding: contentWrapperProps.navigationPadding, toolsPadding: contentWrapperProps.toolsPadding, contentWidthStyles: contentWidthStyles }, notifications))),\n                        ((!isMobile && breadcrumbs) || contentHeader) && (React.createElement(DarkHeader, __assign({}, contentHeaderProps),\n                            React.createElement(ContentWrapper, __assign({}, contentWrapperProps, { contentWidthStyles: contentWidthStyles }),\n                                !isMobile && breadcrumbs && (React.createElement(\"div\", { className: clsx(styles.breadcrumbs, testutilStyles.breadcrumbs, styles['breadcrumbs-desktop'], darkStickyHeaderContentType && styles['breadcrumbs-desktop-sticky-header'], isRefresh && styles['breadcrumbs-desktop-refresh'], isRefresh &&\n                                        hasRenderedNotifications &&\n                                        styles['breadcrumbs-desktop-refresh-with-notifications']) }, breadcrumbs)),\n                                contentHeader && (React.createElement(\"div\", { className: clsx(styles['content-header-wrapper'], isRefresh && styles['content-header-wrapper-refresh'], (!isRefresh || !hasRenderedNotifications) &&\n                                        (isMobile || (!breadcrumbs && !isRefresh)) &&\n                                        styles['content-extra-top-padding'], !hasRenderedNotifications && !breadcrumbs && styles['content-header-wrapper-first-child'], !disableContentHeaderOverlap && styles['content-header-wrapper-overlapped']) }, contentHeader))))),\n                        React.createElement(ContentWrapper, __assign({}, contentWrapperProps, { ref: mainContentRef, disablePaddings: disableContentPaddings, className: clsx(!disableContentPaddings && styles['content-wrapper'], !disableContentPaddings &&\n                                (isMobile || !breadcrumbs) &&\n                                !contentHeader &&\n                                (!isRefresh || !darkHeaderContentType) &&\n                                styles['content-extra-top-padding'], isRefresh && styles['content-wrapper-refresh'], !hasRenderedNotifications &&\n                                !breadcrumbs &&\n                                !isMobile &&\n                                !contentHeader &&\n                                styles['content-wrapper-first-child']) }),\n                            React.createElement(AppLayoutDomContext.RootProvider, { value: {\n                                    stickyOffsetTop: headerHeight +\n                                        (stickyNotificationsHeight !== null\n                                            ? isRefresh\n                                                ?\n                                                    stickyNotificationsHeight - 5\n                                                : stickyNotificationsHeight\n                                            : 0),\n                                    stickyOffsetBottom: footerHeight + (splitPanelBottomOffset || 0)\n                                }, className: clsx(styles.content, testutilStyles.content, isRefresh && styles['content-refresh'], !disableContentHeaderOverlap && contentHeader && styles['content-refresh-overlapped']), style: contentWidthStyles }, content))),\n                    finalSplitPanePosition === 'bottom' && (React.createElement(SplitPanelWrapper, { context: splitPanelContext }, splitPanel))),\n                React.createElement(ToolsAndSplitPanel, { splitPanel: finalSplitPanePosition === 'side' ? splitPanel : undefined, ariaLabels: ariaLabels, closedDrawerWidth: closedDrawerWidth, contentHeightStyle: contentHeightStyle, disableContentPaddings: disableContentPaddings, drawerWidth: toolsDrawerWidth, footerHeight: footerHeight, headerHeight: headerHeight, isHidden: isToolsDrawerHidden, isMobile: isMobile, isMotionEnabled: isMotionEnabled, isRefresh: isRefresh, onToolsToggle: onToolsToggle, panelHeightStyle: panelHeightStyle, setSplitPanelTransitionState: setSplitPanelTransitionState, setToolsPanelTransitionState: setToolsPanelTransitionState, splitPanelContext: splitPanelContext, splitPanelOpen: splitPanelOpenOnTheSide, splitPanelReportedSize: splitPanelReportedSize, splitPanelTransitionState: splitPanelTransitionState, toggleRefs: toolsRefs, tools: tools, toolsHide: Boolean(toolsHide), toolsOpen: toolsOpen, toolsPanelTransitionState: toolsPanelTransitionState, toolsWidth: toolsWidth })))));\n});\napplyDisplayName(AppLayout, 'AppLayout');\nexport default AppLayout;\n"]},"metadata":{},"sourceType":"module"}