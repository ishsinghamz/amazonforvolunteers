{"ast":null,"code":"import React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { addMonths, endOfDay, isBefore, startOfDay, startOfMonth, isAfter, isSameMonth } from 'date-fns';\nimport styles from '../styles.css.js';\nimport CalendarHeader from './header';\nimport { Grids, selectFocusedDate } from './grids';\nimport moveFocusHandler from '../../date-picker/calendar/utils/move-focus-handler';\nimport { displayToIso, formatDate, formatTime, formatISOStringWithoutTimezone, isoToDisplay, parseDate } from '../../date-picker/calendar/utils/date';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport InternalFormField from '../../form-field/internal';\nimport DateInput from '../../internal/components/date-input';\nimport InternalTimeInput from '../../time-input/internal';\nimport clsx from 'clsx';\nimport { getBaseDate } from './get-base-date.js';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nexport default forwardRef(Calendar);\n\nfunction Calendar(_a, ref) {\n  var _b;\n\n  var locale = _a.locale,\n      startOfWeek = _a.startOfWeek,\n      isDateEnabled = _a.isDateEnabled,\n      onSelectDateRange = _a.onSelectDateRange,\n      _c = _a.initialEndDate,\n      initialEndDate = _c === void 0 ? '' : _c,\n      _d = _a.initialStartDate,\n      initialStartDate = _d === void 0 ? '' : _d,\n      i18nStrings = _a.i18nStrings,\n      dateOnly = _a.dateOnly,\n      isSingleGrid = _a.isSingleGrid,\n      timeInputFormat = _a.timeInputFormat;\n  var elementRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function () {\n        var _a;\n\n        if (elementRef.current) {\n          var prevButton = elementRef.current.getElementsByClassName(styles['calendar-prev-month-btn'])[0];\n          (_a = prevButton) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      }\n    };\n  });\n\n  var _e = initialStartDate.split('T'),\n      _f = _e[0],\n      initialStartDateString = _f === void 0 ? '' : _f,\n      _g = _e[1],\n      initialStartTimeString = _g === void 0 ? '' : _g;\n\n  var _h = initialEndDate.split('T'),\n      _j = _h[0],\n      initialEndDateString = _j === void 0 ? '' : _j,\n      _k = _h[1],\n      initialEndTimeString = _k === void 0 ? '' : _k;\n\n  var _l = useState(initialStartDateString),\n      startDateString = _l[0],\n      setStartDateString = _l[1];\n\n  var _m = useState(initialStartTimeString),\n      startTimeString = _m[0],\n      setStartTimeString = _m[1];\n\n  var _o = useState(initialEndDateString),\n      endDateString = _o[0],\n      setEndDateString = _o[1];\n\n  var _p = useState(initialEndTimeString),\n      endTimeString = _p[0],\n      setEndTimeString = _p[1];\n\n  var selectedStartDate = parseDate(startDateString, true);\n  var selectedEndDate = parseDate(endDateString, true);\n\n  var _q = useState(function () {\n    if (startDateString) {\n      var startDate = parseDate(startDateString);\n\n      if (isSingleGrid) {\n        return startOfMonth(startDate);\n      }\n\n      return startOfMonth(addMonths(startDate, 1));\n    }\n\n    if (endDateString) {\n      return startOfMonth(parseDate(endDateString));\n    }\n\n    return startOfMonth(Date.now());\n  }),\n      currentMonth = _q[0],\n      setCurrentMonth = _q[1];\n\n  var _r = useState(function () {\n    if (selectedStartDate) {\n      if (isSameMonth(selectedStartDate, currentMonth)) {\n        return selectedStartDate;\n      }\n\n      if (!isSingleGrid && isSameMonth(selectedStartDate, addMonths(currentMonth, -1))) {\n        return selectedStartDate;\n      }\n    }\n\n    return selectFocusedDate(selectedStartDate, currentMonth, isDateEnabled);\n  }),\n      focusedDate = _r[0],\n      setFocusedDate = _r[1];\n\n  useEffect(function () {\n    var startDate = formatISOStringWithoutTimezone(startDateString, startTimeString);\n    var endDate = formatISOStringWithoutTimezone(endDateString, endTimeString);\n\n    if (startDate !== initialStartDate || endDate !== initialEndDate) {\n      onSelectDateRange({\n        startDate: startDate,\n        endDate: endDate,\n        type: 'absolute'\n      });\n    }\n  }, [startDateString, startTimeString, endDateString, endTimeString, onSelectDateRange, initialStartDate, initialEndDate]);\n  var onSelectDateHandler = useCallback(function (selectedDate) {\n    if (!startDateString && !endDateString) {\n      var startDate = startOfDay(selectedDate);\n      setStartDateString(formatDate(startDate));\n      setStartTimeString(formatTime(startDate));\n      return;\n    }\n\n    if (startDateString && endDateString) {\n      var startDate = startOfDay(selectedDate);\n      setStartDateString(formatDate(startDate));\n      setStartTimeString(formatTime(startDate));\n      setEndDateString('');\n      setEndTimeString('');\n      return;\n    }\n\n    if (startDateString && !endDateString) {\n      var parsedStartDate = parseDate(startDateString);\n\n      if (isBefore(selectedDate, parsedStartDate)) {\n        var startDate = startOfDay(selectedDate);\n        var endDate = endOfDay(parsedStartDate);\n        setStartDateString(formatDate(startDate));\n        setStartTimeString(formatTime(startDate));\n        setEndDateString(formatDate(endDate));\n        setEndTimeString(formatTime(endDate));\n      } else {\n        var endDate = endOfDay(selectedDate);\n        setEndDateString(formatDate(endDate));\n        setEndTimeString(formatTime(endDate));\n      }\n\n      return;\n    }\n\n    if (!startDateString && endDateString) {\n      var existingEndDate = parseDate(endDateString);\n\n      if (isAfter(selectedDate, existingEndDate)) {\n        var startDate = startOfDay(existingEndDate);\n        var endDate = endOfDay(selectedDate);\n        setStartDateString(formatDate(startDate));\n        setStartTimeString(formatTime(startDate));\n        setEndDateString(formatDate(endDate));\n        setEndTimeString(formatTime(endDate));\n      } else {\n        var startDate = startOfDay(selectedDate);\n        setStartDateString(formatDate(startDate));\n        setStartTimeString(formatTime(startDate));\n      }\n\n      return;\n    }\n  }, [endDateString, startDateString]);\n\n  var onHeaderChangeMonthHandler = function (isPrevious) {\n    var newCurrentMonth = addMonths(currentMonth, isPrevious ? -1 : 1);\n    setCurrentMonth(newCurrentMonth);\n    var newBaseDateMonth = isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, -1);\n    var newBaseDate = getBaseDate(newBaseDateMonth, 1, isDateEnabled);\n    setFocusedDate(newBaseDate);\n  };\n\n  var onChangeStartDate = function (e) {\n    var isoDateString = displayToIso(e.detail.value);\n    setStartDateString(isoDateString);\n\n    if (isoDateString.length >= 8) {\n      var newCurrentMonth = startOfMonth(parseDate(isoDateString));\n      setCurrentMonth(isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, 1));\n    }\n  };\n\n  var onChangeEndDate = function (e) {\n    var isoDateString = displayToIso(e.detail.value);\n    setEndDateString(isoDateString);\n  };\n\n  var constrainttextId = useUniqueId('awsui-area-date-range-picker');\n  constrainttextId = i18nStrings.dateTimeConstraintText ? constrainttextId : '';\n  return React.createElement(InternalSpaceBetween, {\n    size: \"m\"\n  }, React.createElement(\"div\", {\n    className: clsx(styles.calendar, (_b = {}, _b[styles['one-grid']] = isSingleGrid, _b)),\n    role: \"application\",\n    ref: elementRef\n  }, React.createElement(CalendarHeader, {\n    baseDate: currentMonth,\n    locale: locale,\n    onChangeMonth: onHeaderChangeMonthHandler,\n    previousMonthLabel: i18nStrings.previousMonthAriaLabel,\n    nextMonthLabel: i18nStrings.nextMonthAriaLabel,\n    calendarHasFocus: true,\n    isSingleGrid: isSingleGrid\n  }), React.createElement(Grids, {\n    isSingleGrid: isSingleGrid,\n    locale: locale,\n    baseDate: currentMonth,\n    focusedDate: focusedDate,\n    onFocusedDateChange: setFocusedDate,\n    isDateEnabled: isDateEnabled,\n    onSelectDate: onSelectDateHandler,\n    onChangeMonth: setCurrentMonth,\n    startOfWeek: startOfWeek,\n    todayAriaLabel: i18nStrings.todayAriaLabel,\n    selectedStartDate: selectedStartDate,\n    selectedEndDate: selectedEndDate,\n    handleFocusMove: moveFocusHandler\n  })), React.createElement(InternalSpaceBetween, {\n    direction: \"vertical\",\n    size: \"xxs\"\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: isSingleGrid ? 'vertical' : 'horizontal'\n  }, React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper']\n  }, React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper__date']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.startDateLabel,\n    stretch: true\n  }, React.createElement(DateInput, {\n    value: isoToDisplay(startDateString),\n    autoComplete: false,\n    disableBrowserAutocorrect: true,\n    disableAutocompleteOnBlur: false,\n    className: styles['start-date-input'],\n    onChange: onChangeStartDate,\n    placeholder: \"YYYY/MM/DD\",\n    ariaDescribedby: constrainttextId\n  }))), !dateOnly && React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper__time']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.startTimeLabel,\n    stretch: true\n  }, React.createElement(InternalTimeInput, {\n    value: startTimeString,\n    onChange: function (e) {\n      return setStartTimeString(e.detail.value);\n    },\n    format: timeInputFormat,\n    placeholder: timeInputFormat,\n    className: styles['start-time-input'],\n    ariaDescribedby: constrainttextId\n  })))), React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper']\n  }, React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper__date']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.endDateLabel,\n    stretch: true\n  }, React.createElement(DateInput, {\n    value: isoToDisplay(endDateString),\n    autoComplete: false,\n    disableBrowserAutocorrect: true,\n    disableAutocompleteOnBlur: false,\n    className: styles['end-date-input'],\n    onChange: onChangeEndDate,\n    placeholder: \"YYYY/MM/DD\",\n    ariaDescribedby: constrainttextId\n  }))), !dateOnly && React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper__time']\n  }, React.createElement(InternalFormField, {\n    label: i18nStrings.endTimeLabel,\n    stretch: true\n  }, React.createElement(InternalTimeInput, {\n    value: endTimeString,\n    onChange: function (e) {\n      return setEndTimeString(e.detail.value);\n    },\n    format: timeInputFormat,\n    placeholder: timeInputFormat,\n    className: styles['end-time-input'],\n    ariaDescribedby: constrainttextId\n  }))))), i18nStrings.dateTimeConstraintText && React.createElement(\"div\", {\n    className: styles['date-and-time-constrainttext'],\n    id: constrainttextId\n  }, i18nStrings.dateTimeConstraintText)));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/date-range-picker/calendar/index.js"],"names":["React","forwardRef","useCallback","useEffect","useImperativeHandle","useRef","useState","addMonths","endOfDay","isBefore","startOfDay","startOfMonth","isAfter","isSameMonth","styles","CalendarHeader","Grids","selectFocusedDate","moveFocusHandler","displayToIso","formatDate","formatTime","formatISOStringWithoutTimezone","isoToDisplay","parseDate","InternalSpaceBetween","InternalFormField","DateInput","InternalTimeInput","clsx","getBaseDate","useUniqueId","Calendar","_a","ref","_b","locale","startOfWeek","isDateEnabled","onSelectDateRange","_c","initialEndDate","_d","initialStartDate","i18nStrings","dateOnly","isSingleGrid","timeInputFormat","elementRef","focus","current","prevButton","getElementsByClassName","_e","split","_f","initialStartDateString","_g","initialStartTimeString","_h","_j","initialEndDateString","_k","initialEndTimeString","_l","startDateString","setStartDateString","_m","startTimeString","setStartTimeString","_o","endDateString","setEndDateString","_p","endTimeString","setEndTimeString","selectedStartDate","selectedEndDate","_q","startDate","Date","now","currentMonth","setCurrentMonth","_r","focusedDate","setFocusedDate","endDate","type","onSelectDateHandler","selectedDate","parsedStartDate","existingEndDate","onHeaderChangeMonthHandler","isPrevious","newCurrentMonth","newBaseDateMonth","newBaseDate","onChangeStartDate","e","isoDateString","detail","value","length","onChangeEndDate","constrainttextId","dateTimeConstraintText","createElement","size","className","calendar","role","baseDate","onChangeMonth","previousMonthLabel","previousMonthAriaLabel","nextMonthLabel","nextMonthAriaLabel","calendarHasFocus","onFocusedDateChange","onSelectDate","todayAriaLabel","handleFocusMove","direction","label","startDateLabel","stretch","autoComplete","disableBrowserAutocorrect","disableAutocompleteOnBlur","onChange","placeholder","ariaDescribedby","startTimeLabel","format","endDateLabel","endTimeLabel","id"],"mappings":"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","sourcesContent":["import React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { addMonths, endOfDay, isBefore, startOfDay, startOfMonth, isAfter, isSameMonth } from 'date-fns';\nimport styles from '../styles.css.js';\nimport CalendarHeader from './header';\nimport { Grids, selectFocusedDate } from './grids';\nimport moveFocusHandler from '../../date-picker/calendar/utils/move-focus-handler';\nimport { displayToIso, formatDate, formatTime, formatISOStringWithoutTimezone, isoToDisplay, parseDate, } from '../../date-picker/calendar/utils/date';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport InternalFormField from '../../form-field/internal';\nimport DateInput from '../../internal/components/date-input';\nimport InternalTimeInput from '../../time-input/internal';\nimport clsx from 'clsx';\nimport { getBaseDate } from './get-base-date.js';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nexport default forwardRef(Calendar);\nfunction Calendar(_a, ref) {\n    var _b;\n    var locale = _a.locale, startOfWeek = _a.startOfWeek, isDateEnabled = _a.isDateEnabled, onSelectDateRange = _a.onSelectDateRange, _c = _a.initialEndDate, initialEndDate = _c === void 0 ? '' : _c, _d = _a.initialStartDate, initialStartDate = _d === void 0 ? '' : _d, i18nStrings = _a.i18nStrings, dateOnly = _a.dateOnly, isSingleGrid = _a.isSingleGrid, timeInputFormat = _a.timeInputFormat;\n    var elementRef = useRef(null);\n    useImperativeHandle(ref, function () { return ({\n        focus: function () {\n            var _a;\n            if (elementRef.current) {\n                var prevButton = elementRef.current.getElementsByClassName(styles['calendar-prev-month-btn'])[0];\n                (_a = prevButton) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n        }\n    }); });\n    var _e = initialStartDate.split('T'), _f = _e[0], initialStartDateString = _f === void 0 ? '' : _f, _g = _e[1], initialStartTimeString = _g === void 0 ? '' : _g;\n    var _h = initialEndDate.split('T'), _j = _h[0], initialEndDateString = _j === void 0 ? '' : _j, _k = _h[1], initialEndTimeString = _k === void 0 ? '' : _k;\n    var _l = useState(initialStartDateString), startDateString = _l[0], setStartDateString = _l[1];\n    var _m = useState(initialStartTimeString), startTimeString = _m[0], setStartTimeString = _m[1];\n    var _o = useState(initialEndDateString), endDateString = _o[0], setEndDateString = _o[1];\n    var _p = useState(initialEndTimeString), endTimeString = _p[0], setEndTimeString = _p[1];\n    var selectedStartDate = parseDate(startDateString, true);\n    var selectedEndDate = parseDate(endDateString, true);\n    var _q = useState(function () {\n        if (startDateString) {\n            var startDate = parseDate(startDateString);\n            if (isSingleGrid) {\n                return startOfMonth(startDate);\n            }\n            return startOfMonth(addMonths(startDate, 1));\n        }\n        if (endDateString) {\n            return startOfMonth(parseDate(endDateString));\n        }\n        return startOfMonth(Date.now());\n    }), currentMonth = _q[0], setCurrentMonth = _q[1];\n    var _r = useState(function () {\n        if (selectedStartDate) {\n            if (isSameMonth(selectedStartDate, currentMonth)) {\n                return selectedStartDate;\n            }\n            if (!isSingleGrid && isSameMonth(selectedStartDate, addMonths(currentMonth, -1))) {\n                return selectedStartDate;\n            }\n        }\n        return selectFocusedDate(selectedStartDate, currentMonth, isDateEnabled);\n    }), focusedDate = _r[0], setFocusedDate = _r[1];\n    useEffect(function () {\n        var startDate = formatISOStringWithoutTimezone(startDateString, startTimeString);\n        var endDate = formatISOStringWithoutTimezone(endDateString, endTimeString);\n        if (startDate !== initialStartDate || endDate !== initialEndDate) {\n            onSelectDateRange({\n                startDate: startDate,\n                endDate: endDate,\n                type: 'absolute'\n            });\n        }\n    }, [\n        startDateString,\n        startTimeString,\n        endDateString,\n        endTimeString,\n        onSelectDateRange,\n        initialStartDate,\n        initialEndDate,\n    ]);\n    var onSelectDateHandler = useCallback(function (selectedDate) {\n        if (!startDateString && !endDateString) {\n            var startDate = startOfDay(selectedDate);\n            setStartDateString(formatDate(startDate));\n            setStartTimeString(formatTime(startDate));\n            return;\n        }\n        if (startDateString && endDateString) {\n            var startDate = startOfDay(selectedDate);\n            setStartDateString(formatDate(startDate));\n            setStartTimeString(formatTime(startDate));\n            setEndDateString('');\n            setEndTimeString('');\n            return;\n        }\n        if (startDateString && !endDateString) {\n            var parsedStartDate = parseDate(startDateString);\n            if (isBefore(selectedDate, parsedStartDate)) {\n                var startDate = startOfDay(selectedDate);\n                var endDate = endOfDay(parsedStartDate);\n                setStartDateString(formatDate(startDate));\n                setStartTimeString(formatTime(startDate));\n                setEndDateString(formatDate(endDate));\n                setEndTimeString(formatTime(endDate));\n            }\n            else {\n                var endDate = endOfDay(selectedDate);\n                setEndDateString(formatDate(endDate));\n                setEndTimeString(formatTime(endDate));\n            }\n            return;\n        }\n        if (!startDateString && endDateString) {\n            var existingEndDate = parseDate(endDateString);\n            if (isAfter(selectedDate, existingEndDate)) {\n                var startDate = startOfDay(existingEndDate);\n                var endDate = endOfDay(selectedDate);\n                setStartDateString(formatDate(startDate));\n                setStartTimeString(formatTime(startDate));\n                setEndDateString(formatDate(endDate));\n                setEndTimeString(formatTime(endDate));\n            }\n            else {\n                var startDate = startOfDay(selectedDate);\n                setStartDateString(formatDate(startDate));\n                setStartTimeString(formatTime(startDate));\n            }\n            return;\n        }\n    }, [endDateString, startDateString]);\n    var onHeaderChangeMonthHandler = function (isPrevious) {\n        var newCurrentMonth = addMonths(currentMonth, isPrevious ? -1 : 1);\n        setCurrentMonth(newCurrentMonth);\n        var newBaseDateMonth = isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, -1);\n        var newBaseDate = getBaseDate(newBaseDateMonth, 1, isDateEnabled);\n        setFocusedDate(newBaseDate);\n    };\n    var onChangeStartDate = function (e) {\n        var isoDateString = displayToIso(e.detail.value);\n        setStartDateString(isoDateString);\n        if (isoDateString.length >= 8) {\n            var newCurrentMonth = startOfMonth(parseDate(isoDateString));\n            setCurrentMonth(isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, 1));\n        }\n    };\n    var onChangeEndDate = function (e) {\n        var isoDateString = displayToIso(e.detail.value);\n        setEndDateString(isoDateString);\n    };\n    var constrainttextId = useUniqueId('awsui-area-date-range-picker');\n    constrainttextId = i18nStrings.dateTimeConstraintText ? constrainttextId : '';\n    return (React.createElement(InternalSpaceBetween, { size: \"m\" },\n        React.createElement(\"div\", { className: clsx(styles.calendar, (_b = {},\n                _b[styles['one-grid']] = isSingleGrid,\n                _b)), role: \"application\", ref: elementRef },\n            React.createElement(CalendarHeader, { baseDate: currentMonth, locale: locale, onChangeMonth: onHeaderChangeMonthHandler, previousMonthLabel: i18nStrings.previousMonthAriaLabel, nextMonthLabel: i18nStrings.nextMonthAriaLabel, calendarHasFocus: true, isSingleGrid: isSingleGrid }),\n            React.createElement(Grids, { isSingleGrid: isSingleGrid, locale: locale, baseDate: currentMonth, focusedDate: focusedDate, onFocusedDateChange: setFocusedDate, isDateEnabled: isDateEnabled, onSelectDate: onSelectDateHandler, onChangeMonth: setCurrentMonth, startOfWeek: startOfWeek, todayAriaLabel: i18nStrings.todayAriaLabel, selectedStartDate: selectedStartDate, selectedEndDate: selectedEndDate, handleFocusMove: moveFocusHandler })),\n        React.createElement(InternalSpaceBetween, { direction: \"vertical\", size: \"xxs\" },\n            React.createElement(InternalSpaceBetween, { size: \"xs\", direction: isSingleGrid ? 'vertical' : 'horizontal' },\n                React.createElement(\"div\", { className: styles['date-and-time-wrapper'] },\n                    React.createElement(\"div\", { className: styles['date-and-time-wrapper__date'] },\n                        React.createElement(InternalFormField, { label: i18nStrings.startDateLabel, stretch: true },\n                            React.createElement(DateInput, { value: isoToDisplay(startDateString), autoComplete: false, disableBrowserAutocorrect: true, disableAutocompleteOnBlur: false, className: styles['start-date-input'], onChange: onChangeStartDate, placeholder: \"YYYY/MM/DD\", ariaDescribedby: constrainttextId }))),\n                    !dateOnly && (React.createElement(\"div\", { className: styles['date-and-time-wrapper__time'] },\n                        React.createElement(InternalFormField, { label: i18nStrings.startTimeLabel, stretch: true },\n                            React.createElement(InternalTimeInput, { value: startTimeString, onChange: function (e) { return setStartTimeString(e.detail.value); }, format: timeInputFormat, placeholder: timeInputFormat, className: styles['start-time-input'], ariaDescribedby: constrainttextId }))))),\n                React.createElement(\"div\", { className: styles['date-and-time-wrapper'] },\n                    React.createElement(\"div\", { className: styles['date-and-time-wrapper__date'] },\n                        React.createElement(InternalFormField, { label: i18nStrings.endDateLabel, stretch: true },\n                            React.createElement(DateInput, { value: isoToDisplay(endDateString), autoComplete: false, disableBrowserAutocorrect: true, disableAutocompleteOnBlur: false, className: styles['end-date-input'], onChange: onChangeEndDate, placeholder: \"YYYY/MM/DD\", ariaDescribedby: constrainttextId }))),\n                    !dateOnly && (React.createElement(\"div\", { className: styles['date-and-time-wrapper__time'] },\n                        React.createElement(InternalFormField, { label: i18nStrings.endTimeLabel, stretch: true },\n                            React.createElement(InternalTimeInput, { value: endTimeString, onChange: function (e) { return setEndTimeString(e.detail.value); }, format: timeInputFormat, placeholder: timeInputFormat, className: styles['end-time-input'], ariaDescribedby: constrainttextId })))))),\n            i18nStrings.dateTimeConstraintText && (React.createElement(\"div\", { className: styles['date-and-time-constrainttext'], id: constrainttextId }, i18nStrings.dateTimeConstraintText)))));\n}\n"]},"metadata":{},"sourceType":"module"}