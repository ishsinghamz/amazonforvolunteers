{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { fireNonCancelableEvent } from '../internal/events';\nexport var getQueryActions = function (query, onChange, inputRef, preventFocus) {\n  var tokens = query.tokens,\n      operation = query.operation;\n\n  var fireOnChange = function (tokens, operation) {\n    return fireNonCancelableEvent(onChange, {\n      tokens: tokens,\n      operation: operation\n    });\n  };\n\n  var setToken = function (index, newToken) {\n    var newTokens = __spreadArray([], tokens, true);\n\n    if (newTokens && index < newTokens.length) {\n      newTokens[index] = newToken;\n    }\n\n    fireOnChange(newTokens, operation);\n  };\n\n  var removeToken = function (index) {\n    var _a;\n\n    var newTokens = tokens.filter(function (_, i) {\n      return i !== index;\n    });\n    fireOnChange(newTokens, operation);\n    preventFocus.current = true;\n    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n\n  var removeAllTokens = function () {\n    var _a;\n\n    fireOnChange([], operation);\n    preventFocus.current = true;\n    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n\n  var addToken = function (newToken) {\n    var newTokens = __spreadArray([], tokens, true);\n\n    newTokens.push(newToken);\n    fireOnChange(newTokens, operation);\n  };\n\n  var setOperation = function (newOperation) {\n    fireOnChange(tokens, newOperation);\n  };\n\n  return {\n    setToken: setToken,\n    removeToken: removeToken,\n    removeAllTokens: removeAllTokens,\n    addToken: addToken,\n    setOperation: setOperation\n  };\n};\nexport var getAllowedOperators = function (property) {\n  var _a;\n\n  var operators = property.operators,\n      defaultOperator = property.defaultOperator;\n  var operatorOrder = ['=', '!=', ':', '!:', '>=', '<=', '<', '>'];\n  var operatorSet = (_a = {}, _a[defaultOperator !== null && defaultOperator !== void 0 ? defaultOperator : '='] = true, _a);\n  operators === null || operators === void 0 ? void 0 : operators.forEach(function (op) {\n    return operatorSet[op] = true;\n  });\n  return operatorOrder.filter(function (op) {\n    return operatorSet[op];\n  });\n};\nexport var parseText = function (filteringText, filteringProperties, disableFreeTextFiltering) {\n  var negatedGlobalQuery = /^(!:|!)(.*)/.exec(filteringText);\n\n  if (!disableFreeTextFiltering && negatedGlobalQuery) {\n    return {\n      step: 'free-text',\n      operator: '!:',\n      value: negatedGlobalQuery[2].trim()\n    };\n  }\n\n  var property = (filteringProperties === null || filteringProperties === void 0 ? void 0 : filteringProperties.reduce(function (acc, property) {\n    if (filteringText.toLowerCase().indexOf(property.propertyLabel.toLowerCase()) === 0) {\n      if (property.propertyLabel.length > acc.length) {\n        acc.length = property.propertyLabel.length;\n        acc.property = property;\n      }\n    }\n\n    return acc;\n  }, {\n    length: 0\n  })).property;\n\n  if (!property) {\n    return {\n      step: 'free-text',\n      value: filteringText\n    };\n  }\n\n  var allowedOps = getAllowedOperators(property);\n  var textWithoutProperty = filteringText.substring(property.propertyLabel.length);\n  var hasOperator = new RegExp(\"^(\\\\s*)(\" + allowedOps.join('|') + \")(.*)\").exec(textWithoutProperty);\n\n  if (hasOperator) {\n    return {\n      step: 'property',\n      property: property,\n      operator: hasOperator[2],\n      value: hasOperator[3].trim()\n    };\n  }\n\n  var opPrefixesMap = allowedOps.reduce(function (acc, op) {\n    if (op.length > 1) {\n      var substr = op.substring(0, 1);\n      acc[substr] = true;\n    }\n\n    return acc;\n  }, {});\n  var opPrefixes = Object.keys(opPrefixesMap);\n  var enteringOperator = new RegExp(\"^(\\\\s*)([\" + opPrefixes.join(',') + \"])?$\").exec(textWithoutProperty);\n\n  if (enteringOperator) {\n    return {\n      step: 'operator',\n      property: property,\n      operatorPrefix: enteringOperator[2] || ''\n    };\n  }\n\n  return {\n    step: 'free-text',\n    value: filteringText\n  };\n};\nexport var getPropertyOptions = function (filteringProperty, filteringOptions) {\n  return filteringOptions === null || filteringOptions === void 0 ? void 0 : filteringOptions.filter(function (option) {\n    return option.propertyKey === filteringProperty.key;\n  });\n};\nexport var getAllValueSuggestions = function (filteringOptions, filteringProperties, operator, i18nStrings, customGroupsText) {\n  if (operator === void 0) {\n    operator = '=';\n  }\n\n  var defaultGroup = {\n    label: i18nStrings.groupValuesText,\n    options: []\n  };\n  var customGroups = {};\n  filteringOptions === null || filteringOptions === void 0 ? void 0 : filteringOptions.forEach(function (filteringOption) {\n    var property = getPropertyByKey(filteringProperties, filteringOption.propertyKey);\n\n    if (!property) {\n      return;\n    }\n\n    if (getAllowedOperators(property).indexOf(operator) === -1) {\n      return;\n    }\n\n    if (property.group && !customGroups[property.group]) {\n      var label = (customGroupsText === null || customGroupsText === void 0 ? void 0 : customGroupsText.reduce(function (acc, customGroup) {\n        return customGroup.group === property.group ? customGroup.values : acc;\n      }, '')) || '';\n      customGroups[property.group] = {\n        label: label,\n        options: []\n      };\n    }\n\n    var propertyGroup = property.group ? customGroups[property.group] : defaultGroup;\n    propertyGroup.options.push({\n      tokenValue: property.propertyLabel + (operator || '=') + filteringOption.value,\n      label: filteringOption.value,\n      __labelPrefix: property.propertyLabel + ' ' + (operator || '=')\n    });\n  });\n  return __spreadArray([defaultGroup], Object.keys(customGroups).map(function (group) {\n    return customGroups[group];\n  }), true);\n};\nexport var getPropertyByKey = function (filteringProperties, key) {\n  var propertyMap = filteringProperties.reduce(function (acc, property) {\n    acc[property.key] = property;\n    return acc;\n  }, {});\n  return propertyMap[key];\n};\n\nvar filteringPropertyToAutosuggestOption = function (filteringProperty) {\n  return {\n    value: filteringProperty.propertyLabel,\n    keepOpenOnSelect: true\n  };\n};\n\nexport function getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToOption) {\n  var defaultGroup = {\n    label: i18nStrings.groupPropertiesText,\n    options: []\n  };\n  var customGroups = {};\n  filteringProperties.forEach(function (filteringProperty) {\n    var group = filteringProperty.group;\n    var optionsGroup = defaultGroup;\n\n    if (group) {\n      if (!customGroups[group]) {\n        var label = (customGroupsText === null || customGroupsText === void 0 ? void 0 : customGroupsText.reduce(function (acc, customGroup) {\n          return customGroup.group === group ? customGroup.properties : acc;\n        }, '')) || '';\n        customGroups[group] = {\n          options: [],\n          label: label\n        };\n      }\n\n      optionsGroup = customGroups[group];\n    }\n\n    optionsGroup.options.push(filteringPropertyToOption(filteringProperty));\n  });\n  var defaultGroupArray = defaultGroup.options.length ? [defaultGroup] : [];\n  var customGroupsArray = Object.keys(customGroups).map(function (groupKey) {\n    return customGroups[groupKey];\n  });\n  return __spreadArray(__spreadArray([], defaultGroupArray, true), customGroupsArray, true);\n}\nexport var getAutosuggestOptions = function (parsedText, filteringOptions, filteringProperties, customGroupsText, i18nStrings) {\n  switch (parsedText.step) {\n    case 'property':\n      {\n        var _a = parsedText.property,\n            propertyLabel_1 = _a.propertyLabel,\n            groupValuesLabel = _a.groupValuesLabel;\n        var options = getPropertyOptions(parsedText.property, filteringOptions);\n        return {\n          __filterText: parsedText.value.trim(),\n          options: [{\n            options: (options || []).map(function (_a) {\n              var value = _a.value;\n              return {\n                tokenValue: propertyLabel_1 + parsedText.operator + value,\n                label: value,\n                __labelPrefix: propertyLabel_1 + ' ' + parsedText.operator\n              };\n            }),\n            label: groupValuesLabel\n          }]\n        };\n      }\n\n    case 'operator':\n      {\n        return {\n          __filterText: parsedText.property.propertyLabel + ' ' + parsedText.operatorPrefix,\n          options: __spreadArray(__spreadArray([], getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToAutosuggestOption), true), [{\n            options: getAllowedOperators(parsedText.property).map(function (value) {\n              return {\n                value: parsedText.property.propertyLabel + ' ' + value + ' ',\n                label: parsedText.property.propertyLabel + ' ' + value,\n                description: operatorToDescription(value, i18nStrings),\n                keepOpenOnSelect: true\n              };\n            }),\n            label: i18nStrings.operatorsText\n          }], false)\n        };\n      }\n\n    case 'free-text':\n      {\n        var needsValueSuggestions = !!parsedText.value;\n        var needsPropertySuggestions = !(parsedText.step === 'free-text' && parsedText.operator === '!:');\n        return {\n          __filterText: parsedText.value,\n          options: __spreadArray(__spreadArray([], needsPropertySuggestions ? getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToAutosuggestOption) : [], true), needsValueSuggestions ? getAllValueSuggestions(filteringOptions, filteringProperties, parsedText.operator, i18nStrings, customGroupsText) : [], true)\n        };\n      }\n  }\n};\nexport var operatorToDescription = function (operator, i18nStrings) {\n  var _a;\n\n  var mapping = (_a = {}, _a['<'] = i18nStrings.operatorLessText, _a['<='] = i18nStrings.operatorLessOrEqualText, _a['>'] = i18nStrings.operatorGreaterText, _a['>='] = i18nStrings.operatorGreaterOrEqualText, _a[':'] = i18nStrings.operatorContainsText, _a['!:'] = i18nStrings.operatorDoesNotContainText, _a['='] = i18nStrings.operatorEqualsText, _a['!='] = i18nStrings.operatorDoesNotEqualText, _a);\n  return mapping[operator];\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/property-filter/controller.js"],"names":["__spreadArray","fireNonCancelableEvent","getQueryActions","query","onChange","inputRef","preventFocus","tokens","operation","fireOnChange","setToken","index","newToken","newTokens","length","removeToken","_a","filter","_","i","current","focus","removeAllTokens","addToken","push","setOperation","newOperation","getAllowedOperators","property","operators","defaultOperator","operatorOrder","operatorSet","forEach","op","parseText","filteringText","filteringProperties","disableFreeTextFiltering","negatedGlobalQuery","exec","step","operator","value","trim","reduce","acc","toLowerCase","indexOf","propertyLabel","allowedOps","textWithoutProperty","substring","hasOperator","RegExp","join","opPrefixesMap","substr","opPrefixes","Object","keys","enteringOperator","operatorPrefix","getPropertyOptions","filteringProperty","filteringOptions","option","propertyKey","key","getAllValueSuggestions","i18nStrings","customGroupsText","defaultGroup","label","groupValuesText","options","customGroups","filteringOption","getPropertyByKey","group","customGroup","values","propertyGroup","tokenValue","__labelPrefix","map","propertyMap","filteringPropertyToAutosuggestOption","keepOpenOnSelect","getPropertySuggestions","filteringPropertyToOption","groupPropertiesText","optionsGroup","properties","defaultGroupArray","customGroupsArray","groupKey","getAutosuggestOptions","parsedText","propertyLabel_1","groupValuesLabel","__filterText","description","operatorToDescription","operatorsText","needsValueSuggestions","needsPropertySuggestions","mapping","operatorLessText","operatorLessOrEqualText","operatorGreaterText","operatorGreaterOrEqualText","operatorContainsText","operatorDoesNotContainText","operatorEqualsText","operatorDoesNotEqualText"],"mappings":"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","sourcesContent":["import { __spreadArray } from \"tslib\";\nimport { fireNonCancelableEvent } from '../internal/events';\nexport var getQueryActions = function (query, onChange, inputRef, preventFocus) {\n    var tokens = query.tokens, operation = query.operation;\n    var fireOnChange = function (tokens, operation) {\n        return fireNonCancelableEvent(onChange, { tokens: tokens, operation: operation });\n    };\n    var setToken = function (index, newToken) {\n        var newTokens = __spreadArray([], tokens, true);\n        if (newTokens && index < newTokens.length) {\n            newTokens[index] = newToken;\n        }\n        fireOnChange(newTokens, operation);\n    };\n    var removeToken = function (index) {\n        var _a;\n        var newTokens = tokens.filter(function (_, i) { return i !== index; });\n        fireOnChange(newTokens, operation);\n        preventFocus.current = true;\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    var removeAllTokens = function () {\n        var _a;\n        fireOnChange([], operation);\n        preventFocus.current = true;\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    var addToken = function (newToken) {\n        var newTokens = __spreadArray([], tokens, true);\n        newTokens.push(newToken);\n        fireOnChange(newTokens, operation);\n    };\n    var setOperation = function (newOperation) {\n        fireOnChange(tokens, newOperation);\n    };\n    return {\n        setToken: setToken,\n        removeToken: removeToken,\n        removeAllTokens: removeAllTokens,\n        addToken: addToken,\n        setOperation: setOperation\n    };\n};\nexport var getAllowedOperators = function (property) {\n    var _a;\n    var operators = property.operators, defaultOperator = property.defaultOperator;\n    var operatorOrder = ['=', '!=', ':', '!:', '>=', '<=', '<', '>'];\n    var operatorSet = (_a = {}, _a[defaultOperator !== null && defaultOperator !== void 0 ? defaultOperator : '='] = true, _a);\n    operators === null || operators === void 0 ? void 0 : operators.forEach(function (op) { return (operatorSet[op] = true); });\n    return operatorOrder.filter(function (op) { return operatorSet[op]; });\n};\nexport var parseText = function (filteringText, filteringProperties, disableFreeTextFiltering) {\n    var negatedGlobalQuery = /^(!:|!)(.*)/.exec(filteringText);\n    if (!disableFreeTextFiltering && negatedGlobalQuery) {\n        return {\n            step: 'free-text',\n            operator: '!:',\n            value: negatedGlobalQuery[2].trim()\n        };\n    }\n    var property = (filteringProperties === null || filteringProperties === void 0 ? void 0 : filteringProperties.reduce(function (acc, property) {\n        if (filteringText.toLowerCase().indexOf(property.propertyLabel.toLowerCase()) === 0) {\n            if (property.propertyLabel.length > acc.length) {\n                acc.length = property.propertyLabel.length;\n                acc.property = property;\n            }\n        }\n        return acc;\n    }, { length: 0 })).property;\n    if (!property) {\n        return {\n            step: 'free-text',\n            value: filteringText\n        };\n    }\n    var allowedOps = getAllowedOperators(property);\n    var textWithoutProperty = filteringText.substring(property.propertyLabel.length);\n    var hasOperator = new RegExp(\"^(\\\\s*)(\" + allowedOps.join('|') + \")(.*)\").exec(textWithoutProperty);\n    if (hasOperator) {\n        return {\n            step: 'property',\n            property: property,\n            operator: hasOperator[2],\n            value: hasOperator[3].trim()\n        };\n    }\n    var opPrefixesMap = allowedOps.reduce(function (acc, op) {\n        if (op.length > 1) {\n            var substr = op.substring(0, 1);\n            acc[substr] = true;\n        }\n        return acc;\n    }, {});\n    var opPrefixes = Object.keys(opPrefixesMap);\n    var enteringOperator = new RegExp(\"^(\\\\s*)([\" + opPrefixes.join(',') + \"])?$\").exec(textWithoutProperty);\n    if (enteringOperator) {\n        return { step: 'operator', property: property, operatorPrefix: enteringOperator[2] || '' };\n    }\n    return {\n        step: 'free-text',\n        value: filteringText\n    };\n};\nexport var getPropertyOptions = function (filteringProperty, filteringOptions) {\n    return filteringOptions === null || filteringOptions === void 0 ? void 0 : filteringOptions.filter(function (option) { return option.propertyKey === filteringProperty.key; });\n};\nexport var getAllValueSuggestions = function (filteringOptions, filteringProperties, operator, i18nStrings, customGroupsText) {\n    if (operator === void 0) { operator = '='; }\n    var defaultGroup = {\n        label: i18nStrings.groupValuesText,\n        options: []\n    };\n    var customGroups = {};\n    filteringOptions === null || filteringOptions === void 0 ? void 0 : filteringOptions.forEach(function (filteringOption) {\n        var property = getPropertyByKey(filteringProperties, filteringOption.propertyKey);\n        if (!property) {\n            return;\n        }\n        if (getAllowedOperators(property).indexOf(operator) === -1) {\n            return;\n        }\n        if (property.group && !customGroups[property.group]) {\n            var label = (customGroupsText === null || customGroupsText === void 0 ? void 0 : customGroupsText.reduce(function (acc, customGroup) { return (customGroup.group === property.group ? customGroup.values : acc); }, '')) || '';\n            customGroups[property.group] = {\n                label: label,\n                options: []\n            };\n        }\n        var propertyGroup = property.group ? customGroups[property.group] : defaultGroup;\n        propertyGroup.options.push({\n            tokenValue: property.propertyLabel + (operator || '=') + filteringOption.value,\n            label: filteringOption.value,\n            __labelPrefix: property.propertyLabel + ' ' + (operator || '=')\n        });\n    });\n    return __spreadArray([defaultGroup], Object.keys(customGroups).map(function (group) { return customGroups[group]; }), true);\n};\nexport var getPropertyByKey = function (filteringProperties, key) {\n    var propertyMap = filteringProperties.reduce(function (acc, property) {\n        acc[property.key] = property;\n        return acc;\n    }, {});\n    return propertyMap[key];\n};\nvar filteringPropertyToAutosuggestOption = function (filteringProperty) { return ({\n    value: filteringProperty.propertyLabel,\n    keepOpenOnSelect: true\n}); };\nexport function getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToOption) {\n    var defaultGroup = {\n        label: i18nStrings.groupPropertiesText,\n        options: []\n    };\n    var customGroups = {};\n    filteringProperties.forEach(function (filteringProperty) {\n        var group = filteringProperty.group;\n        var optionsGroup = defaultGroup;\n        if (group) {\n            if (!customGroups[group]) {\n                var label = (customGroupsText === null || customGroupsText === void 0 ? void 0 : customGroupsText.reduce(function (acc, customGroup) { return (customGroup.group === group ? customGroup.properties : acc); }, '')) || '';\n                customGroups[group] = { options: [], label: label };\n            }\n            optionsGroup = customGroups[group];\n        }\n        optionsGroup.options.push(filteringPropertyToOption(filteringProperty));\n    });\n    var defaultGroupArray = defaultGroup.options.length ? [defaultGroup] : [];\n    var customGroupsArray = Object.keys(customGroups).map(function (groupKey) { return customGroups[groupKey]; });\n    return __spreadArray(__spreadArray([], defaultGroupArray, true), customGroupsArray, true);\n}\nexport var getAutosuggestOptions = function (parsedText, filteringOptions, filteringProperties, customGroupsText, i18nStrings) {\n    switch (parsedText.step) {\n        case 'property': {\n            var _a = parsedText.property, propertyLabel_1 = _a.propertyLabel, groupValuesLabel = _a.groupValuesLabel;\n            var options = getPropertyOptions(parsedText.property, filteringOptions);\n            return {\n                __filterText: parsedText.value.trim(),\n                options: [\n                    {\n                        options: (options || []).map(function (_a) {\n                            var value = _a.value;\n                            return ({\n                                tokenValue: propertyLabel_1 + parsedText.operator + value,\n                                label: value,\n                                __labelPrefix: propertyLabel_1 + ' ' + parsedText.operator\n                            });\n                        }),\n                        label: groupValuesLabel\n                    },\n                ]\n            };\n        }\n        case 'operator': {\n            return {\n                __filterText: parsedText.property.propertyLabel + ' ' + parsedText.operatorPrefix,\n                options: __spreadArray(__spreadArray([], getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToAutosuggestOption), true), [\n                    {\n                        options: getAllowedOperators(parsedText.property).map(function (value) { return ({\n                            value: parsedText.property.propertyLabel + ' ' + value + ' ',\n                            label: parsedText.property.propertyLabel + ' ' + value,\n                            description: operatorToDescription(value, i18nStrings),\n                            keepOpenOnSelect: true\n                        }); }),\n                        label: i18nStrings.operatorsText\n                    },\n                ], false)\n            };\n        }\n        case 'free-text': {\n            var needsValueSuggestions = !!parsedText.value;\n            var needsPropertySuggestions = !(parsedText.step === 'free-text' && parsedText.operator === '!:');\n            return {\n                __filterText: parsedText.value,\n                options: __spreadArray(__spreadArray([], (needsPropertySuggestions\n                    ? getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToAutosuggestOption)\n                    : []), true), (needsValueSuggestions\n                    ? getAllValueSuggestions(filteringOptions, filteringProperties, parsedText.operator, i18nStrings, customGroupsText)\n                    : []), true)\n            };\n        }\n    }\n};\nexport var operatorToDescription = function (operator, i18nStrings) {\n    var _a;\n    var mapping = (_a = {},\n        _a['<'] = i18nStrings.operatorLessText,\n        _a['<='] = i18nStrings.operatorLessOrEqualText,\n        _a['>'] = i18nStrings.operatorGreaterText,\n        _a['>='] = i18nStrings.operatorGreaterOrEqualText,\n        _a[':'] = i18nStrings.operatorContainsText,\n        _a['!:'] = i18nStrings.operatorDoesNotContainText,\n        _a['='] = i18nStrings.operatorEqualsText,\n        _a['!='] = i18nStrings.operatorDoesNotEqualText,\n        _a);\n    return mapping[operator];\n};\n"]},"metadata":{},"sourceType":"module"}