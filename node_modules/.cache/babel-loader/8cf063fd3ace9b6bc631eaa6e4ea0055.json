{"ast":null,"code":"import { __assign } from \"tslib\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Transition } from '../internal/components/transition';\nimport { Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-utils/styles.css.js';\nexport function NavigationPanel(_a) {\n  var ariaLabels = _a.ariaLabels,\n      footerHeight = _a.footerHeight,\n      headerHeight = _a.headerHeight,\n      isHidden = _a.isHidden,\n      isMobile = _a.isMobile,\n      isMotionEnabled = _a.isMotionEnabled,\n      isRefresh = _a.isRefresh,\n      navigation = _a.navigation,\n      navigationDrawerWidth = _a.navigationDrawerWidth,\n      navigationWidth = _a.navigationWidth,\n      navigationOpen = _a.navigationOpen,\n      navigationPanelTransitionState = _a.navigationPanelTransitionState,\n      onClick = _a.onClick,\n      onNavigationToggle = _a.onNavigationToggle,\n      panelHeightStyle = _a.panelHeightStyle,\n      setNavigationPanelTransitionState = _a.setNavigationPanelTransitionState,\n      toggleRefs = _a.toggleRefs;\n  var showNavigationPanelExitState = isRefresh && isMotionEnabled && (!navigationOpen && navigationPanelTransitionState === 'exiting' || navigationOpen && (navigationPanelTransitionState === 'enter' || navigationPanelTransitionState === 'exited'));\n  var transitioning = isMotionEnabled && ['exit', 'exiting'].indexOf(navigationPanelTransitionState) !== -1;\n  return React.createElement(Transition, {\n    \"in\": navigationOpen,\n    onStatusChange: setNavigationPanelTransitionState,\n    disabled: !isRefresh\n  }, function (_, navigationPanelTransitionRef) {\n    var _a, _b;\n\n    return React.createElement(\"div\", {\n      style: {\n        width: navigationDrawerWidth\n      }\n    }, React.createElement(\"div\", {\n      ref: navigationPanelTransitionRef,\n      className: clsx(styles['panel-wrapper-outer'], (_a = {}, _a[styles.mobile] = isMobile, _a[styles.open] = navigationOpen, _a[styles['navigation-panel-exit-state']] = showNavigationPanelExitState, _a), isRefresh && (_b = {}, _b[styles.refresh] = true, _b[styles['enable-motion']] = isMotionEnabled && navigationPanelTransitionState !== 'enter' && navigationPanelTransitionState !== 'entered' && navigationPanelTransitionState !== 'exit' && navigationPanelTransitionState !== 'exited', _b[styles.hide] = showNavigationPanelExitState && !isHidden, _b)),\n      style: __assign({}, isMobile ? {\n        top: headerHeight,\n        bottom: footerHeight\n      } : panelHeightStyle)\n    }, React.createElement(Drawer, {\n      type: \"navigation\",\n      visualRefresh: isRefresh,\n      isMobile: isMobile,\n      width: navigationWidth,\n      isOpen: navigationOpen || transitioning,\n      isHidden: isHidden,\n      onToggle: onNavigationToggle,\n      toggleRefs: toggleRefs,\n      onClick: onClick,\n      contentClassName: clsx(styles.navigation, testutilStyles.navigation),\n      closeClassName: clsx(styles['navigation-close'], testutilStyles['navigation-close']),\n      toggleClassName: clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle']),\n      topOffset: isRefresh ? 0 : headerHeight,\n      bottomOffset: isRefresh ? 0 : footerHeight,\n      ariaLabels: ariaLabels\n    }, navigation)));\n  });\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/app-layout/navigation-panel.js"],"names":["__assign","clsx","React","Transition","Drawer","styles","testutilStyles","NavigationPanel","_a","ariaLabels","footerHeight","headerHeight","isHidden","isMobile","isMotionEnabled","isRefresh","navigation","navigationDrawerWidth","navigationWidth","navigationOpen","navigationPanelTransitionState","onClick","onNavigationToggle","panelHeightStyle","setNavigationPanelTransitionState","toggleRefs","showNavigationPanelExitState","transitioning","indexOf","createElement","onStatusChange","disabled","_","navigationPanelTransitionRef","_b","style","width","ref","className","mobile","open","refresh","hide","top","bottom","type","visualRefresh","isOpen","onToggle","contentClassName","closeClassName","toggleClassName","topOffset","bottomOffset"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Transition } from '../internal/components/transition';\nimport { Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-utils/styles.css.js';\nexport function NavigationPanel(_a) {\n    var ariaLabels = _a.ariaLabels, footerHeight = _a.footerHeight, headerHeight = _a.headerHeight, isHidden = _a.isHidden, isMobile = _a.isMobile, isMotionEnabled = _a.isMotionEnabled, isRefresh = _a.isRefresh, navigation = _a.navigation, navigationDrawerWidth = _a.navigationDrawerWidth, navigationWidth = _a.navigationWidth, navigationOpen = _a.navigationOpen, navigationPanelTransitionState = _a.navigationPanelTransitionState, onClick = _a.onClick, onNavigationToggle = _a.onNavigationToggle, panelHeightStyle = _a.panelHeightStyle, setNavigationPanelTransitionState = _a.setNavigationPanelTransitionState, toggleRefs = _a.toggleRefs;\n    var showNavigationPanelExitState = isRefresh &&\n        isMotionEnabled &&\n        ((!navigationOpen && navigationPanelTransitionState === 'exiting') ||\n            (navigationOpen && (navigationPanelTransitionState === 'enter' || navigationPanelTransitionState === 'exited')));\n    var transitioning = isMotionEnabled && ['exit', 'exiting'].indexOf(navigationPanelTransitionState) !== -1;\n    return (React.createElement(Transition, { \"in\": navigationOpen, onStatusChange: setNavigationPanelTransitionState, disabled: !isRefresh }, function (_, navigationPanelTransitionRef) {\n        var _a, _b;\n        return (React.createElement(\"div\", { style: {\n                width: navigationDrawerWidth\n            } },\n            React.createElement(\"div\", { ref: navigationPanelTransitionRef, className: clsx(styles['panel-wrapper-outer'], (_a = {},\n                    _a[styles.mobile] = isMobile,\n                    _a[styles.open] = navigationOpen,\n                    _a[styles['navigation-panel-exit-state']] = showNavigationPanelExitState,\n                    _a), isRefresh && (_b = {},\n                    _b[styles.refresh] = true,\n                    _b[styles['enable-motion']] = isMotionEnabled &&\n                        navigationPanelTransitionState !== 'enter' &&\n                        navigationPanelTransitionState !== 'entered' &&\n                        navigationPanelTransitionState !== 'exit' &&\n                        navigationPanelTransitionState !== 'exited',\n                    _b[styles.hide] = showNavigationPanelExitState && !isHidden,\n                    _b)), style: __assign({}, (isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle)) },\n                React.createElement(Drawer, { type: \"navigation\", visualRefresh: isRefresh, isMobile: isMobile, width: navigationWidth, isOpen: navigationOpen || transitioning, isHidden: isHidden, onToggle: onNavigationToggle, toggleRefs: toggleRefs, onClick: onClick, contentClassName: clsx(styles.navigation, testutilStyles.navigation), closeClassName: clsx(styles['navigation-close'], testutilStyles['navigation-close']), toggleClassName: clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle']), topOffset: isRefresh ? 0 : headerHeight, bottomOffset: isRefresh ? 0 : footerHeight, ariaLabels: ariaLabels }, navigation))));\n    }));\n}\n"]},"metadata":{},"sourceType":"module"}