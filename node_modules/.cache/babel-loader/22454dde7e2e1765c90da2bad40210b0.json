{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalModal from '../modal/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { copyPreferences, mergePreferences, ModalContentLayout, PageSizePreference, WrapLinesPreference, CustomPreference } from './utils';\nimport VisibleContentPreference from './visible-content';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nvar ModalContent = function (_a) {\n  var _b = _a.preferences,\n      preferences = _b === void 0 ? {} : _b,\n      pageSizePreference = _a.pageSizePreference,\n      wrapLinesPreference = _a.wrapLinesPreference,\n      customPreference = _a.customPreference,\n      visibleContentPreference = _a.visibleContentPreference,\n      onChange = _a.onChange;\n\n  if (!visibleContentPreference && !pageSizePreference && !wrapLinesPreference && customPreference) {\n    return React.createElement(CustomPreference, {\n      value: preferences.custom,\n      customPreference: customPreference,\n      onChange: function (custom) {\n        return onChange({\n          custom: custom\n        });\n      }\n    });\n  }\n\n  return React.createElement(ModalContentLayout, {\n    left: React.createElement(InternalSpaceBetween, {\n      size: \"l\"\n    }, pageSizePreference && React.createElement(PageSizePreference, __assign({\n      value: preferences.pageSize\n    }, pageSizePreference, {\n      onChange: function (pageSize) {\n        return onChange({\n          pageSize: pageSize\n        });\n      }\n    })), wrapLinesPreference && React.createElement(WrapLinesPreference, __assign({\n      value: preferences.wrapLines\n    }, wrapLinesPreference, {\n      onChange: function (wrapLines) {\n        return onChange({\n          wrapLines: wrapLines\n        });\n      }\n    })), customPreference && React.createElement(CustomPreference, {\n      value: preferences.custom,\n      customPreference: customPreference,\n      onChange: function (custom) {\n        return onChange({\n          custom: custom\n        });\n      }\n    })),\n    right: visibleContentPreference && React.createElement(VisibleContentPreference, __assign({\n      value: preferences.visibleContent\n    }, visibleContentPreference, {\n      onChange: function (visibleContent) {\n        return onChange({\n          visibleContent: visibleContent\n        });\n      }\n    }))\n  });\n};\n\nexport default function CollectionPreferences(_a) {\n  var title = _a.title,\n      confirmLabel = _a.confirmLabel,\n      cancelLabel = _a.cancelLabel,\n      _b = _a.disabled,\n      disabled = _b === void 0 ? false : _b,\n      onConfirm = _a.onConfirm,\n      onCancel = _a.onCancel,\n      visibleContentPreference = _a.visibleContentPreference,\n      pageSizePreference = _a.pageSizePreference,\n      wrapLinesPreference = _a.wrapLinesPreference,\n      preferences = _a.preferences,\n      customPreference = _a.customPreference,\n      rest = __rest(_a, [\"title\", \"confirmLabel\", \"cancelLabel\", \"disabled\", \"onConfirm\", \"onCancel\", \"visibleContentPreference\", \"pageSizePreference\", \"wrapLinesPreference\", \"preferences\", \"customPreference\"]);\n\n  var __internalRootRef = useBaseComponent('CollectionPreferences').__internalRootRef;\n\n  checkControlled('CollectioPreferences', 'preferences', preferences, 'onConfirm', onConfirm);\n  var baseProps = getBaseProps(rest);\n\n  var _c = useState(false),\n      modalVisible = _c[0],\n      setModalVisible = _c[1];\n\n  var _d = useState(copyPreferences(preferences || {})),\n      temporaryPreferences = _d[0],\n      setTemporaryPreferences = _d[1];\n\n  var triggerRef = useRef(null);\n  var dialogPreviouslyOpen = useRef(false);\n  useEffect(function () {\n    if (!modalVisible) {\n      dialogPreviouslyOpen.current && triggerRef.current && triggerRef.current.focus();\n    } else {\n      dialogPreviouslyOpen.current = true;\n    }\n  }, [modalVisible]);\n\n  var onConfirmListener = function () {\n    setModalVisible(false);\n    fireNonCancelableEvent(onConfirm, temporaryPreferences);\n  };\n\n  var onCancelListener = function () {\n    fireNonCancelableEvent(onCancel, {});\n    setModalVisible(false);\n    setTemporaryPreferences(copyPreferences(preferences || {}));\n  };\n\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(InternalButton, {\n    ref: triggerRef,\n    className: styles['trigger-button'],\n    disabled: disabled,\n    ariaLabel: title,\n    onClick: function () {\n      setTemporaryPreferences(copyPreferences(preferences || {}));\n      setModalVisible(true);\n    },\n    variant: \"icon\",\n    iconName: \"settings\",\n    formAction: \"none\"\n  }), !disabled && modalVisible && React.createElement(InternalModal, {\n    className: styles['modal-root'],\n    visible: true,\n    header: title,\n    footer: React.createElement(InternalBox, {\n      float: \"right\"\n    }, React.createElement(InternalSpaceBetween, {\n      direction: \"horizontal\",\n      size: \"xs\"\n    }, React.createElement(InternalButton, {\n      className: styles['cancel-button'],\n      variant: \"link\",\n      formAction: \"none\",\n      onClick: onCancelListener\n    }, cancelLabel), React.createElement(InternalButton, {\n      className: styles['confirm-button'],\n      variant: \"primary\",\n      formAction: \"none\",\n      onClick: onConfirmListener\n    }, confirmLabel))),\n    closeAriaLabel: cancelLabel,\n    size: \"large\",\n    onDismiss: onCancelListener\n  }, React.createElement(ModalContent, {\n    preferences: temporaryPreferences,\n    visibleContentPreference: visibleContentPreference,\n    pageSizePreference: pageSizePreference,\n    wrapLinesPreference: wrapLinesPreference,\n    customPreference: customPreference,\n    onChange: function (changedPreferences) {\n      return setTemporaryPreferences(mergePreferences(changedPreferences, temporaryPreferences));\n    }\n  })));\n}\napplyDisplayName(CollectionPreferences, 'CollectionPreferences');","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/collection-preferences/index.js"],"names":["__assign","__rest","React","useEffect","useRef","useState","clsx","fireNonCancelableEvent","getBaseProps","InternalBox","InternalButton","InternalModal","InternalSpaceBetween","copyPreferences","mergePreferences","ModalContentLayout","PageSizePreference","WrapLinesPreference","CustomPreference","VisibleContentPreference","checkControlled","styles","applyDisplayName","useBaseComponent","ModalContent","_a","_b","preferences","pageSizePreference","wrapLinesPreference","customPreference","visibleContentPreference","onChange","createElement","value","custom","left","size","pageSize","wrapLines","right","visibleContent","CollectionPreferences","title","confirmLabel","cancelLabel","disabled","onConfirm","onCancel","rest","__internalRootRef","baseProps","_c","modalVisible","setModalVisible","_d","temporaryPreferences","setTemporaryPreferences","triggerRef","dialogPreviouslyOpen","current","focus","onConfirmListener","onCancelListener","className","root","ref","ariaLabel","onClick","variant","iconName","formAction","visible","header","footer","float","direction","closeAriaLabel","onDismiss","changedPreferences"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalModal from '../modal/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { copyPreferences, mergePreferences, ModalContentLayout, PageSizePreference, WrapLinesPreference, CustomPreference, } from './utils';\nimport VisibleContentPreference from './visible-content';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar ModalContent = function (_a) {\n    var _b = _a.preferences, preferences = _b === void 0 ? {} : _b, pageSizePreference = _a.pageSizePreference, wrapLinesPreference = _a.wrapLinesPreference, customPreference = _a.customPreference, visibleContentPreference = _a.visibleContentPreference, onChange = _a.onChange;\n    if (!visibleContentPreference && !pageSizePreference && !wrapLinesPreference && customPreference) {\n        return (React.createElement(CustomPreference, { value: preferences.custom, customPreference: customPreference, onChange: function (custom) { return onChange({ custom: custom }); } }));\n    }\n    return (React.createElement(ModalContentLayout, { left: React.createElement(InternalSpaceBetween, { size: \"l\" },\n            pageSizePreference && (React.createElement(PageSizePreference, __assign({ value: preferences.pageSize }, pageSizePreference, { onChange: function (pageSize) { return onChange({ pageSize: pageSize }); } }))),\n            wrapLinesPreference && (React.createElement(WrapLinesPreference, __assign({ value: preferences.wrapLines }, wrapLinesPreference, { onChange: function (wrapLines) { return onChange({ wrapLines: wrapLines }); } }))),\n            customPreference && (React.createElement(CustomPreference, { value: preferences.custom, customPreference: customPreference, onChange: function (custom) { return onChange({ custom: custom }); } }))), right: visibleContentPreference && (React.createElement(VisibleContentPreference, __assign({ value: preferences.visibleContent }, visibleContentPreference, { onChange: function (visibleContent) { return onChange({ visibleContent: visibleContent }); } }))) }));\n};\nexport default function CollectionPreferences(_a) {\n    var title = _a.title, confirmLabel = _a.confirmLabel, cancelLabel = _a.cancelLabel, _b = _a.disabled, disabled = _b === void 0 ? false : _b, onConfirm = _a.onConfirm, onCancel = _a.onCancel, visibleContentPreference = _a.visibleContentPreference, pageSizePreference = _a.pageSizePreference, wrapLinesPreference = _a.wrapLinesPreference, preferences = _a.preferences, customPreference = _a.customPreference, rest = __rest(_a, [\"title\", \"confirmLabel\", \"cancelLabel\", \"disabled\", \"onConfirm\", \"onCancel\", \"visibleContentPreference\", \"pageSizePreference\", \"wrapLinesPreference\", \"preferences\", \"customPreference\"]);\n    var __internalRootRef = useBaseComponent('CollectionPreferences').__internalRootRef;\n    checkControlled('CollectioPreferences', 'preferences', preferences, 'onConfirm', onConfirm);\n    var baseProps = getBaseProps(rest);\n    var _c = useState(false), modalVisible = _c[0], setModalVisible = _c[1];\n    var _d = useState(copyPreferences(preferences || {})), temporaryPreferences = _d[0], setTemporaryPreferences = _d[1];\n    var triggerRef = useRef(null);\n    var dialogPreviouslyOpen = useRef(false);\n    useEffect(function () {\n        if (!modalVisible) {\n            dialogPreviouslyOpen.current && triggerRef.current && triggerRef.current.focus();\n        }\n        else {\n            dialogPreviouslyOpen.current = true;\n        }\n    }, [modalVisible]);\n    var onConfirmListener = function () {\n        setModalVisible(false);\n        fireNonCancelableEvent(onConfirm, temporaryPreferences);\n    };\n    var onCancelListener = function () {\n        fireNonCancelableEvent(onCancel, {});\n        setModalVisible(false);\n        setTemporaryPreferences(copyPreferences(preferences || {}));\n    };\n    return (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(baseProps.className, styles.root), ref: __internalRootRef }),\n        React.createElement(InternalButton, { ref: triggerRef, className: styles['trigger-button'], disabled: disabled, ariaLabel: title, onClick: function () {\n                setTemporaryPreferences(copyPreferences(preferences || {}));\n                setModalVisible(true);\n            }, variant: \"icon\", iconName: \"settings\", formAction: \"none\" }),\n        !disabled && modalVisible && (React.createElement(InternalModal, { className: styles['modal-root'], visible: true, header: title, footer: React.createElement(InternalBox, { float: \"right\" },\n                React.createElement(InternalSpaceBetween, { direction: \"horizontal\", size: \"xs\" },\n                    React.createElement(InternalButton, { className: styles['cancel-button'], variant: \"link\", formAction: \"none\", onClick: onCancelListener }, cancelLabel),\n                    React.createElement(InternalButton, { className: styles['confirm-button'], variant: \"primary\", formAction: \"none\", onClick: onConfirmListener }, confirmLabel))), closeAriaLabel: cancelLabel, size: \"large\", onDismiss: onCancelListener },\n            React.createElement(ModalContent, { preferences: temporaryPreferences, visibleContentPreference: visibleContentPreference, pageSizePreference: pageSizePreference, wrapLinesPreference: wrapLinesPreference, customPreference: customPreference, onChange: function (changedPreferences) {\n                    return setTemporaryPreferences(mergePreferences(changedPreferences, temporaryPreferences));\n                } })))));\n}\napplyDisplayName(CollectionPreferences, 'CollectionPreferences');\n"]},"metadata":{},"sourceType":"module"}