{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef, useState, useMemo } from 'react';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { KeyCode } from '../internal/keycode';\nimport SelectToggle from '../token-group/toggle';\nimport { generateUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { Token } from './token';\nimport { getQueryActions, parseText, getAutosuggestOptions } from './controller';\nimport { useLoadItems } from './use-load-items';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar PropertyFilter = React.forwardRef(function (_a, ref) {\n  var disabled = _a.disabled,\n      i18nStrings = _a.i18nStrings,\n      countText = _a.countText,\n      query = _a.query,\n      hideOperations = _a.hideOperations,\n      onChange = _a.onChange,\n      filteringProperties = _a.filteringProperties,\n      filteringOptions = _a.filteringOptions,\n      customGroupsText = _a.customGroupsText,\n      _b = _a.disableFreeTextFiltering,\n      disableFreeTextFiltering = _b === void 0 ? false : _b,\n      onLoadItems = _a.onLoadItems,\n      virtualScroll = _a.virtualScroll,\n      customControl = _a.customControl,\n      filteringEmpty = _a.filteringEmpty,\n      filteringLoadingText = _a.filteringLoadingText,\n      filteringFinishedText = _a.filteringFinishedText,\n      filteringErrorText = _a.filteringErrorText,\n      filteringRecoveryText = _a.filteringRecoveryText,\n      filteringStatusType = _a.filteringStatusType,\n      asyncProperties = _a.asyncProperties,\n      tokenLimit = _a.tokenLimit,\n      expandToViewport = _a.expandToViewport,\n      rest = __rest(_a, [\"disabled\", \"i18nStrings\", \"countText\", \"query\", \"hideOperations\", \"onChange\", \"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"disableFreeTextFiltering\", \"onLoadItems\", \"virtualScroll\", \"customControl\", \"filteringEmpty\", \"filteringLoadingText\", \"filteringFinishedText\", \"filteringErrorText\", \"filteringRecoveryText\", \"filteringStatusType\", \"asyncProperties\", \"tokenLimit\", \"expandToViewport\"]);\n\n  var __internalRootRef = useBaseComponent('PropertyFilter').__internalRootRef;\n\n  var inputRef = useRef(null);\n  var preventFocus = useRef(false);\n  var baseProps = getBaseProps(rest);\n  useForwardFocus(ref, inputRef);\n  var tokens = query.tokens,\n      operation = query.operation;\n  var showResults = (tokens === null || tokens === void 0 ? void 0 : tokens.length) && !disabled;\n\n  var _c = getQueryActions(query, onChange, inputRef, preventFocus),\n      addToken = _c.addToken,\n      removeToken = _c.removeToken,\n      setToken = _c.setToken,\n      setOperation = _c.setOperation,\n      removeAllTokens = _c.removeAllTokens;\n\n  var _d = useState(''),\n      filteringText = _d[0],\n      setFilteringText = _d[1];\n\n  var parsedText = parseText(filteringText, filteringProperties, disableFreeTextFiltering);\n  var autosuggestOptions = getAutosuggestOptions(parsedText, filteringOptions, filteringProperties, customGroupsText, i18nStrings);\n\n  var createToken = function (currentText) {\n    var parsedText = parseText(currentText, filteringProperties, disableFreeTextFiltering);\n    var newToken;\n\n    switch (parsedText.step) {\n      case 'property':\n        {\n          newToken = {\n            propertyKey: parsedText.property.key,\n            operator: parsedText.operator,\n            value: parsedText.value.trim()\n          };\n          break;\n        }\n\n      case 'free-text':\n        {\n          newToken = {\n            operator: parsedText.operator || ':',\n            value: parsedText.value\n          };\n          break;\n        }\n\n      case 'operator':\n        {\n          newToken = {\n            operator: ':',\n            value: currentText\n          };\n          break;\n        }\n    }\n\n    if (disableFreeTextFiltering && !('propertyKey' in newToken)) {\n      return;\n    }\n\n    addToken(newToken);\n    setFilteringText('');\n  };\n\n  var ignoreKeyDown = useRef(false);\n\n  var handleKeyDown = function (event) {\n    if (filteringText && !ignoreKeyDown.current && event.detail.keyCode === KeyCode.enter) {\n      createToken(filteringText);\n    }\n  };\n\n  var getLoadMoreDetail = function (parsedText, filteringText) {\n    var loadMoreDetail = {\n      filteringProperty: undefined,\n      filteringText: filteringText,\n      filteringOperator: undefined\n    };\n\n    if (parsedText.step === 'property') {\n      loadMoreDetail.filteringProperty = parsedText.property;\n      loadMoreDetail.filteringText = parsedText.value;\n      loadMoreDetail.filteringOperator = parsedText.operator;\n    }\n\n    return loadMoreDetail;\n  };\n\n  var loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n  var inputLoadItemsHandlers = useLoadItems(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);\n  var asyncProps = {\n    empty: filteringEmpty,\n    loadingText: filteringLoadingText,\n    finishedText: filteringFinishedText,\n    errorText: filteringErrorText,\n    recoveryText: filteringRecoveryText,\n    statusType: filteringStatusType\n  };\n  var asyncAutosuggestProps = !!filteringText.length || asyncProperties ? __assign(__assign({}, inputLoadItemsHandlers), asyncProps) : {};\n\n  var handleSelected = function (event) {\n    ignoreKeyDown.current = true;\n    setTimeout(function () {\n      ignoreKeyDown.current = false;\n    }, 0);\n    var option = event.detail;\n    var value = option.value || '';\n\n    if ('tokenValue' in option) {\n      createToken(option.tokenValue);\n      return;\n    }\n\n    if (!('keepOpenOnSelect' in option)) {\n      createToken(value);\n      return;\n    }\n\n    event.preventDefault();\n    var loadMoreDetail = getLoadMoreDetail(parseText(value, filteringProperties, disableFreeTextFiltering), value);\n    fireNonCancelableEvent(onLoadItems, __assign(__assign({}, loadMoreDetail), {\n      firstPage: true,\n      samePage: false\n    }));\n  };\n\n  var _e = useState(false),\n      tokensExpanded = _e[0],\n      setTokensExpanded = _e[1];\n\n  var toggleExpandedTokens = function () {\n    return setTokensExpanded(!tokensExpanded);\n  };\n\n  var hasHiddenOptions = tokenLimit !== undefined && tokens.length > tokenLimit;\n  var slicedTokens = hasHiddenOptions && !tokensExpanded ? tokens.slice(0, tokenLimit) : tokens;\n  var controlId = useMemo(function () {\n    return generateUniqueId();\n  }, []);\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(\"div\", {\n    className: styles['search-field']\n  }, customControl && React.createElement(\"div\", {\n    className: styles['custom-control']\n  }, customControl), React.createElement(InternalAutosuggest, __assign({\n    virtualScroll: virtualScroll,\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    ref: inputRef,\n    className: styles.input,\n    ariaLabel: i18nStrings.filteringAriaLabel,\n    placeholder: i18nStrings.filteringPlaceholder,\n    value: filteringText,\n    disabled: disabled,\n    onKeyDown: handleKeyDown\n  }, autosuggestOptions, {\n    onChange: function (event) {\n      return setFilteringText(event.detail.value);\n    },\n    empty: filteringEmpty\n  }, asyncAutosuggestProps, {\n    expandToViewport: expandToViewport,\n    __disableShowAll: true,\n    __dropdownWidth: 300,\n    __onOptionClick: handleSelected,\n    __onOpen: function (e) {\n      if (preventFocus.current) {\n        e.preventDefault();\n        preventFocus.current = false;\n      }\n    },\n    __hideEnteredTextOption: disableFreeTextFiltering && parsedText.step !== 'property'\n  })), React.createElement(\"span\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    className: clsx(styles.results, showResults && styles['results-visible'])\n  }, showResults ? countText : '')), tokens && tokens.length > 0 && React.createElement(\"div\", {\n    className: styles.tokens\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\",\n    id: controlId\n  }, slicedTokens.map(function (token, index) {\n    return React.createElement(Token, {\n      token: token,\n      first: index === 0,\n      operation: operation,\n      key: index,\n      removeToken: function () {\n        return removeToken(index);\n      },\n      setToken: function (newToken) {\n        return setToken(index, newToken);\n      },\n      setOperation: setOperation,\n      filteringOptions: filteringOptions,\n      filteringProperties: filteringProperties,\n      asyncProps: asyncProps,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings,\n      asyncProperties: asyncProperties,\n      hideOperations: hideOperations,\n      customGroupsText: customGroupsText,\n      disableFreeTextFiltering: disableFreeTextFiltering,\n      disabled: disabled,\n      expandToViewport: expandToViewport\n    });\n  }), hasHiddenOptions && React.createElement(\"div\", {\n    className: styles['toggle-collapsed']\n  }, React.createElement(SelectToggle, {\n    controlId: controlId,\n    allHidden: tokenLimit === 0,\n    expanded: tokensExpanded,\n    numberOfHiddenOptions: tokens.length - slicedTokens.length,\n    i18nStrings: {\n      limitShowFewer: i18nStrings.tokenLimitShowFewer,\n      limitShowMore: i18nStrings.tokenLimitShowMore\n    },\n    onClick: toggleExpandedTokens\n  })), React.createElement(\"div\", {\n    className: styles.separator\n  }), React.createElement(InternalButton, {\n    onClick: removeAllTokens,\n    className: styles['remove-all'],\n    disabled: disabled\n  }, i18nStrings.clearFiltersText))));\n});\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/property-filter/index.js"],"names":["__assign","__rest","clsx","React","useRef","useState","useMemo","InternalSpaceBetween","InternalAutosuggest","InternalButton","getBaseProps","useForwardFocus","applyDisplayName","KeyCode","SelectToggle","generateUniqueId","fireNonCancelableEvent","Token","getQueryActions","parseText","getAutosuggestOptions","useLoadItems","styles","useBaseComponent","PropertyFilter","forwardRef","_a","ref","disabled","i18nStrings","countText","query","hideOperations","onChange","filteringProperties","filteringOptions","customGroupsText","_b","disableFreeTextFiltering","onLoadItems","virtualScroll","customControl","filteringEmpty","filteringLoadingText","filteringFinishedText","filteringErrorText","filteringRecoveryText","filteringStatusType","asyncProperties","tokenLimit","expandToViewport","rest","__internalRootRef","inputRef","preventFocus","baseProps","tokens","operation","showResults","length","_c","addToken","removeToken","setToken","setOperation","removeAllTokens","_d","filteringText","setFilteringText","parsedText","autosuggestOptions","createToken","currentText","newToken","step","propertyKey","property","key","operator","value","trim","ignoreKeyDown","handleKeyDown","event","current","detail","keyCode","enter","getLoadMoreDetail","loadMoreDetail","filteringProperty","undefined","filteringOperator","inputLoadItemsHandlers","asyncProps","empty","loadingText","finishedText","errorText","recoveryText","statusType","asyncAutosuggestProps","handleSelected","setTimeout","option","tokenValue","preventDefault","firstPage","samePage","_e","tokensExpanded","setTokensExpanded","toggleExpandedTokens","hasHiddenOptions","slicedTokens","slice","controlId","createElement","className","root","enteredTextLabel","input","ariaLabel","filteringAriaLabel","placeholder","filteringPlaceholder","onKeyDown","__disableShowAll","__dropdownWidth","__onOptionClick","__onOpen","e","__hideEnteredTextOption","results","size","direction","id","map","token","index","first","allHidden","expanded","numberOfHiddenOptions","limitShowFewer","tokenLimitShowFewer","limitShowMore","tokenLimitShowMore","onClick","separator","clearFiltersText"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef, useState, useMemo } from 'react';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { KeyCode } from '../internal/keycode';\nimport SelectToggle from '../token-group/toggle';\nimport { generateUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { Token } from './token';\nimport { getQueryActions, parseText, getAutosuggestOptions } from './controller';\nimport { useLoadItems } from './use-load-items';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar PropertyFilter = React.forwardRef(function (_a, ref) {\n    var disabled = _a.disabled, i18nStrings = _a.i18nStrings, countText = _a.countText, query = _a.query, hideOperations = _a.hideOperations, onChange = _a.onChange, filteringProperties = _a.filteringProperties, filteringOptions = _a.filteringOptions, customGroupsText = _a.customGroupsText, _b = _a.disableFreeTextFiltering, disableFreeTextFiltering = _b === void 0 ? false : _b, onLoadItems = _a.onLoadItems, virtualScroll = _a.virtualScroll, customControl = _a.customControl, filteringEmpty = _a.filteringEmpty, filteringLoadingText = _a.filteringLoadingText, filteringFinishedText = _a.filteringFinishedText, filteringErrorText = _a.filteringErrorText, filteringRecoveryText = _a.filteringRecoveryText, filteringStatusType = _a.filteringStatusType, asyncProperties = _a.asyncProperties, tokenLimit = _a.tokenLimit, expandToViewport = _a.expandToViewport, rest = __rest(_a, [\"disabled\", \"i18nStrings\", \"countText\", \"query\", \"hideOperations\", \"onChange\", \"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"disableFreeTextFiltering\", \"onLoadItems\", \"virtualScroll\", \"customControl\", \"filteringEmpty\", \"filteringLoadingText\", \"filteringFinishedText\", \"filteringErrorText\", \"filteringRecoveryText\", \"filteringStatusType\", \"asyncProperties\", \"tokenLimit\", \"expandToViewport\"]);\n    var __internalRootRef = useBaseComponent('PropertyFilter').__internalRootRef;\n    var inputRef = useRef(null);\n    var preventFocus = useRef(false);\n    var baseProps = getBaseProps(rest);\n    useForwardFocus(ref, inputRef);\n    var tokens = query.tokens, operation = query.operation;\n    var showResults = (tokens === null || tokens === void 0 ? void 0 : tokens.length) && !disabled;\n    var _c = getQueryActions(query, onChange, inputRef, preventFocus), addToken = _c.addToken, removeToken = _c.removeToken, setToken = _c.setToken, setOperation = _c.setOperation, removeAllTokens = _c.removeAllTokens;\n    var _d = useState(''), filteringText = _d[0], setFilteringText = _d[1];\n    var parsedText = parseText(filteringText, filteringProperties, disableFreeTextFiltering);\n    var autosuggestOptions = getAutosuggestOptions(parsedText, filteringOptions, filteringProperties, customGroupsText, i18nStrings);\n    var createToken = function (currentText) {\n        var parsedText = parseText(currentText, filteringProperties, disableFreeTextFiltering);\n        var newToken;\n        switch (parsedText.step) {\n            case 'property': {\n                newToken = {\n                    propertyKey: parsedText.property.key,\n                    operator: parsedText.operator,\n                    value: parsedText.value.trim()\n                };\n                break;\n            }\n            case 'free-text': {\n                newToken = {\n                    operator: parsedText.operator || ':',\n                    value: parsedText.value\n                };\n                break;\n            }\n            case 'operator': {\n                newToken = {\n                    operator: ':',\n                    value: currentText\n                };\n                break;\n            }\n        }\n        if (disableFreeTextFiltering && !('propertyKey' in newToken)) {\n            return;\n        }\n        addToken(newToken);\n        setFilteringText('');\n    };\n    var ignoreKeyDown = useRef(false);\n    var handleKeyDown = function (event) {\n        if (filteringText && !ignoreKeyDown.current && event.detail.keyCode === KeyCode.enter) {\n            createToken(filteringText);\n        }\n    };\n    var getLoadMoreDetail = function (parsedText, filteringText) {\n        var loadMoreDetail = {\n            filteringProperty: undefined,\n            filteringText: filteringText,\n            filteringOperator: undefined\n        };\n        if (parsedText.step === 'property') {\n            loadMoreDetail.filteringProperty = parsedText.property;\n            loadMoreDetail.filteringText = parsedText.value;\n            loadMoreDetail.filteringOperator = parsedText.operator;\n        }\n        return loadMoreDetail;\n    };\n    var loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n    var inputLoadItemsHandlers = useLoadItems(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);\n    var asyncProps = {\n        empty: filteringEmpty,\n        loadingText: filteringLoadingText,\n        finishedText: filteringFinishedText,\n        errorText: filteringErrorText,\n        recoveryText: filteringRecoveryText,\n        statusType: filteringStatusType\n    };\n    var asyncAutosuggestProps = !!filteringText.length || asyncProperties\n        ? __assign(__assign({}, inputLoadItemsHandlers), asyncProps) : {};\n    var handleSelected = function (event) {\n        ignoreKeyDown.current = true;\n        setTimeout(function () {\n            ignoreKeyDown.current = false;\n        }, 0);\n        var option = event.detail;\n        var value = option.value || '';\n        if ('tokenValue' in option) {\n            createToken(option.tokenValue);\n            return;\n        }\n        if (!('keepOpenOnSelect' in option)) {\n            createToken(value);\n            return;\n        }\n        event.preventDefault();\n        var loadMoreDetail = getLoadMoreDetail(parseText(value, filteringProperties, disableFreeTextFiltering), value);\n        fireNonCancelableEvent(onLoadItems, __assign(__assign({}, loadMoreDetail), { firstPage: true, samePage: false }));\n    };\n    var _e = useState(false), tokensExpanded = _e[0], setTokensExpanded = _e[1];\n    var toggleExpandedTokens = function () { return setTokensExpanded(!tokensExpanded); };\n    var hasHiddenOptions = tokenLimit !== undefined && tokens.length > tokenLimit;\n    var slicedTokens = hasHiddenOptions && !tokensExpanded ? tokens.slice(0, tokenLimit) : tokens;\n    var controlId = useMemo(function () { return generateUniqueId(); }, []);\n    return (React.createElement(\"span\", __assign({}, baseProps, { className: clsx(baseProps.className, styles.root), ref: __internalRootRef }),\n        React.createElement(\"div\", { className: styles['search-field'] },\n            customControl && React.createElement(\"div\", { className: styles['custom-control'] }, customControl),\n            React.createElement(InternalAutosuggest, __assign({ virtualScroll: virtualScroll, enteredTextLabel: i18nStrings.enteredTextLabel, ref: inputRef, className: styles.input, ariaLabel: i18nStrings.filteringAriaLabel, placeholder: i18nStrings.filteringPlaceholder, value: filteringText, disabled: disabled, onKeyDown: handleKeyDown }, autosuggestOptions, { onChange: function (event) { return setFilteringText(event.detail.value); }, empty: filteringEmpty }, asyncAutosuggestProps, { expandToViewport: expandToViewport, __disableShowAll: true, __dropdownWidth: 300, __onOptionClick: handleSelected, __onOpen: function (e) {\n                    if (preventFocus.current) {\n                        e.preventDefault();\n                        preventFocus.current = false;\n                    }\n                }, __hideEnteredTextOption: disableFreeTextFiltering && parsedText.step !== 'property' })),\n            React.createElement(\"span\", { \"aria-live\": \"polite\", \"aria-atomic\": \"true\", className: clsx(styles.results, showResults && styles['results-visible']) }, showResults ? countText : '')),\n        tokens && tokens.length > 0 && (React.createElement(\"div\", { className: styles.tokens },\n            React.createElement(InternalSpaceBetween, { size: \"xs\", direction: \"horizontal\", id: controlId },\n                slicedTokens.map(function (token, index) { return (React.createElement(Token, { token: token, first: index === 0, operation: operation, key: index, removeToken: function () { return removeToken(index); }, setToken: function (newToken) { return setToken(index, newToken); }, setOperation: setOperation, filteringOptions: filteringOptions, filteringProperties: filteringProperties, asyncProps: asyncProps, onLoadItems: onLoadItems, i18nStrings: i18nStrings, asyncProperties: asyncProperties, hideOperations: hideOperations, customGroupsText: customGroupsText, disableFreeTextFiltering: disableFreeTextFiltering, disabled: disabled, expandToViewport: expandToViewport })); }),\n                hasHiddenOptions && (React.createElement(\"div\", { className: styles['toggle-collapsed'] },\n                    React.createElement(SelectToggle, { controlId: controlId, allHidden: tokenLimit === 0, expanded: tokensExpanded, numberOfHiddenOptions: tokens.length - slicedTokens.length, i18nStrings: {\n                            limitShowFewer: i18nStrings.tokenLimitShowFewer,\n                            limitShowMore: i18nStrings.tokenLimitShowMore\n                        }, onClick: toggleExpandedTokens }))),\n                React.createElement(\"div\", { className: styles.separator }),\n                React.createElement(InternalButton, { onClick: removeAllTokens, className: styles['remove-all'], disabled: disabled }, i18nStrings.clearFiltersText))))));\n});\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;\n"]},"metadata":{},"sourceType":"module"}