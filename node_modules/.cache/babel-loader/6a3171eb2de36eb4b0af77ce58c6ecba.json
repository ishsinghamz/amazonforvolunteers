{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { useUniqueId } from '../../hooks/use-unique-id';\nimport { KeyCode } from '../../keycode';\nimport LiveRegion from '../live-region/index';\nimport ApplicationController from './application-controller';\nimport FocusOutline from './focus-outline';\nimport focusSvgElement from '../../utils/focus-svg-element';\nvar DEFAULT_PLOT_FOCUS_OFFSET = 3;\nvar DEFAULT_ELEMENT_FOCUS_OFFSET = 3;\nexport default forwardRef(ChartPlot);\n\nfunction ChartPlot(_a, ref) {\n  var _b;\n\n  var width = _a.width,\n      height = _a.height,\n      transform = _a.transform,\n      offsetTop = _a.offsetTop,\n      offsetBottom = _a.offsetBottom,\n      offsetLeft = _a.offsetLeft,\n      offsetRight = _a.offsetRight,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaRoleDescription = _a.ariaRoleDescription,\n      ariaDescription = _a.ariaDescription,\n      ariaDescribedby = _a.ariaDescribedby,\n      activeElementKey = _a.activeElementKey,\n      activeElementRef = _a.activeElementRef,\n      ariaLiveRegion = _a.ariaLiveRegion,\n      isClickable = _a.isClickable,\n      isPrecise = _a.isPrecise,\n      children = _a.children,\n      onMouseDown = _a.onMouseDown,\n      onKeyDown = _a.onKeyDown,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      _c = _a.focusOffset,\n      focusOffset = _c === void 0 ? DEFAULT_PLOT_FOCUS_OFFSET : _c,\n      _d = _a.activeElementFocusOffset,\n      activeElementFocusOffset = _d === void 0 ? DEFAULT_ELEMENT_FOCUS_OFFSET : _d,\n      restProps = __rest(_a, [\"width\", \"height\", \"transform\", \"offsetTop\", \"offsetBottom\", \"offsetLeft\", \"offsetRight\", \"ariaLabel\", \"ariaLabelledby\", \"ariaRoleDescription\", \"ariaDescription\", \"ariaDescribedby\", \"activeElementKey\", \"activeElementRef\", \"ariaLiveRegion\", \"isClickable\", \"isPrecise\", \"children\", \"onMouseDown\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"focusOffset\", \"activeElementFocusOffset\"]);\n\n  var svgRef = useRef(null);\n  var applicationRef = useRef(null);\n  var plotClickedRef = useRef(false);\n\n  var _e = useState(false),\n      isPlotFocused = _e[0],\n      setPlotFocused = _e[1];\n\n  var _f = useState(false),\n      isApplicationFocused = _f[0],\n      setApplicationFocused = _f[1];\n\n  var internalDescriptionId = useUniqueId('awsui-chart-plot__description');\n  var ariaDescriptionId = [ariaDescription && internalDescriptionId, ariaDescribedby].filter(Boolean).join(' ');\n  useImperativeHandle(ref, function () {\n    return {\n      svg: svgRef.current,\n      focusPlot: function () {\n        return focusSvgElement(svgRef.current);\n      },\n      focusApplication: function () {\n        return applicationRef.current.focus();\n      }\n    };\n  });\n\n  var onPlotMouseDown = function (event) {\n    onMouseDown && onMouseDown(event);\n    plotClickedRef.current = true;\n  };\n\n  var onPlotFocus = function (event) {\n    if (event.target === svgRef.current && !plotClickedRef.current) {\n      setPlotFocused(true);\n    } else if (plotClickedRef.current) {\n      applicationRef.current.focus();\n    }\n  };\n\n  var onPlotBlur = function (event) {\n    if (event.target === svgRef.current) {\n      setPlotFocused(false);\n    }\n  };\n\n  var onPlotKeyDown = function (event) {\n    if (isPlotFocused) {\n      var codes = [KeyCode.space, KeyCode.enter, KeyCode.up, KeyCode.left, KeyCode.right, KeyCode.down];\n\n      if (codes.indexOf(event.keyCode) !== -1) {\n        applicationRef.current.focus();\n      }\n    }\n  };\n\n  var onApplicationFocus = function (event) {\n    onFocus && onFocus(event, plotClickedRef.current ? 'mouse' : 'keyboard');\n    plotClickedRef.current = false;\n    setApplicationFocused(true);\n  };\n\n  var onApplicationBlur = function (event) {\n    onBlur && onBlur(event);\n    setApplicationFocused(false);\n  };\n\n  var onApplicationKeyDown = onKeyDown;\n  var plotFocusable = !isApplicationFocused;\n  var plotTabIndex = plotFocusable ? 0 : -1;\n  var plotAria = !isApplicationFocused ? {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescriptionId,\n    'aria-roledescription': ariaRoleDescription\n  } : {};\n  return React.createElement(React.Fragment, null, React.createElement(\"svg\", __assign({}, restProps, {\n    focusable: plotFocusable,\n    tabIndex: plotTabIndex,\n    role: \"application\",\n    \"aria-hidden\": \"false\"\n  }, plotAria, {\n    ref: svgRef,\n    width: width,\n    height: height,\n    style: {\n      marginTop: offsetTop,\n      marginBottom: offsetBottom,\n      marginLeft: offsetLeft,\n      marginRight: offsetRight\n    },\n    className: clsx(styles.root, (_b = {}, _b[styles.clickable] = isClickable, _b[styles.precise] = isPrecise, _b)),\n    onMouseDown: onPlotMouseDown,\n    onFocus: onPlotFocus,\n    onBlur: onPlotBlur,\n    onKeyDown: onPlotKeyDown\n  }), React.createElement(FocusOutline, {\n    elementRef: svgRef,\n    elementKey: isPlotFocused,\n    offset: focusOffset\n  }), React.createElement(\"g\", {\n    transform: transform,\n    role: \"group\"\n  }, React.createElement(ApplicationController, {\n    activeElementKey: activeElementKey || null,\n    activeElementRef: activeElementRef,\n    ref: applicationRef,\n    onFocus: onApplicationFocus,\n    onBlur: onApplicationBlur,\n    onKeyDown: onApplicationKeyDown\n  }), ariaDescription && plotFocusable && React.createElement(\"desc\", {\n    \"aria-hidden\": \"true\",\n    id: internalDescriptionId\n  }, ariaDescription), children, React.createElement(FocusOutline, {\n    elementRef: activeElementRef,\n    elementKey: isApplicationFocused && activeElementKey,\n    offset: activeElementFocusOffset\n  }))), React.createElement(LiveRegion, null, ariaLiveRegion));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/chart-plot/index.js"],"names":["__assign","__rest","React","forwardRef","useImperativeHandle","useRef","useState","clsx","styles","useUniqueId","KeyCode","LiveRegion","ApplicationController","FocusOutline","focusSvgElement","DEFAULT_PLOT_FOCUS_OFFSET","DEFAULT_ELEMENT_FOCUS_OFFSET","ChartPlot","_a","ref","_b","width","height","transform","offsetTop","offsetBottom","offsetLeft","offsetRight","ariaLabel","ariaLabelledby","ariaRoleDescription","ariaDescription","ariaDescribedby","activeElementKey","activeElementRef","ariaLiveRegion","isClickable","isPrecise","children","onMouseDown","onKeyDown","onFocus","onBlur","_c","focusOffset","_d","activeElementFocusOffset","restProps","svgRef","applicationRef","plotClickedRef","_e","isPlotFocused","setPlotFocused","_f","isApplicationFocused","setApplicationFocused","internalDescriptionId","ariaDescriptionId","filter","Boolean","join","svg","current","focusPlot","focusApplication","focus","onPlotMouseDown","event","onPlotFocus","target","onPlotBlur","onPlotKeyDown","codes","space","enter","up","left","right","down","indexOf","keyCode","onApplicationFocus","onApplicationBlur","onApplicationKeyDown","plotFocusable","plotTabIndex","plotAria","createElement","Fragment","focusable","tabIndex","role","style","marginTop","marginBottom","marginLeft","marginRight","className","root","clickable","precise","elementRef","elementKey","offset","id"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { useUniqueId } from '../../hooks/use-unique-id';\nimport { KeyCode } from '../../keycode';\nimport LiveRegion from '../live-region/index';\nimport ApplicationController from './application-controller';\nimport FocusOutline from './focus-outline';\nimport focusSvgElement from '../../utils/focus-svg-element';\nvar DEFAULT_PLOT_FOCUS_OFFSET = 3;\nvar DEFAULT_ELEMENT_FOCUS_OFFSET = 3;\nexport default forwardRef(ChartPlot);\nfunction ChartPlot(_a, ref) {\n    var _b;\n    var width = _a.width, height = _a.height, transform = _a.transform, offsetTop = _a.offsetTop, offsetBottom = _a.offsetBottom, offsetLeft = _a.offsetLeft, offsetRight = _a.offsetRight, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, ariaRoleDescription = _a.ariaRoleDescription, ariaDescription = _a.ariaDescription, ariaDescribedby = _a.ariaDescribedby, activeElementKey = _a.activeElementKey, activeElementRef = _a.activeElementRef, ariaLiveRegion = _a.ariaLiveRegion, isClickable = _a.isClickable, isPrecise = _a.isPrecise, children = _a.children, onMouseDown = _a.onMouseDown, onKeyDown = _a.onKeyDown, onFocus = _a.onFocus, onBlur = _a.onBlur, _c = _a.focusOffset, focusOffset = _c === void 0 ? DEFAULT_PLOT_FOCUS_OFFSET : _c, _d = _a.activeElementFocusOffset, activeElementFocusOffset = _d === void 0 ? DEFAULT_ELEMENT_FOCUS_OFFSET : _d, restProps = __rest(_a, [\"width\", \"height\", \"transform\", \"offsetTop\", \"offsetBottom\", \"offsetLeft\", \"offsetRight\", \"ariaLabel\", \"ariaLabelledby\", \"ariaRoleDescription\", \"ariaDescription\", \"ariaDescribedby\", \"activeElementKey\", \"activeElementRef\", \"ariaLiveRegion\", \"isClickable\", \"isPrecise\", \"children\", \"onMouseDown\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"focusOffset\", \"activeElementFocusOffset\"]);\n    var svgRef = useRef(null);\n    var applicationRef = useRef(null);\n    var plotClickedRef = useRef(false);\n    var _e = useState(false), isPlotFocused = _e[0], setPlotFocused = _e[1];\n    var _f = useState(false), isApplicationFocused = _f[0], setApplicationFocused = _f[1];\n    var internalDescriptionId = useUniqueId('awsui-chart-plot__description');\n    var ariaDescriptionId = [ariaDescription && internalDescriptionId, ariaDescribedby].filter(Boolean).join(' ');\n    useImperativeHandle(ref, function () { return ({\n        svg: svgRef.current,\n        focusPlot: function () { return focusSvgElement(svgRef.current); },\n        focusApplication: function () { return applicationRef.current.focus(); }\n    }); });\n    var onPlotMouseDown = function (event) {\n        onMouseDown && onMouseDown(event);\n        plotClickedRef.current = true;\n    };\n    var onPlotFocus = function (event) {\n        if (event.target === svgRef.current && !plotClickedRef.current) {\n            setPlotFocused(true);\n        }\n        else if (plotClickedRef.current) {\n            applicationRef.current.focus();\n        }\n    };\n    var onPlotBlur = function (event) {\n        if (event.target === svgRef.current) {\n            setPlotFocused(false);\n        }\n    };\n    var onPlotKeyDown = function (event) {\n        if (isPlotFocused) {\n            var codes = [KeyCode.space, KeyCode.enter, KeyCode.up, KeyCode.left, KeyCode.right, KeyCode.down];\n            if (codes.indexOf(event.keyCode) !== -1) {\n                applicationRef.current.focus();\n            }\n        }\n    };\n    var onApplicationFocus = function (event) {\n        onFocus && onFocus(event, plotClickedRef.current ? 'mouse' : 'keyboard');\n        plotClickedRef.current = false;\n        setApplicationFocused(true);\n    };\n    var onApplicationBlur = function (event) {\n        onBlur && onBlur(event);\n        setApplicationFocused(false);\n    };\n    var onApplicationKeyDown = onKeyDown;\n    var plotFocusable = !isApplicationFocused;\n    var plotTabIndex = plotFocusable ? 0 : -1;\n    var plotAria = !isApplicationFocused\n        ? {\n            'aria-label': ariaLabel,\n            'aria-labelledby': ariaLabelledby,\n            'aria-describedby': ariaDescriptionId,\n            'aria-roledescription': ariaRoleDescription\n        }\n        : {};\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"svg\", __assign({}, restProps, { focusable: plotFocusable, tabIndex: plotTabIndex, role: \"application\", \"aria-hidden\": \"false\" }, plotAria, { ref: svgRef, width: width, height: height, style: {\n                marginTop: offsetTop,\n                marginBottom: offsetBottom,\n                marginLeft: offsetLeft,\n                marginRight: offsetRight\n            }, className: clsx(styles.root, (_b = {},\n                _b[styles.clickable] = isClickable,\n                _b[styles.precise] = isPrecise,\n                _b)), onMouseDown: onPlotMouseDown, onFocus: onPlotFocus, onBlur: onPlotBlur, onKeyDown: onPlotKeyDown }),\n            React.createElement(FocusOutline, { elementRef: svgRef, elementKey: isPlotFocused, offset: focusOffset }),\n            React.createElement(\"g\", { transform: transform, role: \"group\" },\n                React.createElement(ApplicationController, { activeElementKey: activeElementKey || null, activeElementRef: activeElementRef, ref: applicationRef, onFocus: onApplicationFocus, onBlur: onApplicationBlur, onKeyDown: onApplicationKeyDown }),\n                ariaDescription && plotFocusable && (React.createElement(\"desc\", { \"aria-hidden\": \"true\", id: internalDescriptionId }, ariaDescription)),\n                children,\n                React.createElement(FocusOutline, { elementRef: activeElementRef, elementKey: isApplicationFocused && activeElementKey, offset: activeElementFocusOffset }))),\n        React.createElement(LiveRegion, null, ariaLiveRegion)));\n}\n"]},"metadata":{},"sourceType":"module"}