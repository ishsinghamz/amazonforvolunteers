{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport { getBaseProps } from '../../base-component';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport var dimensionsByTheme = {\n  \"default\": {\n    viewBox: '0 0 14 14',\n    indeterminate: '2.5,7 11.5,7',\n    checked: '2.5,7 6,10 11,3',\n    xy: 0.5,\n    r: 1.5,\n    size: 13\n  },\n  refresh: {\n    viewBox: '0 0 16 16',\n    indeterminate: '3.5,8 12.5,8',\n    checked: '3.5,8 7,11 12,4',\n    xy: 1,\n    r: 2,\n    size: 14\n  }\n};\n\nvar CheckboxIcon = function (_a) {\n  var _b, _c;\n\n  var checked = _a.checked,\n      indeterminate = _a.indeterminate,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      restProps = __rest(_a, [\"checked\", \"indeterminate\", \"disabled\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var checkboxRef = useRef(null);\n  var theme = useVisualRefresh(checkboxRef) ? 'refresh' : 'default';\n  var dimensions = dimensionsByTheme[theme];\n  return React.createElement(\"svg\", __assign({\n    className: styles.root,\n    viewBox: dimensions.viewBox,\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    ref: checkboxRef\n  }, baseProps), React.createElement(\"rect\", {\n    className: clsx(styles['styled-box'], (_b = {}, _b[styles['styled-box-checked']] = checked, _b[styles['styled-box-indeterminate']] = indeterminate, _b[styles['styled-box-disabled']] = disabled, _b)),\n    x: dimensions.xy,\n    y: dimensions.xy,\n    rx: dimensions.r,\n    ry: dimensions.r,\n    width: dimensions.size,\n    height: dimensions.size\n  }), checked || indeterminate ? React.createElement(\"polyline\", {\n    className: clsx(styles['styled-line'], (_c = {}, _c[styles['styled-line-disabled']] = disabled, _c)),\n    points: indeterminate ? dimensions.indeterminate : dimensions.checked\n  }) : null);\n};\n\nexport default CheckboxIcon;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/internal/components/checkbox-icon/index.js"],"names":["__assign","__rest","clsx","React","useRef","getBaseProps","useVisualRefresh","styles","dimensionsByTheme","viewBox","indeterminate","checked","xy","r","size","refresh","CheckboxIcon","_a","_b","_c","_d","disabled","restProps","baseProps","checkboxRef","theme","dimensions","createElement","className","root","focusable","ref","x","y","rx","ry","width","height","points"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport { getBaseProps } from '../../base-component';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport var dimensionsByTheme = {\n    \"default\": {\n        viewBox: '0 0 14 14',\n        indeterminate: '2.5,7 11.5,7',\n        checked: '2.5,7 6,10 11,3',\n        xy: 0.5,\n        r: 1.5,\n        size: 13\n    },\n    refresh: {\n        viewBox: '0 0 16 16',\n        indeterminate: '3.5,8 12.5,8',\n        checked: '3.5,8 7,11 12,4',\n        xy: 1,\n        r: 2,\n        size: 14\n    }\n};\nvar CheckboxIcon = function (_a) {\n    var _b, _c;\n    var checked = _a.checked, indeterminate = _a.indeterminate, _d = _a.disabled, disabled = _d === void 0 ? false : _d, restProps = __rest(_a, [\"checked\", \"indeterminate\", \"disabled\"]);\n    var baseProps = getBaseProps(restProps);\n    var checkboxRef = useRef(null);\n    var theme = useVisualRefresh(checkboxRef) ? 'refresh' : 'default';\n    var dimensions = dimensionsByTheme[theme];\n    return (React.createElement(\"svg\", __assign({ className: styles.root, viewBox: dimensions.viewBox, \"aria-hidden\": \"true\", focusable: \"false\", ref: checkboxRef }, baseProps),\n        React.createElement(\"rect\", { className: clsx(styles['styled-box'], (_b = {},\n                _b[styles['styled-box-checked']] = checked,\n                _b[styles['styled-box-indeterminate']] = indeterminate,\n                _b[styles['styled-box-disabled']] = disabled,\n                _b)), x: dimensions.xy, y: dimensions.xy, rx: dimensions.r, ry: dimensions.r, width: dimensions.size, height: dimensions.size }),\n        checked || indeterminate ? (React.createElement(\"polyline\", { className: clsx(styles['styled-line'], (_c = {}, _c[styles['styled-line-disabled']] = disabled, _c)), points: indeterminate ? dimensions.indeterminate : dimensions.checked })) : null));\n};\nexport default CheckboxIcon;\n"]},"metadata":{},"sourceType":"module"}