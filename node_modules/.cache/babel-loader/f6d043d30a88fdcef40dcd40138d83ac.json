{"ast":null,"code":"import React, { useCallback, useMemo } from 'react';\nimport { fireNonCancelableEvent } from '../../events';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalLink from '../../../link/internal';\nimport styles from './styles.css.js';\nexport function getChartStatus(_a) {\n  var externalData = _a.externalData,\n      visibleData = _a.visibleData,\n      statusType = _a.statusType;\n  var isEmpty = !visibleData || visibleData.length === 0;\n  var isNoMatch = isEmpty && visibleData.length !== externalData.length;\n  var showChart = statusType === 'finished' && !isEmpty;\n  return {\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    showChart: showChart\n  };\n}\n\nvar ChartStatusContainer = function (_a) {\n  var statusType = _a.statusType,\n      errorText = _a.errorText,\n      loadingText = _a.loadingText,\n      recoveryText = _a.recoveryText,\n      noMatch = _a.noMatch,\n      empty = _a.empty,\n      onRecoveryClick = _a.onRecoveryClick,\n      isNoMatch = _a.isNoMatch,\n      isEmpty = _a.isEmpty,\n      showChart = _a.showChart;\n  var handleRecoveryClick = useCallback(function (e) {\n    e.preventDefault();\n    fireNonCancelableEvent(onRecoveryClick);\n  }, [onRecoveryClick]);\n  var statusContainer = useMemo(function () {\n    if (statusType === 'error') {\n      return React.createElement(\"span\", null, React.createElement(InternalStatusIndicator, {\n        type: \"error\"\n      }, errorText), ' ', recoveryText && React.createElement(InternalLink, {\n        onFollow: handleRecoveryClick,\n        variant: \"recovery\"\n      }, recoveryText));\n    }\n\n    if (statusType === 'loading') {\n      return React.createElement(InternalStatusIndicator, {\n        type: \"loading\"\n      }, loadingText);\n    }\n\n    if (isNoMatch) {\n      return React.createElement(\"div\", {\n        className: styles.empty\n      }, noMatch);\n    }\n\n    if (isEmpty) {\n      return React.createElement(\"div\", {\n        className: styles.empty\n      }, empty);\n    }\n  }, [statusType, handleRecoveryClick, isEmpty, isNoMatch, recoveryText, loadingText, errorText, empty, noMatch]);\n  return React.createElement(\"div\", {\n    className: styles.root,\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, !showChart && statusContainer);\n};\n\nexport default ChartStatusContainer;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/chart-status-container/index.js"],"names":["React","useCallback","useMemo","fireNonCancelableEvent","InternalStatusIndicator","InternalLink","styles","getChartStatus","_a","externalData","visibleData","statusType","isEmpty","length","isNoMatch","showChart","ChartStatusContainer","errorText","loadingText","recoveryText","noMatch","empty","onRecoveryClick","handleRecoveryClick","e","preventDefault","statusContainer","createElement","type","onFollow","variant","className","root"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { fireNonCancelableEvent } from '../../events';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalLink from '../../../link/internal';\nimport styles from './styles.css.js';\nexport function getChartStatus(_a) {\n    var externalData = _a.externalData, visibleData = _a.visibleData, statusType = _a.statusType;\n    var isEmpty = !visibleData || visibleData.length === 0;\n    var isNoMatch = isEmpty && visibleData.length !== externalData.length;\n    var showChart = statusType === 'finished' && !isEmpty;\n    return { isEmpty: isEmpty, isNoMatch: isNoMatch, showChart: showChart };\n}\nvar ChartStatusContainer = function (_a) {\n    var statusType = _a.statusType, errorText = _a.errorText, loadingText = _a.loadingText, recoveryText = _a.recoveryText, noMatch = _a.noMatch, empty = _a.empty, onRecoveryClick = _a.onRecoveryClick, isNoMatch = _a.isNoMatch, isEmpty = _a.isEmpty, showChart = _a.showChart;\n    var handleRecoveryClick = useCallback(function (e) {\n        e.preventDefault();\n        fireNonCancelableEvent(onRecoveryClick);\n    }, [onRecoveryClick]);\n    var statusContainer = useMemo(function () {\n        if (statusType === 'error') {\n            return (React.createElement(\"span\", null,\n                React.createElement(InternalStatusIndicator, { type: \"error\" }, errorText),\n                ' ',\n                recoveryText && (React.createElement(InternalLink, { onFollow: handleRecoveryClick, variant: \"recovery\" }, recoveryText))));\n        }\n        if (statusType === 'loading') {\n            return React.createElement(InternalStatusIndicator, { type: \"loading\" }, loadingText);\n        }\n        if (isNoMatch) {\n            return React.createElement(\"div\", { className: styles.empty }, noMatch);\n        }\n        if (isEmpty) {\n            return React.createElement(\"div\", { className: styles.empty }, empty);\n        }\n    }, [statusType, handleRecoveryClick, isEmpty, isNoMatch, recoveryText, loadingText, errorText, empty, noMatch]);\n    return (React.createElement(\"div\", { className: styles.root, \"aria-live\": \"polite\", \"aria-atomic\": \"true\" }, !showChart && statusContainer));\n};\nexport default ChartStatusContainer;\n"]},"metadata":{},"sourceType":"module"}