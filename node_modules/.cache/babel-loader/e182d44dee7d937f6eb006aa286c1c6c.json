{"ast":null,"code":"import React from 'react';\nimport clsx from 'clsx';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nexport default function MixedChartPopover(_a) {\n  var containerRef = _a.containerRef,\n      trackRef = _a.trackRef,\n      isOpen = _a.isOpen,\n      isPinned = _a.isPinned,\n      highlightDetails = _a.highlightDetails,\n      onDismiss = _a.onDismiss,\n      _b = _a.size,\n      size = _b === void 0 ? 'medium' : _b,\n      dismissAriaLabel = _a.dismissAriaLabel;\n  return React.createElement(Transition, {\n    \"in\": isOpen\n  }, function (state, ref) {\n    return React.createElement(\"div\", {\n      ref: ref,\n      className: clsx(state === 'exiting' && styles.exiting)\n    }, (isOpen || state !== 'exited') && highlightDetails && React.createElement(ChartPopover, {\n      title: highlightDetails.position,\n      trackRef: trackRef,\n      trackKey: highlightDetails.position,\n      dismissButton: isPinned,\n      dismissAriaLabel: dismissAriaLabel,\n      onDismiss: onDismiss,\n      container: containerRef.current,\n      size: size\n    }, React.createElement(ChartSeriesDetails, {\n      details: highlightDetails.details\n    })));\n  });\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/mixed-line-bar-chart/chart-popover.js"],"names":["React","clsx","ChartPopover","ChartSeriesDetails","styles","Transition","MixedChartPopover","_a","containerRef","trackRef","isOpen","isPinned","highlightDetails","onDismiss","_b","size","dismissAriaLabel","createElement","state","ref","className","exiting","title","position","trackKey","dismissButton","container","current","details"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,eAAe,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC1C,MAAIC,YAAY,GAAGD,EAAE,CAACC,YAAtB;AAAA,MAAoCC,QAAQ,GAAGF,EAAE,CAACE,QAAlD;AAAA,MAA4DC,MAAM,GAAGH,EAAE,CAACG,MAAxE;AAAA,MAAgFC,QAAQ,GAAGJ,EAAE,CAACI,QAA9F;AAAA,MAAwGC,gBAAgB,GAAGL,EAAE,CAACK,gBAA9H;AAAA,MAAgJC,SAAS,GAAGN,EAAE,CAACM,SAA/J;AAAA,MAA0KC,EAAE,GAAGP,EAAE,CAACQ,IAAlL;AAAA,MAAwLA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,QAAhB,GAA2BA,EAA1N;AAAA,MAA8NE,gBAAgB,GAAGT,EAAE,CAACS,gBAApP;AACA,SAAQhB,KAAK,CAACiB,aAAN,CAAoBZ,UAApB,EAAgC;AAAE,UAAMK;AAAR,GAAhC,EAAkD,UAAUQ,KAAV,EAAiBC,GAAjB,EAAsB;AAAE,WAAQnB,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AAAEE,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,SAAS,EAAEnB,IAAI,CAACiB,KAAK,KAAK,SAAV,IAAuBd,MAAM,CAACiB,OAA/B;AAA3B,KAA3B,EAAiG,CAACX,MAAM,IAAIQ,KAAK,KAAK,QAArB,KAAkCN,gBAAlC,IAAuDZ,KAAK,CAACiB,aAAN,CAAoBf,YAApB,EAAkC;AAAEoB,MAAAA,KAAK,EAAEV,gBAAgB,CAACW,QAA1B;AAAoCd,MAAAA,QAAQ,EAAEA,QAA9C;AAAwDe,MAAAA,QAAQ,EAAEZ,gBAAgB,CAACW,QAAnF;AAA6FE,MAAAA,aAAa,EAAEd,QAA5G;AAAsHK,MAAAA,gBAAgB,EAAEA,gBAAxI;AAA0JH,MAAAA,SAAS,EAAEA,SAArK;AAAgLa,MAAAA,SAAS,EAAElB,YAAY,CAACmB,OAAxM;AAAiNZ,MAAAA,IAAI,EAAEA;AAAvN,KAAlC,EAC9Of,KAAK,CAACiB,aAAN,CAAoBd,kBAApB,EAAwC;AAAEyB,MAAAA,OAAO,EAAEhB,gBAAgB,CAACgB;AAA5B,KAAxC,CAD8O,CAAxJ,CAAR;AACO,GADjF,CAAR;AAEH","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nexport default function MixedChartPopover(_a) {\n    var containerRef = _a.containerRef, trackRef = _a.trackRef, isOpen = _a.isOpen, isPinned = _a.isPinned, highlightDetails = _a.highlightDetails, onDismiss = _a.onDismiss, _b = _a.size, size = _b === void 0 ? 'medium' : _b, dismissAriaLabel = _a.dismissAriaLabel;\n    return (React.createElement(Transition, { \"in\": isOpen }, function (state, ref) { return (React.createElement(\"div\", { ref: ref, className: clsx(state === 'exiting' && styles.exiting) }, (isOpen || state !== 'exited') && highlightDetails && (React.createElement(ChartPopover, { title: highlightDetails.position, trackRef: trackRef, trackKey: highlightDetails.position, dismissButton: isPinned, dismissAriaLabel: dismissAriaLabel, onDismiss: onDismiss, container: containerRef.current, size: size },\n        React.createElement(ChartSeriesDetails, { details: highlightDetails.details }))))); }));\n}\n"]},"metadata":{},"sourceType":"module"}