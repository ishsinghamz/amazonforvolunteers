{"ast":null,"code":"export var isoToDisplay = function (value) {\n  return value.replace(/-/g, '/');\n};\nexport var displayToIso = function (value) {\n  return value.replace(/\\//g, '-');\n};\nexport var daysInMonth = function (date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n};\n\nvar padLeftZeros = function (value, length) {\n  while (value.length < length) {\n    value = \"0\" + value;\n  }\n\n  return value;\n};\n\nexport function parseDate(value, strict) {\n  if (strict === void 0) {\n    strict = false;\n  }\n\n  var _a = value.split('-'),\n      year = _a[0],\n      month = _a[1],\n      day = _a[2];\n\n  var y = Number(year);\n  var m = Number(month);\n  var d = Number(day);\n\n  if (strict) {\n    if (isNaN(y) || isNaN(m) || isNaN(d)) {\n      return null;\n    }\n  }\n\n  return new Date(y, (m || 1) - 1, d || 1);\n}\nexport var formatDate = function (value) {\n  var year = value.getFullYear();\n  var month = padLeftZeros(\"\" + (value.getMonth() + 1), 2);\n  var date = padLeftZeros(\"\" + value.getDate(), 2);\n  return year + \"-\" + month + \"-\" + date;\n};\nexport var formatTime = function (value) {\n  var hours = padLeftZeros(\"\" + value.getHours(), 2);\n  var minutes = padLeftZeros(\"\" + value.getMinutes(), 2);\n  var seconds = padLeftZeros(\"\" + value.getSeconds(), 2);\n  return hours + \":\" + minutes + \":\" + seconds;\n};\nexport function formatISOStringWithoutTimezone(dateString, timeString) {\n  return dateString + \"T\" + timeString;\n}\nvar memoCache = {};\nexport var memoizedDate = function (key, date) {\n  var parsed = date && date.length >= 4 && parseDate(date);\n\n  if (!(memoCache[key] && parsed && memoCache[key].getTime() === parsed.getTime())) {\n    memoCache[key] = parsed;\n  }\n\n  return memoCache[key];\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/date-picker/calendar/utils/date.js"],"names":["isoToDisplay","value","replace","displayToIso","daysInMonth","date","Date","getFullYear","getMonth","getDate","padLeftZeros","length","parseDate","strict","_a","split","year","month","day","y","Number","m","d","isNaN","formatDate","formatTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatISOStringWithoutTimezone","dateString","timeString","memoCache","memoizedDate","key","parsed","getTime"],"mappings":"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","sourcesContent":["export var isoToDisplay = function (value) { return value.replace(/-/g, '/'); };\nexport var displayToIso = function (value) { return value.replace(/\\//g, '-'); };\nexport var daysInMonth = function (date) { return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(); };\nvar padLeftZeros = function (value, length) {\n    while (value.length < length) {\n        value = \"0\" + value;\n    }\n    return value;\n};\nexport function parseDate(value, strict) {\n    if (strict === void 0) { strict = false; }\n    var _a = value.split('-'), year = _a[0], month = _a[1], day = _a[2];\n    var y = Number(year);\n    var m = Number(month);\n    var d = Number(day);\n    if (strict) {\n        if (isNaN(y) || isNaN(m) || isNaN(d)) {\n            return null;\n        }\n    }\n    return new Date(y, (m || 1) - 1, d || 1);\n}\nexport var formatDate = function (value) {\n    var year = value.getFullYear();\n    var month = padLeftZeros(\"\" + (value.getMonth() + 1), 2);\n    var date = padLeftZeros(\"\" + value.getDate(), 2);\n    return year + \"-\" + month + \"-\" + date;\n};\nexport var formatTime = function (value) {\n    var hours = padLeftZeros(\"\" + value.getHours(), 2);\n    var minutes = padLeftZeros(\"\" + value.getMinutes(), 2);\n    var seconds = padLeftZeros(\"\" + value.getSeconds(), 2);\n    return hours + \":\" + minutes + \":\" + seconds;\n};\nexport function formatISOStringWithoutTimezone(dateString, timeString) {\n    return dateString + \"T\" + timeString;\n}\nvar memoCache = {};\nexport var memoizedDate = function (key, date) {\n    var parsed = date && date.length >= 4 && parseDate(date);\n    if (!(memoCache[key] && parsed && memoCache[key].getTime() === parsed.getTime())) {\n        memoCache[key] = parsed;\n    }\n    return memoCache[key];\n};\n"]},"metadata":{},"sourceType":"module"}