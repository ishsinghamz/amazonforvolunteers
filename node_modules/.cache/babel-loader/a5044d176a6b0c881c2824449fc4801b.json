{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { useSplitPanelContext } from '../internal/context/split-panel-context';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport ResizeHandler from './icons/resize-handler';\nimport PreferencesModal from './preferences-modal';\nimport { useMouseEvents } from './utils/use-mouse-events';\nimport { useKeyboardEvents } from './utils/use-keyboard-events';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport mergeRefs from 'react-merge-refs';\nimport { AppLayoutDomContext } from '../internal/context/app-layout-context';\nimport { getLimitedValue } from './utils/size-utils';\nimport { Transition } from '../internal/components/transition';\nimport { useEffectOnUpdate } from '../internal/hooks/use-effect-on-update';\nvar MIN_HEIGHT = 160;\nvar MIN_WIDTH = 280;\nexport default function SplitPanel(_a) {\n  var _b;\n\n  var header = _a.header,\n      children = _a.children,\n      _c = _a.hidePreferencesButton,\n      hidePreferencesButton = _c === void 0 ? false : _c,\n      i18nStrings = _a.i18nStrings,\n      restProps = __rest(_a, [\"header\", \"children\", \"hidePreferencesButton\", \"i18nStrings\"]);\n\n  var __internalRootRef = useBaseComponent('SplitPanel').__internalRootRef;\n\n  var _d = useSplitPanelContext(),\n      size = _d.size,\n      getMaxWidth = _d.getMaxWidth,\n      getMaxHeight = _d.getMaxHeight,\n      position = _d.position,\n      topOffset = _d.topOffset,\n      bottomOffset = _d.bottomOffset,\n      leftOffset = _d.leftOffset,\n      rightOffset = _d.rightOffset,\n      disableContentPaddings = _d.disableContentPaddings,\n      contentWidthStyles = _d.contentWidthStyles,\n      contentWrapperPaddings = _d.contentWrapperPaddings,\n      isCopy = _d.isCopy,\n      isOpen = _d.isOpen,\n      isMobile = _d.isMobile,\n      isRefresh = _d.isRefresh,\n      isForcedPosition = _d.isForcedPosition,\n      splitPanelRef = _d.splitPanelRef,\n      splitPanelHeaderRef = _d.splitPanelHeaderRef,\n      lastInteraction = _d.lastInteraction,\n      onPreferencesChange = _d.onPreferencesChange,\n      onResize = _d.onResize,\n      onToggle = _d.onToggle,\n      reportSize = _d.reportSize,\n      setOpenButtonAriaLabel = _d.setOpenButtonAriaLabel;\n\n  var baseProps = getBaseProps(restProps);\n  var focusVisible = useFocusVisible();\n\n  var _e = useState(false),\n      isPreferencesOpen = _e[0],\n      setPreferencesOpen = _e[1];\n\n  var _f = useState(0),\n      relativeSize = _f[0],\n      setRelativeSize = _f[1];\n\n  var _g = useState(size),\n      maxSize = _g[0],\n      setMaxSize = _g[1];\n\n  var minSize = position === 'bottom' ? MIN_HEIGHT : MIN_WIDTH;\n  var cappedSize = getLimitedValue(minSize, size, maxSize);\n  var appLayoutMaxWidth = isRefresh && position === 'bottom' ? contentWidthStyles : undefined;\n  useEffect(function () {\n    setOpenButtonAriaLabel === null || setOpenButtonAriaLabel === void 0 ? void 0 : setOpenButtonAriaLabel(i18nStrings.openButtonAriaLabel);\n  }, [setOpenButtonAriaLabel, i18nStrings.openButtonAriaLabel]);\n  useEffect(function () {\n    var handle = requestAnimationFrame(function () {\n      var maxSize = position === 'bottom' ? getMaxHeight() : getMaxWidth();\n      setRelativeSize(size / maxSize * 100);\n      setMaxSize(maxSize);\n    });\n    return function () {\n      return cancelAnimationFrame(handle);\n    };\n  }, [size, position, getMaxHeight, getMaxWidth]);\n  useEffect(function () {\n    reportSize(cappedSize);\n  }, [reportSize, cappedSize]);\n  useEffect(function () {\n    var handler = function () {\n      return setMaxSize(position === 'bottom' ? getMaxHeight() : getMaxWidth());\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      return window.removeEventListener('resize', handler);\n    };\n  }, [position, getMaxWidth, getMaxHeight]);\n\n  var setSidePanelWidth = function (width) {\n    var maxWidth = getMaxWidth();\n    var size = getLimitedValue(MIN_WIDTH, width, maxWidth);\n\n    if (isOpen && maxWidth >= MIN_WIDTH) {\n      onResize({\n        size: size\n      });\n    }\n  };\n\n  var setBottomPanelHeight = function (height) {\n    var maxHeight = getMaxHeight();\n    var size = getLimitedValue(MIN_HEIGHT, height, maxHeight);\n\n    if (isOpen && maxHeight >= MIN_HEIGHT) {\n      onResize({\n        size: size\n      });\n    }\n  };\n\n  var sizeControlProps = {\n    position: position,\n    splitPanelRef: splitPanelRef,\n    setSidePanelWidth: setSidePanelWidth,\n    setBottomPanelHeight: setBottomPanelHeight\n  };\n  var onSliderMouseDown = useMouseEvents(sizeControlProps);\n  var onKeyDown = useKeyboardEvents(sizeControlProps);\n  var toggleRef = useRef(null);\n  var closeRef = useRef(null);\n  var preferencesRef = useRef(null);\n  useEffectOnUpdate(function () {\n    var _a, _b, _c;\n\n    switch (lastInteraction === null || lastInteraction === void 0 ? void 0 : lastInteraction.type) {\n      case 'open':\n        return (_a = closeRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n\n      case 'close':\n        return (_b = toggleRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n\n      case 'position':\n        return (_c = preferencesRef.current) === null || _c === void 0 ? void 0 : _c.focus();\n\n      default:\n        return;\n    }\n  }, [lastInteraction]);\n  var wrappedChildren = React.createElement(AppLayoutDomContext.RootProvider, {\n    value: {\n      stickyOffsetTop: topOffset,\n      stickyOffsetBottom: bottomOffset\n    }\n  }, children);\n  var paneHeader = React.createElement(\"div\", {\n    className: styles.header,\n    style: appLayoutMaxWidth\n  }, React.createElement(\"h2\", {\n    className: styles['header-text']\n  }, header), React.createElement(\"div\", {\n    className: styles['header-actions']\n  }, !hidePreferencesButton && isOpen && React.createElement(React.Fragment, null, React.createElement(InternalButton, {\n    className: styles['preferences-button'],\n    iconName: \"settings\",\n    variant: \"icon\",\n    onClick: function () {\n      return setPreferencesOpen(true);\n    },\n    formAction: \"none\",\n    ariaLabel: i18nStrings.preferencesTitle,\n    ref: preferencesRef\n  }), React.createElement(\"span\", {\n    className: styles.divider\n  })), isOpen ? React.createElement(InternalButton, {\n    className: styles['close-button'],\n    iconName: isRefresh && position === 'side' ? 'angle-right' : isRefresh ? 'angle-down' : 'close',\n    variant: \"icon\",\n    onClick: onToggle,\n    formAction: \"none\",\n    ariaLabel: i18nStrings.closeButtonAriaLabel,\n    ref: closeRef\n  }) : position === 'side' ? null : React.createElement(InternalButton, {\n    className: styles['open-button'],\n    iconName: \"angle-up\",\n    variant: \"icon\",\n    formAction: \"none\",\n    ariaLabel: i18nStrings.openButtonAriaLabel,\n    ref: toggleRef\n  })));\n  useLayoutEffect(function () {\n    var root = __internalRootRef.current;\n\n    if (root) {\n      var property = 'transform';\n      var temporaryValue = 'translateZ(0)';\n      var valueBefore = root.style[property];\n      root.style[property] = temporaryValue;\n      void root.offsetHeight;\n      root.style[property] = valueBefore;\n    }\n  }, [rightOffset, __internalRootRef]);\n\n  if (isRefresh && (!isOpen || isCopy) && position === 'side') {\n    return React.createElement(React.Fragment, null);\n  }\n\n  var centeredMaxWidthClasses = clsx((_b = {}, _b[styles['pane-bottom-center-align']] = isRefresh, _b[styles['pane-bottom-content-nav-padding']] = contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedNav, _b[styles['pane-bottom-content-tools-padding']] = contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedTools, _b));\n  return React.createElement(Transition, {\n    \"in\": isOpen !== null && isOpen !== void 0 ? isOpen : false\n  }, function (state, transitioningElementRef) {\n    var _a, _b, _c, _d;\n\n    return React.createElement(React.Fragment, null, position === 'side' && React.createElement(\"div\", __assign({}, baseProps, {\n      className: clsx(baseProps.className, styles.drawer, styles.root, styles['position-side'], (_a = {}, _a[styles['drawer-closed']] = !isOpen, _a)),\n      ref: mergeRefs([splitPanelRef || null, __internalRootRef])\n    }), React.createElement(\"aside\", {\n      style: {\n        top: topOffset,\n        bottom: bottomOffset,\n        width: isOpen ? cappedSize : undefined,\n        maxWidth: isRefresh ? '100%' : undefined\n      },\n      className: clsx(styles['drawer-content-side'], (_b = {}, _b[styles.refresh] = isRefresh, _b)),\n      onClick: function () {\n        return !isOpen && onToggle();\n      }\n    }, isOpen ? React.createElement(\"div\", {\n      className: styles['slider-wrapper-side']\n    }, React.createElement(\"div\", __assign({\n      role: \"slider\",\n      tabIndex: 0,\n      \"aria-label\": i18nStrings.resizeHandleAriaLabel,\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": relativeSize,\n      className: clsx(styles.slider, styles['slider-side']),\n      onKeyDown: onKeyDown,\n      onMouseDown: onSliderMouseDown\n    }, focusVisible), React.createElement(ResizeHandler, {\n      className: clsx(styles['slider-icon'], styles['slider-icon-side'])\n    }))) : React.createElement(InternalButton, {\n      className: clsx(styles['open-button'], styles['open-button-side']),\n      iconName: \"angle-left\",\n      variant: \"icon\",\n      formAction: \"none\",\n      ariaLabel: i18nStrings.openButtonAriaLabel,\n      ref: isRefresh ? null : toggleRef\n    }), React.createElement(\"div\", {\n      className: styles['content-side'],\n      \"aria-hidden\": !isOpen\n    }, React.createElement(\"div\", {\n      className: clsx(styles['pane-header-wrapper-side'])\n    }, paneHeader), React.createElement(\"hr\", {\n      className: styles['header-divider']\n    }), React.createElement(\"div\", {\n      className: clsx(styles['pane-content-wrapper-side'])\n    }, wrappedChildren)))), position === 'bottom' && React.createElement(\"div\", __assign({}, baseProps, {\n      className: clsx(baseProps.className, styles.root, styles.drawer, styles['position-bottom'], (_c = {}, _c[styles['drawer-closed']] = !isOpen, _c[styles['drawer-mobile']] = isMobile, _c[styles['drawer-disable-content-paddings']] = disableContentPaddings, _c[styles.animating] = isRefresh && (state === 'entering' || state === 'exiting'), _c[styles.refresh] = isRefresh, _c)),\n      onClick: function () {\n        return !isOpen && onToggle();\n      },\n      style: {\n        bottom: bottomOffset,\n        left: leftOffset,\n        right: rightOffset,\n        height: isOpen ? cappedSize : undefined\n      },\n      ref: mergeRefs([splitPanelRef || null, __internalRootRef, transitioningElementRef])\n    }), isOpen && React.createElement(\"div\", {\n      className: styles['slider-wrapper-bottom']\n    }, React.createElement(\"div\", __assign({\n      role: \"slider\",\n      tabIndex: 0,\n      \"aria-label\": i18nStrings.resizeHandleAriaLabel,\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": relativeSize,\n      className: clsx(styles.slider, styles['slider-bottom']),\n      onKeyDown: onKeyDown,\n      onMouseDown: onSliderMouseDown\n    }, focusVisible), React.createElement(ResizeHandler, {\n      className: clsx(styles['slider-icon'], styles['slider-icon-bottom'])\n    }))), React.createElement(\"div\", {\n      className: styles['drawer-content-bottom']\n    }, React.createElement(\"div\", {\n      className: clsx(styles['pane-header-wrapper-bottom'], centeredMaxWidthClasses),\n      ref: splitPanelHeaderRef\n    }, paneHeader), React.createElement(\"div\", {\n      className: clsx(styles['content-bottom'], centeredMaxWidthClasses),\n      \"aria-hidden\": !isOpen\n    }, React.createElement(\"div\", {\n      className: clsx((_d = {}, _d[styles['content-bottom-max-width']] = isRefresh, _d)),\n      style: appLayoutMaxWidth\n    }, wrappedChildren)))), isPreferencesOpen && React.createElement(PreferencesModal, {\n      visible: true,\n      preferences: {\n        position: position\n      },\n      disabledSidePosition: position === 'bottom' && isForcedPosition,\n      i18nStrings: {\n        header: i18nStrings.preferencesTitle,\n        confirm: i18nStrings.preferencesConfirm,\n        cancel: i18nStrings.preferencesCancel,\n        positionLabel: i18nStrings.preferencesPositionLabel,\n        positionDescription: i18nStrings.preferencesPositionDescription,\n        positionBottom: i18nStrings.preferencesPositionBottom,\n        positionSide: i18nStrings.preferencesPositionSide\n      },\n      onConfirm: function (preferences) {\n        onPreferencesChange(__assign({}, preferences));\n        setPreferencesOpen(false);\n      },\n      onDismiss: function () {\n        setPreferencesOpen(false);\n      }\n    }));\n  });\n}\napplyDisplayName(SplitPanel, 'SplitPanel');","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/split-panel/index.js"],"names":["__assign","__rest","React","useState","useEffect","useLayoutEffect","useRef","clsx","InternalButton","getBaseProps","useSplitPanelContext","useFocusVisible","applyDisplayName","ResizeHandler","PreferencesModal","useMouseEvents","useKeyboardEvents","styles","useBaseComponent","mergeRefs","AppLayoutDomContext","getLimitedValue","Transition","useEffectOnUpdate","MIN_HEIGHT","MIN_WIDTH","SplitPanel","_a","_b","header","children","_c","hidePreferencesButton","i18nStrings","restProps","__internalRootRef","_d","size","getMaxWidth","getMaxHeight","position","topOffset","bottomOffset","leftOffset","rightOffset","disableContentPaddings","contentWidthStyles","contentWrapperPaddings","isCopy","isOpen","isMobile","isRefresh","isForcedPosition","splitPanelRef","splitPanelHeaderRef","lastInteraction","onPreferencesChange","onResize","onToggle","reportSize","setOpenButtonAriaLabel","baseProps","focusVisible","_e","isPreferencesOpen","setPreferencesOpen","_f","relativeSize","setRelativeSize","_g","maxSize","setMaxSize","minSize","cappedSize","appLayoutMaxWidth","undefined","openButtonAriaLabel","handle","requestAnimationFrame","cancelAnimationFrame","handler","window","addEventListener","removeEventListener","setSidePanelWidth","width","maxWidth","setBottomPanelHeight","height","maxHeight","sizeControlProps","onSliderMouseDown","onKeyDown","toggleRef","closeRef","preferencesRef","type","current","focus","wrappedChildren","createElement","RootProvider","value","stickyOffsetTop","stickyOffsetBottom","paneHeader","className","style","Fragment","iconName","variant","onClick","formAction","ariaLabel","preferencesTitle","ref","divider","closeButtonAriaLabel","root","property","temporaryValue","valueBefore","offsetHeight","centeredMaxWidthClasses","closedNav","closedTools","state","transitioningElementRef","drawer","top","bottom","refresh","role","tabIndex","resizeHandleAriaLabel","slider","onMouseDown","animating","left","right","visible","preferences","disabledSidePosition","confirm","preferencesConfirm","cancel","preferencesCancel","positionLabel","preferencesPositionLabel","positionDescription","preferencesPositionDescription","positionBottom","preferencesPositionBottom","positionSide","preferencesPositionSide","onConfirm","onDismiss"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { useSplitPanelContext } from '../internal/context/split-panel-context';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport ResizeHandler from './icons/resize-handler';\nimport PreferencesModal from './preferences-modal';\nimport { useMouseEvents } from './utils/use-mouse-events';\nimport { useKeyboardEvents } from './utils/use-keyboard-events';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport mergeRefs from 'react-merge-refs';\nimport { AppLayoutDomContext } from '../internal/context/app-layout-context';\nimport { getLimitedValue } from './utils/size-utils';\nimport { Transition } from '../internal/components/transition';\nimport { useEffectOnUpdate } from '../internal/hooks/use-effect-on-update';\nvar MIN_HEIGHT = 160;\nvar MIN_WIDTH = 280;\nexport default function SplitPanel(_a) {\n    var _b;\n    var header = _a.header, children = _a.children, _c = _a.hidePreferencesButton, hidePreferencesButton = _c === void 0 ? false : _c, i18nStrings = _a.i18nStrings, restProps = __rest(_a, [\"header\", \"children\", \"hidePreferencesButton\", \"i18nStrings\"]);\n    var __internalRootRef = useBaseComponent('SplitPanel').__internalRootRef;\n    var _d = useSplitPanelContext(), size = _d.size, getMaxWidth = _d.getMaxWidth, getMaxHeight = _d.getMaxHeight, position = _d.position, topOffset = _d.topOffset, bottomOffset = _d.bottomOffset, leftOffset = _d.leftOffset, rightOffset = _d.rightOffset, disableContentPaddings = _d.disableContentPaddings, contentWidthStyles = _d.contentWidthStyles, contentWrapperPaddings = _d.contentWrapperPaddings, isCopy = _d.isCopy, isOpen = _d.isOpen, isMobile = _d.isMobile, isRefresh = _d.isRefresh, isForcedPosition = _d.isForcedPosition, splitPanelRef = _d.splitPanelRef, splitPanelHeaderRef = _d.splitPanelHeaderRef, lastInteraction = _d.lastInteraction, onPreferencesChange = _d.onPreferencesChange, onResize = _d.onResize, onToggle = _d.onToggle, reportSize = _d.reportSize, setOpenButtonAriaLabel = _d.setOpenButtonAriaLabel;\n    var baseProps = getBaseProps(restProps);\n    var focusVisible = useFocusVisible();\n    var _e = useState(false), isPreferencesOpen = _e[0], setPreferencesOpen = _e[1];\n    var _f = useState(0), relativeSize = _f[0], setRelativeSize = _f[1];\n    var _g = useState(size), maxSize = _g[0], setMaxSize = _g[1];\n    var minSize = position === 'bottom' ? MIN_HEIGHT : MIN_WIDTH;\n    var cappedSize = getLimitedValue(minSize, size, maxSize);\n    var appLayoutMaxWidth = isRefresh && position === 'bottom' ? contentWidthStyles : undefined;\n    useEffect(function () {\n        setOpenButtonAriaLabel === null || setOpenButtonAriaLabel === void 0 ? void 0 : setOpenButtonAriaLabel(i18nStrings.openButtonAriaLabel);\n    }, [setOpenButtonAriaLabel, i18nStrings.openButtonAriaLabel]);\n    useEffect(function () {\n        var handle = requestAnimationFrame(function () {\n            var maxSize = position === 'bottom' ? getMaxHeight() : getMaxWidth();\n            setRelativeSize((size / maxSize) * 100);\n            setMaxSize(maxSize);\n        });\n        return function () { return cancelAnimationFrame(handle); };\n    }, [size, position, getMaxHeight, getMaxWidth]);\n    useEffect(function () {\n        reportSize(cappedSize);\n    }, [reportSize, cappedSize]);\n    useEffect(function () {\n        var handler = function () { return setMaxSize(position === 'bottom' ? getMaxHeight() : getMaxWidth()); };\n        window.addEventListener('resize', handler);\n        return function () { return window.removeEventListener('resize', handler); };\n    }, [position, getMaxWidth, getMaxHeight]);\n    var setSidePanelWidth = function (width) {\n        var maxWidth = getMaxWidth();\n        var size = getLimitedValue(MIN_WIDTH, width, maxWidth);\n        if (isOpen && maxWidth >= MIN_WIDTH) {\n            onResize({ size: size });\n        }\n    };\n    var setBottomPanelHeight = function (height) {\n        var maxHeight = getMaxHeight();\n        var size = getLimitedValue(MIN_HEIGHT, height, maxHeight);\n        if (isOpen && maxHeight >= MIN_HEIGHT) {\n            onResize({ size: size });\n        }\n    };\n    var sizeControlProps = {\n        position: position,\n        splitPanelRef: splitPanelRef,\n        setSidePanelWidth: setSidePanelWidth,\n        setBottomPanelHeight: setBottomPanelHeight\n    };\n    var onSliderMouseDown = useMouseEvents(sizeControlProps);\n    var onKeyDown = useKeyboardEvents(sizeControlProps);\n    var toggleRef = useRef(null);\n    var closeRef = useRef(null);\n    var preferencesRef = useRef(null);\n    useEffectOnUpdate(function () {\n        var _a, _b, _c;\n        switch (lastInteraction === null || lastInteraction === void 0 ? void 0 : lastInteraction.type) {\n            case 'open':\n                return (_a = closeRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n            case 'close':\n                return (_b = toggleRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n            case 'position':\n                return (_c = preferencesRef.current) === null || _c === void 0 ? void 0 : _c.focus();\n            default:\n                return;\n        }\n    }, [lastInteraction]);\n    var wrappedChildren = (React.createElement(AppLayoutDomContext.RootProvider, { value: {\n            stickyOffsetTop: topOffset,\n            stickyOffsetBottom: bottomOffset\n        } }, children));\n    var paneHeader = (React.createElement(\"div\", { className: styles.header, style: appLayoutMaxWidth },\n        React.createElement(\"h2\", { className: styles['header-text'] }, header),\n        React.createElement(\"div\", { className: styles['header-actions'] },\n            !hidePreferencesButton && isOpen && (React.createElement(React.Fragment, null,\n                React.createElement(InternalButton, { className: styles['preferences-button'], iconName: \"settings\", variant: \"icon\", onClick: function () { return setPreferencesOpen(true); }, formAction: \"none\", ariaLabel: i18nStrings.preferencesTitle, ref: preferencesRef }),\n                React.createElement(\"span\", { className: styles.divider }))),\n            isOpen ? (React.createElement(InternalButton, { className: styles['close-button'], iconName: isRefresh && position === 'side' ? 'angle-right' : isRefresh ? 'angle-down' : 'close', variant: \"icon\", onClick: onToggle, formAction: \"none\", ariaLabel: i18nStrings.closeButtonAriaLabel, ref: closeRef })) : position === 'side' ? null : (React.createElement(InternalButton, { className: styles['open-button'], iconName: \"angle-up\", variant: \"icon\", formAction: \"none\", ariaLabel: i18nStrings.openButtonAriaLabel, ref: toggleRef })))));\n    useLayoutEffect(function () {\n        var root = __internalRootRef.current;\n        if (root) {\n            var property = 'transform';\n            var temporaryValue = 'translateZ(0)';\n            var valueBefore = root.style[property];\n            root.style[property] = temporaryValue;\n            void root.offsetHeight;\n            root.style[property] = valueBefore;\n        }\n    }, [rightOffset, __internalRootRef]);\n    if (isRefresh && (!isOpen || isCopy) && position === 'side') {\n        return React.createElement(React.Fragment, null);\n    }\n    var centeredMaxWidthClasses = clsx((_b = {},\n        _b[styles['pane-bottom-center-align']] = isRefresh,\n        _b[styles['pane-bottom-content-nav-padding']] = contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedNav,\n        _b[styles['pane-bottom-content-tools-padding']] = contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedTools,\n        _b));\n    return (React.createElement(Transition, { \"in\": isOpen !== null && isOpen !== void 0 ? isOpen : false }, function (state, transitioningElementRef) {\n        var _a, _b, _c, _d;\n        return (React.createElement(React.Fragment, null,\n            position === 'side' && (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(baseProps.className, styles.drawer, styles.root, styles['position-side'], (_a = {},\n                    _a[styles['drawer-closed']] = !isOpen,\n                    _a)), ref: mergeRefs([splitPanelRef || null, __internalRootRef]) }),\n                React.createElement(\"aside\", { style: {\n                        top: topOffset,\n                        bottom: bottomOffset,\n                        width: isOpen ? cappedSize : undefined,\n                        maxWidth: isRefresh ? '100%' : undefined\n                    }, className: clsx(styles['drawer-content-side'], (_b = {},\n                        _b[styles.refresh] = isRefresh,\n                        _b)), onClick: function () { return !isOpen && onToggle(); } },\n                    isOpen ? (React.createElement(\"div\", { className: styles['slider-wrapper-side'] },\n                        React.createElement(\"div\", __assign({ role: \"slider\", tabIndex: 0, \"aria-label\": i18nStrings.resizeHandleAriaLabel, \"aria-valuemax\": 100, \"aria-valuemin\": 0, \"aria-valuenow\": relativeSize, className: clsx(styles.slider, styles['slider-side']), onKeyDown: onKeyDown, onMouseDown: onSliderMouseDown }, focusVisible),\n                            React.createElement(ResizeHandler, { className: clsx(styles['slider-icon'], styles['slider-icon-side']) })))) : (React.createElement(InternalButton, { className: clsx(styles['open-button'], styles['open-button-side']), iconName: \"angle-left\", variant: \"icon\", formAction: \"none\", ariaLabel: i18nStrings.openButtonAriaLabel, ref: isRefresh ? null : toggleRef })),\n                    React.createElement(\"div\", { className: styles['content-side'], \"aria-hidden\": !isOpen },\n                        React.createElement(\"div\", { className: clsx(styles['pane-header-wrapper-side']) }, paneHeader),\n                        React.createElement(\"hr\", { className: styles['header-divider'] }),\n                        React.createElement(\"div\", { className: clsx(styles['pane-content-wrapper-side']) }, wrappedChildren))))),\n            position === 'bottom' && (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(baseProps.className, styles.root, styles.drawer, styles['position-bottom'], (_c = {},\n                    _c[styles['drawer-closed']] = !isOpen,\n                    _c[styles['drawer-mobile']] = isMobile,\n                    _c[styles['drawer-disable-content-paddings']] = disableContentPaddings,\n                    _c[styles.animating] = isRefresh && (state === 'entering' || state === 'exiting'),\n                    _c[styles.refresh] = isRefresh,\n                    _c)), onClick: function () { return !isOpen && onToggle(); }, style: {\n                    bottom: bottomOffset,\n                    left: leftOffset,\n                    right: rightOffset,\n                    height: isOpen ? cappedSize : undefined\n                }, ref: mergeRefs([splitPanelRef || null, __internalRootRef, transitioningElementRef]) }),\n                isOpen && (React.createElement(\"div\", { className: styles['slider-wrapper-bottom'] },\n                    React.createElement(\"div\", __assign({ role: \"slider\", tabIndex: 0, \"aria-label\": i18nStrings.resizeHandleAriaLabel, \"aria-valuemax\": 100, \"aria-valuemin\": 0, \"aria-valuenow\": relativeSize, className: clsx(styles.slider, styles['slider-bottom']), onKeyDown: onKeyDown, onMouseDown: onSliderMouseDown }, focusVisible),\n                        React.createElement(ResizeHandler, { className: clsx(styles['slider-icon'], styles['slider-icon-bottom']) })))),\n                React.createElement(\"div\", { className: styles['drawer-content-bottom'] },\n                    React.createElement(\"div\", { className: clsx(styles['pane-header-wrapper-bottom'], centeredMaxWidthClasses), ref: splitPanelHeaderRef }, paneHeader),\n                    React.createElement(\"div\", { className: clsx(styles['content-bottom'], centeredMaxWidthClasses), \"aria-hidden\": !isOpen },\n                        React.createElement(\"div\", { className: clsx((_d = {}, _d[styles['content-bottom-max-width']] = isRefresh, _d)), style: appLayoutMaxWidth }, wrappedChildren))))),\n            isPreferencesOpen && (React.createElement(PreferencesModal, { visible: true, preferences: { position: position }, disabledSidePosition: position === 'bottom' && isForcedPosition, i18nStrings: {\n                    header: i18nStrings.preferencesTitle,\n                    confirm: i18nStrings.preferencesConfirm,\n                    cancel: i18nStrings.preferencesCancel,\n                    positionLabel: i18nStrings.preferencesPositionLabel,\n                    positionDescription: i18nStrings.preferencesPositionDescription,\n                    positionBottom: i18nStrings.preferencesPositionBottom,\n                    positionSide: i18nStrings.preferencesPositionSide\n                }, onConfirm: function (preferences) {\n                    onPreferencesChange(__assign({}, preferences));\n                    setPreferencesOpen(false);\n                }, onDismiss: function () {\n                    setPreferencesOpen(false);\n                } }))));\n    }));\n}\napplyDisplayName(SplitPanel, 'SplitPanel');\n"]},"metadata":{},"sourceType":"module"}