{"ast":null,"code":"var PromiseCancelledSignal = function () {\n  function PromiseCancelledSignal() {}\n\n  return PromiseCancelledSignal;\n}();\n\nexport { PromiseCancelledSignal };\nexport function makeCancellable(promise) {\n  var cancelled = false;\n  var wrapped = promise.then(function (value) {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n\n    return value;\n  }, function (err) {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n\n    throw err;\n  });\n  return {\n    promise: wrapped,\n    cancel: function () {\n      cancelled = true;\n    },\n    isCancelled: function () {\n      return cancelled;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/utils/promises.js"],"names":["PromiseCancelledSignal","makeCancellable","promise","cancelled","wrapped","then","value","err","cancel","isCancelled"],"mappings":"AAAA,IAAIA,sBAAsB,GAAI,YAAY;AACtC,WAASA,sBAAT,GAAkC,CACjC;;AACD,SAAOA,sBAAP;AACH,CAJ6B,EAA9B;;AAKA,SAASA,sBAAT;AACA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACrC,MAAIC,SAAS,GAAG,KAAhB;AACA,MAAIC,OAAO,GAAGF,OAAO,CAACG,IAAR,CAAa,UAAUC,KAAV,EAAiB;AACxC,QAAIH,SAAJ,EAAe;AACX,YAAM,IAAIH,sBAAJ,EAAN;AACH;;AACD,WAAOM,KAAP;AACH,GALa,EAKX,UAAUC,GAAV,EAAe;AACd,QAAIJ,SAAJ,EAAe;AACX,YAAM,IAAIH,sBAAJ,EAAN;AACH;;AACD,UAAMO,GAAN;AACH,GAVa,CAAd;AAWA,SAAO;AACHL,IAAAA,OAAO,EAAEE,OADN;AAEHI,IAAAA,MAAM,EAAE,YAAY;AAChBL,MAAAA,SAAS,GAAG,IAAZ;AACH,KAJE;AAKHM,IAAAA,WAAW,EAAE,YAAY;AAAE,aAAON,SAAP;AAAmB;AAL3C,GAAP;AAOH","sourcesContent":["var PromiseCancelledSignal = (function () {\n    function PromiseCancelledSignal() {\n    }\n    return PromiseCancelledSignal;\n}());\nexport { PromiseCancelledSignal };\nexport function makeCancellable(promise) {\n    var cancelled = false;\n    var wrapped = promise.then(function (value) {\n        if (cancelled) {\n            throw new PromiseCancelledSignal();\n        }\n        return value;\n    }, function (err) {\n        if (cancelled) {\n            throw new PromiseCancelledSignal();\n        }\n        throw err;\n    });\n    return {\n        promise: wrapped,\n        cancel: function () {\n            cancelled = true;\n        },\n        isCancelled: function () { return cancelled; }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}