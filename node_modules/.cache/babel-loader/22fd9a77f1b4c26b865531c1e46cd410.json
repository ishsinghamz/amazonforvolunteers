{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { warnOnce } from '../internal/logging';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { Progress, ResultState, SmallText } from './internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nexport default function ProgressBar(_a) {\n  var _b = _a.value,\n      value = _b === void 0 ? 0 : _b,\n      _c = _a.status,\n      status = _c === void 0 ? 'in-progress' : _c,\n      _d = _a.variant,\n      variant = _d === void 0 ? 'standalone' : _d,\n      resultButtonText = _a.resultButtonText,\n      label = _a.label,\n      description = _a.description,\n      additionalInfo = _a.additionalInfo,\n      resultText = _a.resultText,\n      onResultButtonClick = _a.onResultButtonClick,\n      rest = __rest(_a, [\"value\", \"status\", \"variant\", \"resultButtonText\", \"label\", \"description\", \"additionalInfo\", \"resultText\", \"onResultButtonClick\"]);\n\n  var __internalRootRef = useBaseComponent('ProgressBar').__internalRootRef;\n\n  var baseProps = getBaseProps(rest);\n  var generatedName = useUniqueId('awsui-progress-bar-');\n  var labelId = generatedName + \"-label\";\n  var isInFlash = variant === 'flash';\n  var isInProgressState = status === 'in-progress';\n\n  if (isInFlash && resultButtonText) {\n    warnOnce('ProgressBar', 'The `resultButtonText` is ignored if you set `variant=\"flash\"`, and the result button is not displayed. Use the `buttonText` property and the `onButtonClick` event listener of the flashbar item in which the progress bar component is embedded.');\n  }\n\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, variant && styles[variant]),\n    ref: __internalRootRef\n  }), React.createElement(\"div\", {\n    className: isInFlash ? styles['flash-container'] : undefined\n  }, React.createElement(\"div\", {\n    className: clsx(styles['word-wrap'], styles[\"label-\" + variant]),\n    id: labelId\n  }, label), description && React.createElement(SmallText, {\n    color: isInFlash ? 'inherit' : undefined\n  }, description), React.createElement(\"div\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, isInProgressState ? React.createElement(Progress, {\n    value: value,\n    labelId: labelId,\n    isInFlash: isInFlash\n  }) : React.createElement(ResultState, {\n    resultText: resultText,\n    isInFlash: isInFlash,\n    resultButtonText: resultButtonText,\n    status: status,\n    onClick: function () {\n      fireNonCancelableEvent(onResultButtonClick);\n    }\n  }))), additionalInfo && React.createElement(SmallText, {\n    color: isInFlash ? 'inherit' : undefined\n  }, additionalInfo));\n}\napplyDisplayName(ProgressBar, 'ProgressBar');","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/progress-bar/index.js"],"names":["__assign","__rest","React","clsx","styles","getBaseProps","warnOnce","fireNonCancelableEvent","useUniqueId","Progress","ResultState","SmallText","applyDisplayName","useBaseComponent","ProgressBar","_a","_b","value","_c","status","_d","variant","resultButtonText","label","description","additionalInfo","resultText","onResultButtonClick","rest","__internalRootRef","baseProps","generatedName","labelId","isInFlash","isInProgressState","createElement","className","root","ref","undefined","id","color","onClick"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { warnOnce } from '../internal/logging';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { Progress, ResultState, SmallText } from './internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nexport default function ProgressBar(_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.status, status = _c === void 0 ? 'in-progress' : _c, _d = _a.variant, variant = _d === void 0 ? 'standalone' : _d, resultButtonText = _a.resultButtonText, label = _a.label, description = _a.description, additionalInfo = _a.additionalInfo, resultText = _a.resultText, onResultButtonClick = _a.onResultButtonClick, rest = __rest(_a, [\"value\", \"status\", \"variant\", \"resultButtonText\", \"label\", \"description\", \"additionalInfo\", \"resultText\", \"onResultButtonClick\"]);\n    var __internalRootRef = useBaseComponent('ProgressBar').__internalRootRef;\n    var baseProps = getBaseProps(rest);\n    var generatedName = useUniqueId('awsui-progress-bar-');\n    var labelId = generatedName + \"-label\";\n    var isInFlash = variant === 'flash';\n    var isInProgressState = status === 'in-progress';\n    if (isInFlash && resultButtonText) {\n        warnOnce('ProgressBar', 'The `resultButtonText` is ignored if you set `variant=\"flash\"`, and the result button is not displayed. Use the `buttonText` property and the `onButtonClick` event listener of the flashbar item in which the progress bar component is embedded.');\n    }\n    return (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(baseProps.className, styles.root, variant && styles[variant]), ref: __internalRootRef }),\n        React.createElement(\"div\", { className: isInFlash ? styles['flash-container'] : undefined },\n            React.createElement(\"div\", { className: clsx(styles['word-wrap'], styles[\"label-\" + variant]), id: labelId }, label),\n            description && React.createElement(SmallText, { color: isInFlash ? 'inherit' : undefined }, description),\n            React.createElement(\"div\", { \"aria-live\": \"polite\", \"aria-atomic\": \"true\" }, isInProgressState ? (React.createElement(Progress, { value: value, labelId: labelId, isInFlash: isInFlash })) : (React.createElement(ResultState, { resultText: resultText, isInFlash: isInFlash, resultButtonText: resultButtonText, status: status, onClick: function () {\n                    fireNonCancelableEvent(onResultButtonClick);\n                } })))),\n        additionalInfo && React.createElement(SmallText, { color: isInFlash ? 'inherit' : undefined }, additionalInfo)));\n}\napplyDisplayName(ProgressBar, 'ProgressBar');\n"]},"metadata":{},"sourceType":"module"}