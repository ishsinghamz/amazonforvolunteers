{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { Label, LabelTag, Description, Tags, FilteringTags, OptionIcon } from './option-parts';\nimport { getBaseProps } from '../../base-component';\nimport { warnOnce } from '../../logging';\nimport { isDevelopment } from '../../is-development';\n\nfunction validateStringValue(value, propertyName) {\n  if (typeof value !== 'undefined' && typeof value !== 'string') {\n    warnOnce('DropdownOption', \"This component only supports string values, but \\\"option.\" + propertyName + \"\\\" has \" + typeof value + \" type. The component may work incorrectly.\");\n  }\n}\n\nvar Option = function (_a) {\n  var _b, _c;\n\n  var option = _a.option,\n      highlightText = _a.highlightText,\n      _d = _a.triggerVariant,\n      triggerVariant = _d === void 0 ? false : _d,\n      restProps = __rest(_a, [\"option\", \"highlightText\", \"triggerVariant\"]);\n\n  if (!option) {\n    return null;\n  }\n\n  var disabled = option.disabled;\n  var baseProps = getBaseProps(restProps);\n\n  if (isDevelopment) {\n    validateStringValue(option.label, 'label');\n    validateStringValue(option.description, 'description');\n    validateStringValue(option.labelTag, 'labelTag');\n    (_b = option.tags) === null || _b === void 0 ? void 0 : _b.forEach(function (tag, index) {\n      validateStringValue(tag, \"tags[\" + index + \"]\");\n    });\n    (_c = option.filteringTags) === null || _c === void 0 ? void 0 : _c.forEach(function (tag, index) {\n      validateStringValue(tag, \"filteringTags[\" + index + \"]\");\n    });\n  }\n\n  var className = clsx(styles.option, disabled && styles.disabled);\n  var icon = option.__customIcon || React.createElement(OptionIcon, {\n    name: option.iconName,\n    url: option.iconUrl,\n    svg: option.iconSvg,\n    alt: option.iconAlt,\n    size: option.description || option.tags ? 'big' : 'normal'\n  });\n  return React.createElement(\"div\", __assign({\n    title: option.label || option.value,\n    \"data-value\": option.value,\n    className: className,\n    \"aria-disabled\": disabled\n  }, baseProps), icon, React.createElement(\"div\", {\n    className: clsx(styles.content)\n  }, React.createElement(\"div\", {\n    className: clsx(styles['label-content'])\n  }, React.createElement(Label, {\n    label: option.label || option.value,\n    prefix: option.__labelPrefix,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(LabelTag, {\n    labelTag: option.labelTag,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  })), React.createElement(Description, {\n    description: option.description,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(Tags, {\n    tags: option.tags,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(FilteringTags, {\n    filteringTags: option.filteringTags,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  })));\n};\n\nexport default Option;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/option/index.js"],"names":["__assign","__rest","React","clsx","styles","Label","LabelTag","Description","Tags","FilteringTags","OptionIcon","getBaseProps","warnOnce","isDevelopment","validateStringValue","value","propertyName","Option","_a","_b","_c","option","highlightText","_d","triggerVariant","restProps","disabled","baseProps","label","description","labelTag","tags","forEach","tag","index","filteringTags","className","icon","__customIcon","createElement","name","iconName","url","iconUrl","svg","iconSvg","alt","iconAlt","size","title","content","prefix","__labelPrefix"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,IAAvC,EAA6CC,aAA7C,EAA4DC,UAA5D,QAA8E,gBAA9E;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AACA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,YAApC,EAAkD;AAC9C,MAAI,OAAOD,KAAP,KAAiB,WAAjB,IAAgC,OAAOA,KAAP,KAAiB,QAArD,EAA+D;AAC3DH,IAAAA,QAAQ,CAAC,gBAAD,EAAmB,8DAA8DI,YAA9D,GAA6E,SAA7E,GAAyF,OAAOD,KAAhG,GAAwG,4CAA3H,CAAR;AACH;AACJ;;AACD,IAAIE,MAAM,GAAG,UAAUC,EAAV,EAAc;AACvB,MAAIC,EAAJ,EAAQC,EAAR;;AACA,MAAIC,MAAM,GAAGH,EAAE,CAACG,MAAhB;AAAA,MAAwBC,aAAa,GAAGJ,EAAE,CAACI,aAA3C;AAAA,MAA0DC,EAAE,GAAGL,EAAE,CAACM,cAAlE;AAAA,MAAkFA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3H;AAAA,MAA+HE,SAAS,GAAGxB,MAAM,CAACiB,EAAD,EAAK,CAAC,QAAD,EAAW,eAAX,EAA4B,gBAA5B,CAAL,CAAjJ;;AACA,MAAI,CAACG,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AACD,MAAIK,QAAQ,GAAGL,MAAM,CAACK,QAAtB;AACA,MAAIC,SAAS,GAAGhB,YAAY,CAACc,SAAD,CAA5B;;AACA,MAAIZ,aAAJ,EAAmB;AACfC,IAAAA,mBAAmB,CAACO,MAAM,CAACO,KAAR,EAAe,OAAf,CAAnB;AACAd,IAAAA,mBAAmB,CAACO,MAAM,CAACQ,WAAR,EAAqB,aAArB,CAAnB;AACAf,IAAAA,mBAAmB,CAACO,MAAM,CAACS,QAAR,EAAkB,UAAlB,CAAnB;AACA,KAACX,EAAE,GAAGE,MAAM,CAACU,IAAb,MAAuB,IAAvB,IAA+BZ,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACa,OAAH,CAAW,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACrFpB,MAAAA,mBAAmB,CAACmB,GAAD,EAAM,UAAUC,KAAV,GAAkB,GAAxB,CAAnB;AACH,KAFuD,CAAxD;AAGA,KAACd,EAAE,GAAGC,MAAM,CAACc,aAAb,MAAgC,IAAhC,IAAwCf,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACY,OAAH,CAAW,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC9FpB,MAAAA,mBAAmB,CAACmB,GAAD,EAAM,mBAAmBC,KAAnB,GAA2B,GAAjC,CAAnB;AACH,KAFgE,CAAjE;AAGH;;AACD,MAAIE,SAAS,GAAGjC,IAAI,CAACC,MAAM,CAACiB,MAAR,EAAgBK,QAAQ,IAAItB,MAAM,CAACsB,QAAnC,CAApB;AACA,MAAIW,IAAI,GAAGhB,MAAM,CAACiB,YAAP,IAAwBpC,KAAK,CAACqC,aAAN,CAAoB7B,UAApB,EAAgC;AAAE8B,IAAAA,IAAI,EAAEnB,MAAM,CAACoB,QAAf;AAAyBC,IAAAA,GAAG,EAAErB,MAAM,CAACsB,OAArC;AAA8CC,IAAAA,GAAG,EAAEvB,MAAM,CAACwB,OAA1D;AAAmEC,IAAAA,GAAG,EAAEzB,MAAM,CAAC0B,OAA/E;AAAwFC,IAAAA,IAAI,EAAE3B,MAAM,CAACQ,WAAP,IAAsBR,MAAM,CAACU,IAA7B,GAAoC,KAApC,GAA4C;AAA1I,GAAhC,CAAnC;AACA,SAAQ7B,KAAK,CAACqC,aAAN,CAAoB,KAApB,EAA2BvC,QAAQ,CAAC;AAAEiD,IAAAA,KAAK,EAAE5B,MAAM,CAACO,KAAP,IAAgBP,MAAM,CAACN,KAAhC;AAAuC,kBAAcM,MAAM,CAACN,KAA5D;AAAmEqB,IAAAA,SAAS,EAAEA,SAA9E;AAAyF,qBAAiBV;AAA1G,GAAD,EAAuHC,SAAvH,CAAnC,EACJU,IADI,EAEJnC,KAAK,CAACqC,aAAN,CAAoB,KAApB,EAA2B;AAAEH,IAAAA,SAAS,EAAEjC,IAAI,CAACC,MAAM,CAAC8C,OAAR;AAAjB,GAA3B,EACIhD,KAAK,CAACqC,aAAN,CAAoB,KAApB,EAA2B;AAAEH,IAAAA,SAAS,EAAEjC,IAAI,CAACC,MAAM,CAAC,eAAD,CAAP;AAAjB,GAA3B,EACIF,KAAK,CAACqC,aAAN,CAAoBlC,KAApB,EAA2B;AAAEuB,IAAAA,KAAK,EAAEP,MAAM,CAACO,KAAP,IAAgBP,MAAM,CAACN,KAAhC;AAAuCoC,IAAAA,MAAM,EAAE9B,MAAM,CAAC+B,aAAtD;AAAqE9B,IAAAA,aAAa,EAAEA,aAApF;AAAmGE,IAAAA,cAAc,EAAEA;AAAnH,GAA3B,CADJ,EAEItB,KAAK,CAACqC,aAAN,CAAoBjC,QAApB,EAA8B;AAAEwB,IAAAA,QAAQ,EAAET,MAAM,CAACS,QAAnB;AAA6BR,IAAAA,aAAa,EAAEA,aAA5C;AAA2DE,IAAAA,cAAc,EAAEA;AAA3E,GAA9B,CAFJ,CADJ,EAIItB,KAAK,CAACqC,aAAN,CAAoBhC,WAApB,EAAiC;AAAEsB,IAAAA,WAAW,EAAER,MAAM,CAACQ,WAAtB;AAAmCP,IAAAA,aAAa,EAAEA,aAAlD;AAAiEE,IAAAA,cAAc,EAAEA;AAAjF,GAAjC,CAJJ,EAKItB,KAAK,CAACqC,aAAN,CAAoB/B,IAApB,EAA0B;AAAEuB,IAAAA,IAAI,EAAEV,MAAM,CAACU,IAAf;AAAqBT,IAAAA,aAAa,EAAEA,aAApC;AAAmDE,IAAAA,cAAc,EAAEA;AAAnE,GAA1B,CALJ,EAMItB,KAAK,CAACqC,aAAN,CAAoB9B,aAApB,EAAmC;AAAE0B,IAAAA,aAAa,EAAEd,MAAM,CAACc,aAAxB;AAAuCb,IAAAA,aAAa,EAAEA,aAAtD;AAAqEE,IAAAA,cAAc,EAAEA;AAArF,GAAnC,CANJ,CAFI,CAAR;AASH,CA9BD;;AA+BA,eAAeP,MAAf","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { Label, LabelTag, Description, Tags, FilteringTags, OptionIcon } from './option-parts';\nimport { getBaseProps } from '../../base-component';\nimport { warnOnce } from '../../logging';\nimport { isDevelopment } from '../../is-development';\nfunction validateStringValue(value, propertyName) {\n    if (typeof value !== 'undefined' && typeof value !== 'string') {\n        warnOnce('DropdownOption', \"This component only supports string values, but \\\"option.\" + propertyName + \"\\\" has \" + typeof value + \" type. The component may work incorrectly.\");\n    }\n}\nvar Option = function (_a) {\n    var _b, _c;\n    var option = _a.option, highlightText = _a.highlightText, _d = _a.triggerVariant, triggerVariant = _d === void 0 ? false : _d, restProps = __rest(_a, [\"option\", \"highlightText\", \"triggerVariant\"]);\n    if (!option) {\n        return null;\n    }\n    var disabled = option.disabled;\n    var baseProps = getBaseProps(restProps);\n    if (isDevelopment) {\n        validateStringValue(option.label, 'label');\n        validateStringValue(option.description, 'description');\n        validateStringValue(option.labelTag, 'labelTag');\n        (_b = option.tags) === null || _b === void 0 ? void 0 : _b.forEach(function (tag, index) {\n            validateStringValue(tag, \"tags[\" + index + \"]\");\n        });\n        (_c = option.filteringTags) === null || _c === void 0 ? void 0 : _c.forEach(function (tag, index) {\n            validateStringValue(tag, \"filteringTags[\" + index + \"]\");\n        });\n    }\n    var className = clsx(styles.option, disabled && styles.disabled);\n    var icon = option.__customIcon || (React.createElement(OptionIcon, { name: option.iconName, url: option.iconUrl, svg: option.iconSvg, alt: option.iconAlt, size: option.description || option.tags ? 'big' : 'normal' }));\n    return (React.createElement(\"div\", __assign({ title: option.label || option.value, \"data-value\": option.value, className: className, \"aria-disabled\": disabled }, baseProps),\n        icon,\n        React.createElement(\"div\", { className: clsx(styles.content) },\n            React.createElement(\"div\", { className: clsx(styles['label-content']) },\n                React.createElement(Label, { label: option.label || option.value, prefix: option.__labelPrefix, highlightText: highlightText, triggerVariant: triggerVariant }),\n                React.createElement(LabelTag, { labelTag: option.labelTag, highlightText: highlightText, triggerVariant: triggerVariant })),\n            React.createElement(Description, { description: option.description, highlightText: highlightText, triggerVariant: triggerVariant }),\n            React.createElement(Tags, { tags: option.tags, highlightText: highlightText, triggerVariant: triggerVariant }),\n            React.createElement(FilteringTags, { filteringTags: option.filteringTags, highlightText: highlightText, triggerVariant: triggerVariant }))));\n};\nexport default Option;\n"]},"metadata":{},"sourceType":"module"}