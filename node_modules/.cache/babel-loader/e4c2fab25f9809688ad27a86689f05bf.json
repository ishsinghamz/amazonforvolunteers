{"ast":null,"code":"import React from 'react';\nimport InternalLink from '../../../link/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport { fireNonCancelableEvent } from '../../events';\nimport { usePrevious } from '../../hooks/use-previous';\nimport styles from './styles.css.js';\n\nvar DropdownStatus = function (_a) {\n  var children = _a.children;\n  return React.createElement(\"div\", {\n    className: styles.root\n  }, children);\n};\n\nexport var useDropdownStatus = function (_a) {\n  var statusType = _a.statusType,\n      empty = _a.empty,\n      loadingText = _a.loadingText,\n      finishedText = _a.finishedText,\n      errorText = _a.errorText,\n      recoveryText = _a.recoveryText,\n      isEmpty = _a.isEmpty,\n      isNoMatch = _a.isNoMatch,\n      noMatch = _a.noMatch,\n      onRecoveryClick = _a.onRecoveryClick;\n  var statusResult = {\n    isSticky: true,\n    content: null\n  };\n  var previousStatusType = usePrevious(statusType);\n\n  if (statusType === 'loading') {\n    statusResult.content = React.createElement(InternalStatusIndicator, {\n      type: 'loading'\n    }, loadingText);\n  } else if (statusType === 'error') {\n    statusResult.content = React.createElement(React.Fragment, null, React.createElement(InternalStatusIndicator, {\n      type: \"error\",\n      __uxdgInverted: true,\n      __animate: previousStatusType !== 'error'\n    }, errorText), ' ', recoveryText && React.createElement(InternalLink, {\n      onFollow: function () {\n        return fireNonCancelableEvent(onRecoveryClick);\n      },\n      variant: \"recovery\",\n      className: styles.recovery\n    }, recoveryText));\n  } else if (isEmpty && empty) {\n    statusResult.content = empty;\n  } else if (isNoMatch && noMatch) {\n    statusResult.content = noMatch;\n  } else if (statusType === 'finished' && finishedText) {\n    statusResult.content = finishedText;\n    statusResult.isSticky = false;\n  }\n\n  return statusResult;\n};\nexport default DropdownStatus;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/dropdown-status/index.js"],"names":["React","InternalLink","InternalStatusIndicator","fireNonCancelableEvent","usePrevious","styles","DropdownStatus","_a","children","createElement","className","root","useDropdownStatus","statusType","empty","loadingText","finishedText","errorText","recoveryText","isEmpty","isNoMatch","noMatch","onRecoveryClick","statusResult","isSticky","content","previousStatusType","type","Fragment","__uxdgInverted","__animate","onFollow","variant","recovery"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InternalLink from '../../../link/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport { fireNonCancelableEvent } from '../../events';\nimport { usePrevious } from '../../hooks/use-previous';\nimport styles from './styles.css.js';\nvar DropdownStatus = function (_a) {\n    var children = _a.children;\n    return React.createElement(\"div\", { className: styles.root }, children);\n};\nexport var useDropdownStatus = function (_a) {\n    var statusType = _a.statusType, empty = _a.empty, loadingText = _a.loadingText, finishedText = _a.finishedText, errorText = _a.errorText, recoveryText = _a.recoveryText, isEmpty = _a.isEmpty, isNoMatch = _a.isNoMatch, noMatch = _a.noMatch, onRecoveryClick = _a.onRecoveryClick;\n    var statusResult = { isSticky: true, content: null };\n    var previousStatusType = usePrevious(statusType);\n    if (statusType === 'loading') {\n        statusResult.content = React.createElement(InternalStatusIndicator, { type: 'loading' }, loadingText);\n    }\n    else if (statusType === 'error') {\n        statusResult.content = (React.createElement(React.Fragment, null,\n            React.createElement(InternalStatusIndicator, { type: \"error\", __uxdgInverted: true, __animate: previousStatusType !== 'error' }, errorText),\n            ' ',\n            recoveryText && (React.createElement(InternalLink, { onFollow: function () { return fireNonCancelableEvent(onRecoveryClick); }, variant: \"recovery\", className: styles.recovery }, recoveryText))));\n    }\n    else if (isEmpty && empty) {\n        statusResult.content = empty;\n    }\n    else if (isNoMatch && noMatch) {\n        statusResult.content = noMatch;\n    }\n    else if (statusType === 'finished' && finishedText) {\n        statusResult.content = finishedText;\n        statusResult.isSticky = false;\n    }\n    return statusResult;\n};\nexport default DropdownStatus;\n"]},"metadata":{},"sourceType":"module"}