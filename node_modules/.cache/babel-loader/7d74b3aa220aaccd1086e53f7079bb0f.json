{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar Input = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n      _b = _a.type,\n      type = _b === void 0 ? 'text' : _b,\n      step = _a.step,\n      inputMode = _a.inputMode,\n      _c = _a.autoComplete,\n      autoComplete = _c === void 0 ? true : _c,\n      disabled = _a.disabled,\n      readOnly = _a.readOnly,\n      disableBrowserAutocorrect = _a.disableBrowserAutocorrect,\n      onKeyDown = _a.onKeyDown,\n      onKeyUp = _a.onKeyUp,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      ariaRequired = _a.ariaRequired,\n      name = _a.name,\n      placeholder = _a.placeholder,\n      autoFocus = _a.autoFocus,\n      ariaLabel = _a.ariaLabel,\n      rest = __rest(_a, [\"value\", \"type\", \"step\", \"inputMode\", \"autoComplete\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"placeholder\", \"autoFocus\", \"ariaLabel\"]);\n\n  var baseComponentProps = useBaseComponent('Input');\n  var baseProps = getBaseProps(rest);\n\n  var _d = useFormFieldContext(rest),\n      ariaLabelledby = _d.ariaLabelledby,\n      ariaDescribedby = _d.ariaDescribedby,\n      controlId = _d.controlId,\n      invalid = _d.invalid;\n\n  var inputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function () {\n        var _a;\n\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus.apply(_a, args);\n      },\n      select: function () {\n        var _a;\n\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n  }, [inputRef]);\n  return React.createElement(InternalInput, __assign({\n    ref: inputRef\n  }, __assign(__assign(__assign({}, baseProps), baseComponentProps), {\n    autoComplete: autoComplete,\n    ariaLabel: ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabelledby: ariaLabelledby,\n    ariaRequired: ariaRequired,\n    autoFocus: autoFocus,\n    controlId: controlId,\n    disabled: disabled,\n    disableBrowserAutocorrect: disableBrowserAutocorrect,\n    invalid: invalid,\n    name: name,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onChange: onChange,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    type: type,\n    step: step,\n    inputMode: inputMode,\n    value: value\n  }), {\n    className: clsx(styles.root, baseProps.className)\n  }));\n});\napplyDisplayName(Input, 'Input');\nexport default Input;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/input/index.js"],"names":["__assign","__rest","clsx","React","useImperativeHandle","useRef","getBaseProps","InternalInput","useFormFieldContext","styles","applyDisplayName","useBaseComponent","Input","forwardRef","_a","ref","value","_b","type","step","inputMode","_c","autoComplete","disabled","readOnly","disableBrowserAutocorrect","onKeyDown","onKeyUp","onChange","onBlur","onFocus","ariaRequired","name","placeholder","autoFocus","ariaLabel","rest","baseComponentProps","baseProps","_d","ariaLabelledby","ariaDescribedby","controlId","invalid","inputRef","focus","args","_i","arguments","length","current","apply","select","createElement","className","root"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar Input = React.forwardRef(function (_a, ref) {\n    var value = _a.value, _b = _a.type, type = _b === void 0 ? 'text' : _b, step = _a.step, inputMode = _a.inputMode, _c = _a.autoComplete, autoComplete = _c === void 0 ? true : _c, disabled = _a.disabled, readOnly = _a.readOnly, disableBrowserAutocorrect = _a.disableBrowserAutocorrect, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onChange = _a.onChange, onBlur = _a.onBlur, onFocus = _a.onFocus, ariaRequired = _a.ariaRequired, name = _a.name, placeholder = _a.placeholder, autoFocus = _a.autoFocus, ariaLabel = _a.ariaLabel, rest = __rest(_a, [\"value\", \"type\", \"step\", \"inputMode\", \"autoComplete\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"placeholder\", \"autoFocus\", \"ariaLabel\"]);\n    var baseComponentProps = useBaseComponent('Input');\n    var baseProps = getBaseProps(rest);\n    var _d = useFormFieldContext(rest), ariaLabelledby = _d.ariaLabelledby, ariaDescribedby = _d.ariaDescribedby, controlId = _d.controlId, invalid = _d.invalid;\n    var inputRef = useRef(null);\n    useImperativeHandle(ref, function () { return ({\n        focus: function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus.apply(_a, args);\n        },\n        select: function () {\n            var _a;\n            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n        }\n    }); }, [inputRef]);\n    return (React.createElement(InternalInput, __assign({ ref: inputRef }, __assign(__assign(__assign({}, baseProps), baseComponentProps), { autoComplete: autoComplete, ariaLabel: ariaLabel, ariaDescribedby: ariaDescribedby, ariaLabelledby: ariaLabelledby, ariaRequired: ariaRequired, autoFocus: autoFocus, controlId: controlId, disabled: disabled, disableBrowserAutocorrect: disableBrowserAutocorrect, invalid: invalid, name: name, onKeyDown: onKeyDown, onKeyUp: onKeyUp, onChange: onChange, onBlur: onBlur, onFocus: onFocus, placeholder: placeholder, readOnly: readOnly, type: type, step: step, inputMode: inputMode, value: value }), { className: clsx(styles.root, baseProps.className) })));\n});\napplyDisplayName(Input, 'Input');\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}