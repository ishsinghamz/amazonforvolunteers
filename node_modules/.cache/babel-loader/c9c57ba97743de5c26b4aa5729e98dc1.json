{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport Dropdown from '../../internal/components/dropdown';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport Tooltip from '../tooltip.js';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nvar ExpandableCategoryElement = function (_a) {\n  var _b, _c;\n\n  var item = _a.item,\n      onItemActivate = _a.onItemActivate,\n      onGroupToggle = _a.onGroupToggle,\n      targetItem = _a.targetItem,\n      isHighlighted = _a.isHighlighted,\n      isExpanded = _a.isExpanded,\n      highlightItem = _a.highlightItem,\n      disabled = _a.disabled,\n      expandToViewport = _a.expandToViewport,\n      variant = _a.variant;\n  var highlighted = isHighlighted(item);\n  var expanded = isExpanded(item);\n  var triggerRef = React.useRef(null);\n  var ref = useRef(null);\n  useEffect(function () {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n\n  var triggerClickHandler = function (e) {\n    if (!disabled) {\n      e.preventDefault();\n      onGroupToggle(item, e);\n\n      if (triggerRef.current) {\n        triggerRef.current.focus();\n      }\n    }\n  };\n\n  var onHover = function (event) {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  var isDisabledWithReason = !!item.disabledReason && item.disabled;\n\n  var _d = useHiddenDescription(item.disabledReason),\n      targetProps = _d.targetProps,\n      descriptionEl = _d.descriptionEl;\n\n  var trigger = item.text && React.createElement(\"span\", __assign({\n    onClick: triggerClickHandler,\n    className: clsx(styles.header, styles['expandable-header'], styles[\"variant-\" + variant], (_b = {}, _b[styles.disabled] = disabled, _b[styles.highlighted] = highlighted, _b)),\n    tabIndex: highlighted ? 0 : -1,\n    ref: triggerRef\n  }, getMenuItemProps({\n    parent: true,\n    expanded: expanded,\n    disabled: disabled\n  }), isDisabledWithReason ? targetProps : {}), item.text, React.createElement(\"span\", {\n    className: clsx(styles['expand-icon'], styles['expand-icon-right'])\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\"\n  })));\n  var content;\n\n  if (isDisabledWithReason) {\n    content = React.createElement(Tooltip, {\n      content: item.disabledReason\n    }, trigger, descriptionEl);\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = React.createElement(Dropdown, {\n      open: expanded,\n      stretchWidth: false,\n      interior: true,\n      expandToViewport: expandToViewport,\n      trigger: trigger\n    }, item.items && expanded && React.createElement(\"ul\", {\n      role: \"menu\",\n      \"aria-label\": item.text,\n      className: clsx(styles['items-list-container'])\n    }, React.createElement(ItemsList, {\n      items: item.items,\n      onItemActivate: onItemActivate,\n      onGroupToggle: onGroupToggle,\n      targetItem: targetItem,\n      isHighlighted: isHighlighted,\n      isExpanded: isExpanded,\n      highlightItem: highlightItem,\n      variant: variant\n    })));\n  }\n\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[\"variant-\" + variant], styles.expandable, (_c = {}, _c[styles.expanded] = expanded, _c[styles.disabled] = disabled, _c[styles.highlighted] = highlighted, _c)),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    ref: ref,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, content);\n};\n\nexport default ExpandableCategoryElement;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/button-dropdown/category-elements/expandable-category-element.js"],"names":["__assign","React","useEffect","useRef","clsx","styles","InternalIcon","ItemsList","Dropdown","useHiddenDescription","Tooltip","getMenuItemProps","ExpandableCategoryElement","_a","_b","_c","item","onItemActivate","onGroupToggle","targetItem","isHighlighted","isExpanded","highlightItem","disabled","expandToViewport","variant","highlighted","expanded","triggerRef","ref","current","focus","triggerClickHandler","e","preventDefault","onHover","event","isDisabledWithReason","disabledReason","_d","targetProps","descriptionEl","trigger","text","createElement","onClick","className","header","tabIndex","parent","name","content","open","stretchWidth","interior","items","role","category","expandable","id","onMouseEnter","onTouchStart"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport Dropdown from '../../internal/components/dropdown';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport Tooltip from '../tooltip.js';\nimport { getMenuItemProps } from '../utils/menu-item';\nvar ExpandableCategoryElement = function (_a) {\n    var _b, _c;\n    var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, expandToViewport = _a.expandToViewport, variant = _a.variant;\n    var highlighted = isHighlighted(item);\n    var expanded = isExpanded(item);\n    var triggerRef = React.useRef(null);\n    var ref = useRef(null);\n    useEffect(function () {\n        if (triggerRef.current && highlighted && !expanded) {\n            triggerRef.current.focus();\n        }\n    }, [expanded, highlighted]);\n    var triggerClickHandler = function (e) {\n        if (!disabled) {\n            e.preventDefault();\n            onGroupToggle(item, e);\n            if (triggerRef.current) {\n                triggerRef.current.focus();\n            }\n        }\n    };\n    var onHover = function (event) {\n        event.preventDefault();\n        highlightItem(item);\n    };\n    var isDisabledWithReason = !!item.disabledReason && item.disabled;\n    var _d = useHiddenDescription(item.disabledReason), targetProps = _d.targetProps, descriptionEl = _d.descriptionEl;\n    var trigger = item.text && (React.createElement(\"span\", __assign({ onClick: triggerClickHandler, className: clsx(styles.header, styles['expandable-header'], styles[\"variant-\" + variant], (_b = {},\n            _b[styles.disabled] = disabled,\n            _b[styles.highlighted] = highlighted,\n            _b)), tabIndex: highlighted ? 0 : -1, ref: triggerRef }, getMenuItemProps({ parent: true, expanded: expanded, disabled: disabled }), (isDisabledWithReason ? targetProps : {})),\n        item.text,\n        React.createElement(\"span\", { className: clsx(styles['expand-icon'], styles['expand-icon-right']) },\n            React.createElement(InternalIcon, { name: \"caret-down-filled\" }))));\n    var content;\n    if (isDisabledWithReason) {\n        content = (React.createElement(Tooltip, { content: item.disabledReason },\n            trigger,\n            descriptionEl));\n    }\n    else if (disabled) {\n        content = trigger;\n    }\n    else {\n        content = (React.createElement(Dropdown, { open: expanded, stretchWidth: false, interior: true, expandToViewport: expandToViewport, trigger: trigger }, item.items && expanded && (React.createElement(\"ul\", { role: \"menu\", \"aria-label\": item.text, className: clsx(styles['items-list-container']) },\n            React.createElement(ItemsList, { items: item.items, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isExpanded: isExpanded, highlightItem: highlightItem, variant: variant })))));\n    }\n    return (React.createElement(\"li\", { className: clsx(styles.category, styles[\"variant-\" + variant], styles.expandable, (_c = {},\n            _c[styles.expanded] = expanded,\n            _c[styles.disabled] = disabled,\n            _c[styles.highlighted] = highlighted,\n            _c)), role: \"presentation\", \"data-testid\": item.id, ref: ref, onMouseEnter: onHover, onTouchStart: onHover }, content));\n};\nexport default ExpandableCategoryElement;\n"]},"metadata":{},"sourceType":"module"}