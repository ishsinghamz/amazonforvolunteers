{"ast":null,"code":"import React from 'react';\nimport { InternalButton } from '../../button/internal';\nimport styles from './styles.css.js';\nexport var togglesConfig = {\n  navigation: {\n    TagName: 'nav',\n    iconName: 'menu',\n    getLabels: function (labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n\n      return {\n        mainLabel: labels.navigation,\n        openLabel: labels.navigationToggle,\n        closeLabel: labels.navigationClose\n      };\n    }\n  },\n  tools: {\n    TagName: 'aside',\n    iconName: 'status-info',\n    getLabels: function (labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n\n      return {\n        mainLabel: labels.tools,\n        openLabel: labels.toolsToggle,\n        closeLabel: labels.toolsClose\n      };\n    }\n  }\n};\nexport var AppLayoutButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n      ariaLabel = _a.ariaLabel,\n      ariaExpanded = _a.ariaExpanded,\n      iconName = _a.iconName,\n      disabled = _a.disabled,\n      onClick = _a.onClick;\n  return React.createElement(InternalButton, {\n    ref: ref,\n    className: className,\n    ariaLabel: ariaLabel,\n    variant: \"icon\",\n    formAction: \"none\",\n    onClick: onClick,\n    iconName: iconName,\n    disabled: disabled,\n    __nativeAttributes: {\n      'aria-expanded': ariaExpanded\n    }\n  });\n});\nexport var CloseButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n      ariaLabel = _a.ariaLabel,\n      onClick = _a.onClick,\n      iconName = _a.iconName;\n  return React.createElement(\"span\", {\n    className: styles['close-button']\n  }, React.createElement(AppLayoutButton, {\n    ref: ref,\n    className: className,\n    ariaLabel: ariaLabel,\n    iconName: iconName,\n    onClick: onClick\n  }));\n});","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/app-layout/toggles/index.js"],"names":["React","InternalButton","styles","togglesConfig","navigation","TagName","iconName","getLabels","labels","mainLabel","openLabel","navigationToggle","closeLabel","navigationClose","tools","toolsToggle","toolsClose","AppLayoutButton","forwardRef","_a","ref","className","ariaLabel","ariaExpanded","disabled","onClick","createElement","variant","formAction","__nativeAttributes","CloseButton"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,IAAIC,aAAa,GAAG;AACvBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE,KADD;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGRC,IAAAA,SAAS,EAAE,UAAUC,MAAV,EAAkB;AACzB,UAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,QAAAA,MAAM,GAAG,EAAT;AAAc;;AACvC,aAAQ;AACJC,QAAAA,SAAS,EAAED,MAAM,CAACJ,UADd;AAEJM,QAAAA,SAAS,EAAEF,MAAM,CAACG,gBAFd;AAGJC,QAAAA,UAAU,EAAEJ,MAAM,CAACK;AAHf,OAAR;AAKH;AAVO,GADW;AAavBC,EAAAA,KAAK,EAAE;AACHT,IAAAA,OAAO,EAAE,OADN;AAEHC,IAAAA,QAAQ,EAAE,aAFP;AAGHC,IAAAA,SAAS,EAAE,UAAUC,MAAV,EAAkB;AACzB,UAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,QAAAA,MAAM,GAAG,EAAT;AAAc;;AACvC,aAAQ;AACJC,QAAAA,SAAS,EAAED,MAAM,CAACM,KADd;AAEJJ,QAAAA,SAAS,EAAEF,MAAM,CAACO,WAFd;AAGJH,QAAAA,UAAU,EAAEJ,MAAM,CAACQ;AAHf,OAAR;AAKH;AAVE;AAbgB,CAApB;AA0BP,OAAO,IAAIC,eAAe,GAAGjB,KAAK,CAACkB,UAAN,CAAiB,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AAC7D,MAAIC,SAAS,GAAGF,EAAE,CAACE,SAAnB;AAAA,MAA8BC,SAAS,GAAGH,EAAE,CAACG,SAA7C;AAAA,MAAwDC,YAAY,GAAGJ,EAAE,CAACI,YAA1E;AAAA,MAAwFjB,QAAQ,GAAGa,EAAE,CAACb,QAAtG;AAAA,MAAgHkB,QAAQ,GAAGL,EAAE,CAACK,QAA9H;AAAA,MAAwIC,OAAO,GAAGN,EAAE,CAACM,OAArJ;AACA,SAAQzB,KAAK,CAAC0B,aAAN,CAAoBzB,cAApB,EAAoC;AAAEmB,IAAAA,GAAG,EAAEA,GAAP;AAAYC,IAAAA,SAAS,EAAEA,SAAvB;AAAkCC,IAAAA,SAAS,EAAEA,SAA7C;AAAwDK,IAAAA,OAAO,EAAE,MAAjE;AAAyEC,IAAAA,UAAU,EAAE,MAArF;AAA6FH,IAAAA,OAAO,EAAEA,OAAtG;AAA+GnB,IAAAA,QAAQ,EAAEA,QAAzH;AAAmIkB,IAAAA,QAAQ,EAAEA,QAA7I;AAAuJK,IAAAA,kBAAkB,EAAE;AAC/M,uBAAiBN;AAD8L;AAA3K,GAApC,CAAR;AAGH,CAL4B,CAAtB;AAMP,OAAO,IAAIO,WAAW,GAAG9B,KAAK,CAACkB,UAAN,CAAiB,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AACzD,MAAIC,SAAS,GAAGF,EAAE,CAACE,SAAnB;AAAA,MAA8BC,SAAS,GAAGH,EAAE,CAACG,SAA7C;AAAA,MAAwDG,OAAO,GAAGN,EAAE,CAACM,OAArE;AAAA,MAA8EnB,QAAQ,GAAGa,EAAE,CAACb,QAA5F;AACA,SAAQN,KAAK,CAAC0B,aAAN,CAAoB,MAApB,EAA4B;AAAEL,IAAAA,SAAS,EAAEnB,MAAM,CAAC,cAAD;AAAnB,GAA5B,EACJF,KAAK,CAAC0B,aAAN,CAAoBT,eAApB,EAAqC;AAAEG,IAAAA,GAAG,EAAEA,GAAP;AAAYC,IAAAA,SAAS,EAAEA,SAAvB;AAAkCC,IAAAA,SAAS,EAAEA,SAA7C;AAAwDhB,IAAAA,QAAQ,EAAEA,QAAlE;AAA4EmB,IAAAA,OAAO,EAAEA;AAArF,GAArC,CADI,CAAR;AAEH,CAJwB,CAAlB","sourcesContent":["import React from 'react';\nimport { InternalButton } from '../../button/internal';\nimport styles from './styles.css.js';\nexport var togglesConfig = {\n    navigation: {\n        TagName: 'nav',\n        iconName: 'menu',\n        getLabels: function (labels) {\n            if (labels === void 0) { labels = {}; }\n            return ({\n                mainLabel: labels.navigation,\n                openLabel: labels.navigationToggle,\n                closeLabel: labels.navigationClose\n            });\n        }\n    },\n    tools: {\n        TagName: 'aside',\n        iconName: 'status-info',\n        getLabels: function (labels) {\n            if (labels === void 0) { labels = {}; }\n            return ({\n                mainLabel: labels.tools,\n                openLabel: labels.toolsToggle,\n                closeLabel: labels.toolsClose\n            });\n        }\n    }\n};\nexport var AppLayoutButton = React.forwardRef(function (_a, ref) {\n    var className = _a.className, ariaLabel = _a.ariaLabel, ariaExpanded = _a.ariaExpanded, iconName = _a.iconName, disabled = _a.disabled, onClick = _a.onClick;\n    return (React.createElement(InternalButton, { ref: ref, className: className, ariaLabel: ariaLabel, variant: \"icon\", formAction: \"none\", onClick: onClick, iconName: iconName, disabled: disabled, __nativeAttributes: {\n            'aria-expanded': ariaExpanded\n        } }));\n});\nexport var CloseButton = React.forwardRef(function (_a, ref) {\n    var className = _a.className, ariaLabel = _a.ariaLabel, onClick = _a.onClick, iconName = _a.iconName;\n    return (React.createElement(\"span\", { className: styles['close-button'] },\n        React.createElement(AppLayoutButton, { ref: ref, className: className, ariaLabel: ariaLabel, iconName: iconName, onClick: onClick })));\n});\n"]},"metadata":{},"sourceType":"module"}