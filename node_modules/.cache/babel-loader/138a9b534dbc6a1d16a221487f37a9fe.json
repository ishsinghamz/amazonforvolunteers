{"ast":null,"code":"import { useEffect, useMemo, useRef } from 'react';\nimport { findClosest, circleIndex, throttle } from './utils';\nimport { nodeContains } from '../../internal/utils/dom';\nimport { KeyCode } from '../../internal/keycode';\nimport { useReaction } from './async-store';\nimport computeChartProps from './compute-chart-props';\nimport createSeriesDecorator from './create-series-decorator';\nimport InteractionsStore from './interactions-store';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nvar MAX_HOVER_MARGIN = 6;\nvar SVG_HOVER_THROTTLE = 25;\nexport default function useChartModel(_a) {\n  var allSeries = _a.externalSeries,\n      series = _a.visibleSeries,\n      setVisibleSeries = _a.setVisibleSeries,\n      highlightedSeries = _a.highlightedSeries,\n      setHighlightedSeries = _a.setHighlightedSeries,\n      xDomain = _a.xDomain,\n      yDomain = _a.yDomain,\n      xScaleType = _a.xScaleType,\n      yScaleType = _a.yScaleType,\n      height = _a.height,\n      width = _a.width;\n  var plotRef = useRef(null);\n  var containerRef = useRef(null);\n  var verticalMarkerRef = useRef(null);\n  var stableSetVisibleSeries = useStableEventHandler(setVisibleSeries);\n  var model = useMemo(function () {\n    var computed = computeChartProps({\n      series: series,\n      xDomain: xDomain,\n      yDomain: yDomain,\n      xScaleType: xScaleType,\n      yScaleType: yScaleType,\n      height: height,\n      width: width\n    });\n    var interactions = new InteractionsStore(series, computed.plot);\n    var getInternalSeries = createSeriesDecorator(allSeries);\n    var onSVGMouseMoveThrottled = throttle(function (clientX, clientY) {\n      if (interactions.get().isPopoverPinned || !plotRef.current || interactions.plot.xy.length === 0) {\n        return;\n      }\n\n      var svgRect = plotRef.current.svg.getBoundingClientRect();\n      var offsetX = clientX - svgRect.left;\n      var offsetY = clientY - svgRect.top;\n      var closestX = findClosest(interactions.plot.xy, offsetX, function (xPoints) {\n        return xPoints[0].scaled.x;\n      });\n      var closestPoint = findClosest(closestX, offsetY, function (point) {\n        return point.scaled.y1;\n      });\n\n      if (Math.abs(offsetX - closestPoint.scaled.x) < MAX_HOVER_MARGIN && Math.abs(offsetY - closestPoint.scaled.y1) < MAX_HOVER_MARGIN) {\n        interactions.highlightPoint(closestPoint);\n      } else {\n        interactions.highlightX(closestX);\n      }\n    }, SVG_HOVER_THROTTLE);\n\n    var onSVGMouseMove = function (_a) {\n      var clientX = _a.clientX,\n          clientY = _a.clientY;\n      return onSVGMouseMoveThrottled(clientX, clientY);\n    };\n\n    var onSVGMouseOut = function (event) {\n      onSVGMouseMoveThrottled.cancel();\n\n      if (interactions.get().isPopoverPinned) {\n        return;\n      }\n\n      if (!nodeContains(plotRef.current.svg, event.relatedTarget)) {\n        interactions.clearHighlight();\n      }\n    };\n\n    var onSVGMouseDown = function () {\n      interactions.togglePopoverPin();\n    };\n\n    var moveWithinSeries = function (direction) {\n      var point = interactions.get().highlightedPoint;\n\n      if (!point) {\n        return;\n      }\n\n      var sIndex = point.index.s;\n      var xIndex = circleIndex(point.index.x + direction, [0, interactions.plot.xs.length - 1]);\n      interactions.highlightPoint(interactions.plot.xs[xIndex][sIndex]);\n    };\n\n    var moveBetweenSeries = function (direction) {\n      var point = interactions.get().highlightedPoint;\n\n      if (!point) {\n        return;\n      }\n\n      var xIndex = point.index.x;\n      var yIndex = circleIndex(point.index.y + direction, [0, interactions.plot.xy[xIndex].length - 1]);\n      interactions.highlightPoint(interactions.plot.xy[xIndex][yIndex]);\n    };\n\n    var onSVGKeyDown = function (event) {\n      var keyCode = event.keyCode;\n\n      if (keyCode !== KeyCode.up && keyCode !== KeyCode.right && keyCode !== KeyCode.down && keyCode !== KeyCode.left && keyCode !== KeyCode.space && keyCode !== KeyCode.enter) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (interactions.get().isPopoverPinned) {\n        return;\n      }\n\n      if (keyCode === KeyCode.down || keyCode === KeyCode.up) {\n        moveBetweenSeries(keyCode === KeyCode.down ? -1 : 1);\n      } else if (keyCode === KeyCode.left || keyCode === KeyCode.right) {\n        moveWithinSeries(keyCode === KeyCode.right ? 1 : -1);\n      } else if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n        interactions.pinPopover();\n      }\n    };\n\n    var onSVGFocus = function (_event, trigger) {\n      if (trigger === 'keyboard') {\n        interactions.highlightFirstPoint();\n      }\n    };\n\n    var onSVGBlur = function () {\n      if (!interactions.get().isPopoverPinned) {\n        interactions.clearHighlight();\n      }\n    };\n\n    var onFilterSeries = function (series) {\n      stableSetVisibleSeries(series);\n    };\n\n    var onLegendHighlight = function (series) {\n      interactions.highlightSeries(series);\n    };\n\n    var onPopoverDismiss = function (outsideClick) {\n      interactions.unpinPopover();\n\n      if (!outsideClick) {\n        setTimeout(function () {\n          if (interactions.get().highlightedPoint) {\n            plotRef.current.focusApplication();\n          } else {\n            interactions.clearHighlight();\n            plotRef.current.focusPlot();\n          }\n        }, 0);\n      }\n    };\n\n    var onContainerBlur = function () {\n      interactions.clearState();\n    };\n\n    return {\n      width: width,\n      height: height,\n      series: series,\n      allSeries: allSeries,\n      getInternalSeries: getInternalSeries,\n      computed: computed,\n      interactions: interactions,\n      handlers: {\n        onSVGMouseMove: onSVGMouseMove,\n        onSVGMouseOut: onSVGMouseOut,\n        onSVGMouseDown: onSVGMouseDown,\n        onSVGKeyDown: onSVGKeyDown,\n        onSVGFocus: onSVGFocus,\n        onSVGBlur: onSVGBlur,\n        onFilterSeries: onFilterSeries,\n        onLegendHighlight: onLegendHighlight,\n        onPopoverDismiss: onPopoverDismiss,\n        onContainerBlur: onContainerBlur\n      },\n      refs: {\n        plot: plotRef,\n        container: containerRef,\n        verticalMarker: verticalMarkerRef\n      }\n    };\n  }, [allSeries, series, xDomain, yDomain, xScaleType, yScaleType, height, width, stableSetVisibleSeries]);\n  useReaction(model.interactions, function (state) {\n    return state.highlightedSeries;\n  }, setHighlightedSeries);\n  useEffect(function () {\n    if (highlightedSeries !== model.interactions.get().highlightedSeries) {\n      model.interactions.highlightSeries(highlightedSeries);\n    }\n  }, [model, highlightedSeries]);\n  return model;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/area-chart/model/use-chart-model.js"],"names":["useEffect","useMemo","useRef","findClosest","circleIndex","throttle","nodeContains","KeyCode","useReaction","computeChartProps","createSeriesDecorator","InteractionsStore","useStableEventHandler","MAX_HOVER_MARGIN","SVG_HOVER_THROTTLE","useChartModel","_a","allSeries","externalSeries","series","visibleSeries","setVisibleSeries","highlightedSeries","setHighlightedSeries","xDomain","yDomain","xScaleType","yScaleType","height","width","plotRef","containerRef","verticalMarkerRef","stableSetVisibleSeries","model","computed","interactions","plot","getInternalSeries","onSVGMouseMoveThrottled","clientX","clientY","get","isPopoverPinned","current","xy","length","svgRect","svg","getBoundingClientRect","offsetX","left","offsetY","top","closestX","xPoints","scaled","x","closestPoint","point","y1","Math","abs","highlightPoint","highlightX","onSVGMouseMove","onSVGMouseOut","event","cancel","relatedTarget","clearHighlight","onSVGMouseDown","togglePopoverPin","moveWithinSeries","direction","highlightedPoint","sIndex","index","s","xIndex","xs","moveBetweenSeries","yIndex","y","onSVGKeyDown","keyCode","up","right","down","space","enter","preventDefault","pinPopover","onSVGFocus","_event","trigger","highlightFirstPoint","onSVGBlur","onFilterSeries","onLegendHighlight","highlightSeries","onPopoverDismiss","outsideClick","unpinPopover","setTimeout","focusApplication","focusPlot","onContainerBlur","clearState","handlers","refs","container","verticalMarker","state"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useRef } from 'react';\nimport { findClosest, circleIndex, throttle } from './utils';\nimport { nodeContains } from '../../internal/utils/dom';\nimport { KeyCode } from '../../internal/keycode';\nimport { useReaction } from './async-store';\nimport computeChartProps from './compute-chart-props';\nimport createSeriesDecorator from './create-series-decorator';\nimport InteractionsStore from './interactions-store';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nvar MAX_HOVER_MARGIN = 6;\nvar SVG_HOVER_THROTTLE = 25;\nexport default function useChartModel(_a) {\n    var allSeries = _a.externalSeries, series = _a.visibleSeries, setVisibleSeries = _a.setVisibleSeries, highlightedSeries = _a.highlightedSeries, setHighlightedSeries = _a.setHighlightedSeries, xDomain = _a.xDomain, yDomain = _a.yDomain, xScaleType = _a.xScaleType, yScaleType = _a.yScaleType, height = _a.height, width = _a.width;\n    var plotRef = useRef(null);\n    var containerRef = useRef(null);\n    var verticalMarkerRef = useRef(null);\n    var stableSetVisibleSeries = useStableEventHandler(setVisibleSeries);\n    var model = useMemo(function () {\n        var computed = computeChartProps({\n            series: series,\n            xDomain: xDomain,\n            yDomain: yDomain,\n            xScaleType: xScaleType,\n            yScaleType: yScaleType,\n            height: height,\n            width: width\n        });\n        var interactions = new InteractionsStore(series, computed.plot);\n        var getInternalSeries = createSeriesDecorator(allSeries);\n        var onSVGMouseMoveThrottled = throttle(function (clientX, clientY) {\n            if (interactions.get().isPopoverPinned || !plotRef.current || interactions.plot.xy.length === 0) {\n                return;\n            }\n            var svgRect = plotRef.current.svg.getBoundingClientRect();\n            var offsetX = clientX - svgRect.left;\n            var offsetY = clientY - svgRect.top;\n            var closestX = findClosest(interactions.plot.xy, offsetX, function (xPoints) { return xPoints[0].scaled.x; });\n            var closestPoint = findClosest(closestX, offsetY, function (point) { return point.scaled.y1; });\n            if (Math.abs(offsetX - closestPoint.scaled.x) < MAX_HOVER_MARGIN &&\n                Math.abs(offsetY - closestPoint.scaled.y1) < MAX_HOVER_MARGIN) {\n                interactions.highlightPoint(closestPoint);\n            }\n            else {\n                interactions.highlightX(closestX);\n            }\n        }, SVG_HOVER_THROTTLE);\n        var onSVGMouseMove = function (_a) {\n            var clientX = _a.clientX, clientY = _a.clientY;\n            return onSVGMouseMoveThrottled(clientX, clientY);\n        };\n        var onSVGMouseOut = function (event) {\n            onSVGMouseMoveThrottled.cancel();\n            if (interactions.get().isPopoverPinned) {\n                return;\n            }\n            if (!nodeContains(plotRef.current.svg, event.relatedTarget)) {\n                interactions.clearHighlight();\n            }\n        };\n        var onSVGMouseDown = function () {\n            interactions.togglePopoverPin();\n        };\n        var moveWithinSeries = function (direction) {\n            var point = interactions.get().highlightedPoint;\n            if (!point) {\n                return;\n            }\n            var sIndex = point.index.s;\n            var xIndex = circleIndex(point.index.x + direction, [0, interactions.plot.xs.length - 1]);\n            interactions.highlightPoint(interactions.plot.xs[xIndex][sIndex]);\n        };\n        var moveBetweenSeries = function (direction) {\n            var point = interactions.get().highlightedPoint;\n            if (!point) {\n                return;\n            }\n            var xIndex = point.index.x;\n            var yIndex = circleIndex(point.index.y + direction, [0, interactions.plot.xy[xIndex].length - 1]);\n            interactions.highlightPoint(interactions.plot.xy[xIndex][yIndex]);\n        };\n        var onSVGKeyDown = function (event) {\n            var keyCode = event.keyCode;\n            if (keyCode !== KeyCode.up &&\n                keyCode !== KeyCode.right &&\n                keyCode !== KeyCode.down &&\n                keyCode !== KeyCode.left &&\n                keyCode !== KeyCode.space &&\n                keyCode !== KeyCode.enter) {\n                return;\n            }\n            event.preventDefault();\n            if (interactions.get().isPopoverPinned) {\n                return;\n            }\n            if (keyCode === KeyCode.down || keyCode === KeyCode.up) {\n                moveBetweenSeries(keyCode === KeyCode.down ? -1 : 1);\n            }\n            else if (keyCode === KeyCode.left || keyCode === KeyCode.right) {\n                moveWithinSeries(keyCode === KeyCode.right ? 1 : -1);\n            }\n            else if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n                interactions.pinPopover();\n            }\n        };\n        var onSVGFocus = function (_event, trigger) {\n            if (trigger === 'keyboard') {\n                interactions.highlightFirstPoint();\n            }\n        };\n        var onSVGBlur = function () {\n            if (!interactions.get().isPopoverPinned) {\n                interactions.clearHighlight();\n            }\n        };\n        var onFilterSeries = function (series) {\n            stableSetVisibleSeries(series);\n        };\n        var onLegendHighlight = function (series) {\n            interactions.highlightSeries(series);\n        };\n        var onPopoverDismiss = function (outsideClick) {\n            interactions.unpinPopover();\n            if (!outsideClick) {\n                setTimeout(function () {\n                    if (interactions.get().highlightedPoint) {\n                        plotRef.current.focusApplication();\n                    }\n                    else {\n                        interactions.clearHighlight();\n                        plotRef.current.focusPlot();\n                    }\n                }, 0);\n            }\n        };\n        var onContainerBlur = function () {\n            interactions.clearState();\n        };\n        return {\n            width: width,\n            height: height,\n            series: series,\n            allSeries: allSeries,\n            getInternalSeries: getInternalSeries,\n            computed: computed,\n            interactions: interactions,\n            handlers: {\n                onSVGMouseMove: onSVGMouseMove,\n                onSVGMouseOut: onSVGMouseOut,\n                onSVGMouseDown: onSVGMouseDown,\n                onSVGKeyDown: onSVGKeyDown,\n                onSVGFocus: onSVGFocus,\n                onSVGBlur: onSVGBlur,\n                onFilterSeries: onFilterSeries,\n                onLegendHighlight: onLegendHighlight,\n                onPopoverDismiss: onPopoverDismiss,\n                onContainerBlur: onContainerBlur\n            },\n            refs: {\n                plot: plotRef,\n                container: containerRef,\n                verticalMarker: verticalMarkerRef\n            }\n        };\n    }, [allSeries, series, xDomain, yDomain, xScaleType, yScaleType, height, width, stableSetVisibleSeries]);\n    useReaction(model.interactions, function (state) { return state.highlightedSeries; }, setHighlightedSeries);\n    useEffect(function () {\n        if (highlightedSeries !== model.interactions.get().highlightedSeries) {\n            model.interactions.highlightSeries(highlightedSeries);\n        }\n    }, [model, highlightedSeries]);\n    return model;\n}\n"]},"metadata":{},"sourceType":"module"}