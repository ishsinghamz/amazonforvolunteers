{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport InternalCheckbox from '../../checkbox/internal';\nimport RadioButton from '../../radio-group/radio-button';\nimport styles from './styles.css.js';\nexport default function SelectionControl(_a) {\n  var selectionType = _a.selectionType,\n      _b = _a.indeterminate,\n      indeterminate = _b === void 0 ? false : _b,\n      className = _a.className,\n      onShiftToggle = _a.onShiftToggle,\n      onFocusUp = _a.onFocusUp,\n      onFocusDown = _a.onFocusDown,\n      name = _a.name,\n      scope = _a.scope,\n      ariaLabel = _a.ariaLabel,\n      _c = _a.rootTag,\n      RootTag = _c === void 0 ? 'td' : _c,\n      sharedProps = __rest(_a, [\"selectionType\", \"indeterminate\", \"className\", \"onShiftToggle\", \"onFocusUp\", \"onFocusDown\", \"name\", \"scope\", \"ariaLabel\", \"rootTag\"]);\n\n  var controlId = useUniqueId();\n  var isMultiSelection = selectionType === 'multi';\n\n  var setShiftState = function (event) {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n\n  var onMouseDownHandler = function (event) {\n    setShiftState(event);\n\n    if (isMultiSelection) {\n      event.preventDefault();\n    }\n  };\n\n  var handleKeyDown = function (event) {\n    setShiftState(event);\n\n    if (isMultiSelection) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n\n  var handleClick = function (event) {\n    var target = event.currentTarget;\n    var nativeInput = target.tagName === 'INPUT' ? target : target.querySelector('input');\n    nativeInput === null || nativeInput === void 0 ? void 0 : nativeInput.focus();\n  };\n\n  var selector = isMultiSelection ? React.createElement(InternalCheckbox, __assign({}, sharedProps, {\n    controlId: controlId,\n    withoutLabel: true,\n    indeterminate: indeterminate\n  })) : React.createElement(RadioButton, __assign({}, sharedProps, {\n    controlId: controlId,\n    withoutLabel: true,\n    name: name,\n    value: '',\n    label: ''\n  }));\n  return React.createElement(RootTag, {\n    className: clsx(styles.root, className),\n    onKeyDown: handleKeyDown,\n    onKeyUp: setShiftState,\n    onMouseDown: onMouseDownHandler,\n    onMouseUp: setShiftState,\n    onClick: handleClick,\n    scope: scope\n  }, React.createElement(\"label\", {\n    htmlFor: controlId,\n    className: styles.label,\n    \"aria-label\": ariaLabel\n  }, selector), React.createElement(\"span\", {\n    className: clsx(styles.stud),\n    \"aria-hidden\": true\n  }, \"\\u00A0\"));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/table/selection-control/index.js"],"names":["__assign","__rest","clsx","React","KeyCode","useUniqueId","InternalCheckbox","RadioButton","styles","SelectionControl","_a","selectionType","_b","indeterminate","className","onShiftToggle","onFocusUp","onFocusDown","name","scope","ariaLabel","_c","rootTag","RootTag","sharedProps","controlId","isMultiSelection","setShiftState","event","shiftKey","onMouseDownHandler","preventDefault","handleKeyDown","keyCode","up","down","handleClick","target","currentTarget","nativeInput","tagName","querySelector","focus","selector","createElement","withoutLabel","value","label","root","onKeyDown","onKeyUp","onMouseDown","onMouseUp","onClick","htmlFor","stud"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport InternalCheckbox from '../../checkbox/internal';\nimport RadioButton from '../../radio-group/radio-button';\nimport styles from './styles.css.js';\nexport default function SelectionControl(_a) {\n    var selectionType = _a.selectionType, _b = _a.indeterminate, indeterminate = _b === void 0 ? false : _b, className = _a.className, onShiftToggle = _a.onShiftToggle, onFocusUp = _a.onFocusUp, onFocusDown = _a.onFocusDown, name = _a.name, scope = _a.scope, ariaLabel = _a.ariaLabel, _c = _a.rootTag, RootTag = _c === void 0 ? 'td' : _c, sharedProps = __rest(_a, [\"selectionType\", \"indeterminate\", \"className\", \"onShiftToggle\", \"onFocusUp\", \"onFocusDown\", \"name\", \"scope\", \"ariaLabel\", \"rootTag\"]);\n    var controlId = useUniqueId();\n    var isMultiSelection = selectionType === 'multi';\n    var setShiftState = function (event) {\n        if (isMultiSelection) {\n            onShiftToggle && onShiftToggle(event.shiftKey);\n        }\n    };\n    var onMouseDownHandler = function (event) {\n        setShiftState(event);\n        if (isMultiSelection) {\n            event.preventDefault();\n        }\n    };\n    var handleKeyDown = function (event) {\n        setShiftState(event);\n        if (isMultiSelection) {\n            if (event.keyCode === KeyCode.up) {\n                event.preventDefault();\n                onFocusUp && onFocusUp(event);\n            }\n            if (event.keyCode === KeyCode.down) {\n                event.preventDefault();\n                onFocusDown && onFocusDown(event);\n            }\n        }\n    };\n    var handleClick = function (event) {\n        var target = event.currentTarget;\n        var nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input'));\n        nativeInput === null || nativeInput === void 0 ? void 0 : nativeInput.focus();\n    };\n    var selector = isMultiSelection ? (React.createElement(InternalCheckbox, __assign({}, sharedProps, { controlId: controlId, withoutLabel: true, indeterminate: indeterminate }))) : (React.createElement(RadioButton, __assign({}, sharedProps, { controlId: controlId, withoutLabel: true, name: name, value: '', label: '' })));\n    return (React.createElement(RootTag, { className: clsx(styles.root, className), onKeyDown: handleKeyDown, onKeyUp: setShiftState, onMouseDown: onMouseDownHandler, onMouseUp: setShiftState, onClick: handleClick, scope: scope },\n        React.createElement(\"label\", { htmlFor: controlId, className: styles.label, \"aria-label\": ariaLabel }, selector),\n        React.createElement(\"span\", { className: clsx(styles.stud), \"aria-hidden\": true }, \"\\u00A0\")));\n}\n"]},"metadata":{},"sourceType":"module"}