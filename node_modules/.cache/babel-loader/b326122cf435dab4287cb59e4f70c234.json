{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireKeyboardEvent, fireNonCancelableEvent } from '../internal/events';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { convertAutoComplete } from '../input/utils';\nvar Textarea = React.forwardRef(function (_a, ref) {\n  var _b;\n\n  var value = _a.value,\n      _c = _a.autoComplete,\n      autoComplete = _c === void 0 ? true : _c,\n      disabled = _a.disabled,\n      readOnly = _a.readOnly,\n      disableBrowserAutocorrect = _a.disableBrowserAutocorrect,\n      disableBrowserSpellcheck = _a.disableBrowserSpellcheck,\n      onKeyDown = _a.onKeyDown,\n      onKeyUp = _a.onKeyUp,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      ariaRequired = _a.ariaRequired,\n      name = _a.name,\n      rows = _a.rows,\n      placeholder = _a.placeholder,\n      autoFocus = _a.autoFocus,\n      ariaLabel = _a.ariaLabel,\n      rest = __rest(_a, [\"value\", \"autoComplete\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"disableBrowserSpellcheck\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"rows\", \"placeholder\", \"autoFocus\", \"ariaLabel\"]);\n\n  var __internalRootRef = useBaseComponent('Textarea').__internalRootRef;\n\n  var _d = useFormFieldContext(rest),\n      ariaLabelledby = _d.ariaLabelledby,\n      ariaDescribedby = _d.ariaDescribedby,\n      controlId = _d.controlId,\n      invalid = _d.invalid;\n\n  var baseProps = getBaseProps(rest);\n  var textareaRef = useRef(null);\n  useForwardFocus(ref, textareaRef);\n  var attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-required': ariaRequired ? 'true' : undefined,\n    'aria-invalid': invalid ? 'true' : undefined,\n    name: name,\n    placeholder: placeholder,\n    autoFocus: autoFocus,\n    className: clsx(styles.textarea, (_b = {}, _b[styles['textarea-readonly']] = readOnly, _b[styles['textarea-invalid']] = invalid, _b)),\n    autoComplete: convertAutoComplete(autoComplete),\n    disabled: disabled,\n    readOnly: readOnly ? true : undefined,\n    rows: rows || 3,\n    onKeyDown: onKeyDown && function (event) {\n      return fireKeyboardEvent(onKeyDown, event);\n    },\n    onKeyUp: onKeyUp && function (event) {\n      return fireKeyboardEvent(onKeyUp, event);\n    },\n    value: value || '',\n    onChange: onChange && function (event) {\n      return fireNonCancelableEvent(onChange, {\n        value: event.target.value\n      });\n    },\n    onBlur: onBlur && function () {\n      return fireNonCancelableEvent(onBlur);\n    },\n    onFocus: onFocus && function () {\n      return fireNonCancelableEvent(onFocus);\n    }\n  };\n\n  if (disableBrowserAutocorrect) {\n    attributes.autoCorrect = 'off';\n    attributes.autoCapitalize = 'off';\n  }\n\n  if (disableBrowserSpellcheck) {\n    attributes.spellCheck = 'false';\n  }\n\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    ref: __internalRootRef\n  }), React.createElement(\"textarea\", __assign({\n    ref: textareaRef,\n    id: controlId\n  }, attributes)));\n});\napplyDisplayName(Textarea, 'Textarea');\nexport default Textarea;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/textarea/index.js"],"names":["__assign","__rest","React","useRef","getBaseProps","fireKeyboardEvent","fireNonCancelableEvent","useFormFieldContext","useForwardFocus","clsx","styles","applyDisplayName","useBaseComponent","convertAutoComplete","Textarea","forwardRef","_a","ref","_b","value","_c","autoComplete","disabled","readOnly","disableBrowserAutocorrect","disableBrowserSpellcheck","onKeyDown","onKeyUp","onChange","onBlur","onFocus","ariaRequired","name","rows","placeholder","autoFocus","ariaLabel","rest","__internalRootRef","_d","ariaLabelledby","ariaDescribedby","controlId","invalid","baseProps","textareaRef","attributes","undefined","className","textarea","event","target","autoCorrect","autoCapitalize","spellCheck","createElement","root","id"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireKeyboardEvent, fireNonCancelableEvent } from '../internal/events';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { convertAutoComplete } from '../input/utils';\nvar Textarea = React.forwardRef(function (_a, ref) {\n    var _b;\n    var value = _a.value, _c = _a.autoComplete, autoComplete = _c === void 0 ? true : _c, disabled = _a.disabled, readOnly = _a.readOnly, disableBrowserAutocorrect = _a.disableBrowserAutocorrect, disableBrowserSpellcheck = _a.disableBrowserSpellcheck, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onChange = _a.onChange, onBlur = _a.onBlur, onFocus = _a.onFocus, ariaRequired = _a.ariaRequired, name = _a.name, rows = _a.rows, placeholder = _a.placeholder, autoFocus = _a.autoFocus, ariaLabel = _a.ariaLabel, rest = __rest(_a, [\"value\", \"autoComplete\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"disableBrowserSpellcheck\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"rows\", \"placeholder\", \"autoFocus\", \"ariaLabel\"]);\n    var __internalRootRef = useBaseComponent('Textarea').__internalRootRef;\n    var _d = useFormFieldContext(rest), ariaLabelledby = _d.ariaLabelledby, ariaDescribedby = _d.ariaDescribedby, controlId = _d.controlId, invalid = _d.invalid;\n    var baseProps = getBaseProps(rest);\n    var textareaRef = useRef(null);\n    useForwardFocus(ref, textareaRef);\n    var attributes = {\n        'aria-label': ariaLabel,\n        'aria-labelledby': ariaLabelledby,\n        'aria-describedby': ariaDescribedby,\n        'aria-required': ariaRequired ? 'true' : undefined,\n        'aria-invalid': invalid ? 'true' : undefined,\n        name: name,\n        placeholder: placeholder,\n        autoFocus: autoFocus,\n        className: clsx(styles.textarea, (_b = {},\n            _b[styles['textarea-readonly']] = readOnly,\n            _b[styles['textarea-invalid']] = invalid,\n            _b)),\n        autoComplete: convertAutoComplete(autoComplete),\n        disabled: disabled,\n        readOnly: readOnly ? true : undefined,\n        rows: rows || 3,\n        onKeyDown: onKeyDown && (function (event) { return fireKeyboardEvent(onKeyDown, event); }),\n        onKeyUp: onKeyUp && (function (event) { return fireKeyboardEvent(onKeyUp, event); }),\n        value: value || '',\n        onChange: onChange && (function (event) { return fireNonCancelableEvent(onChange, { value: event.target.value }); }),\n        onBlur: onBlur && (function () { return fireNonCancelableEvent(onBlur); }),\n        onFocus: onFocus && (function () { return fireNonCancelableEvent(onFocus); })\n    };\n    if (disableBrowserAutocorrect) {\n        attributes.autoCorrect = 'off';\n        attributes.autoCapitalize = 'off';\n    }\n    if (disableBrowserSpellcheck) {\n        attributes.spellCheck = 'false';\n    }\n    return (React.createElement(\"span\", __assign({}, baseProps, { className: clsx(styles.root, baseProps.className), ref: __internalRootRef }),\n        React.createElement(\"textarea\", __assign({ ref: textareaRef, id: controlId }, attributes))));\n});\napplyDisplayName(Textarea, 'Textarea');\nexport default Textarea;\n"]},"metadata":{},"sourceType":"module"}