{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nexport function findIndex(array, condition) {\n  for (var i = 0; i < array.length; i++) {\n    if (condition(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction makeMemoizedArray(prev, next, isEqual) {\n  for (var i = 0; i < Math.max(prev.length, next.length); i++) {\n    if (i === next.length) {\n      return prev.slice(0, i);\n    }\n\n    if (i === prev.length) {\n      return __spreadArray(__spreadArray([], prev.slice(0, i), true), next.slice(i), true);\n    }\n\n    if (!isEqual(prev[i], next[i])) {\n      return __spreadArray(__spreadArray(__spreadArray([], prev.slice(0, i), true), [next[i]], false), makeMemoizedArray(prev.slice(i + 1), next.slice(i + 1), isEqual), true);\n    }\n  }\n\n  return prev;\n}\n\nexport function useMemoizedArray(array, isEqual) {\n  var ref = useRef(array);\n  var updated = makeMemoizedArray(ref.current, array, isEqual);\n  useEffect(function () {\n    ref.current = updated;\n  }, [updated]);\n  return updated;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/tag-editor/utils.js"],"names":["__spreadArray","useEffect","useRef","findIndex","array","condition","i","length","makeMemoizedArray","prev","next","isEqual","Math","max","slice","useMemoizedArray","ref","updated","current"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,SAA1B,EAAqC;AACxC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,QAAID,SAAS,CAACD,KAAK,CAACE,CAAD,CAAN,CAAb,EAAyB;AACrB,aAAOA,CAAP;AACH;AACJ;;AACD,SAAO,CAAC,CAAR;AACH;;AACD,SAASE,iBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,OAAvC,EAAgD;AAC5C,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,IAAI,CAACC,GAAL,CAASJ,IAAI,CAACF,MAAd,EAAsBG,IAAI,CAACH,MAA3B,CAApB,EAAwDD,CAAC,EAAzD,EAA6D;AACzD,QAAIA,CAAC,KAAKI,IAAI,CAACH,MAAf,EAAuB;AACnB,aAAOE,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcR,CAAd,CAAP;AACH;;AACD,QAAIA,CAAC,KAAKG,IAAI,CAACF,MAAf,EAAuB;AACnB,aAAOP,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKS,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcR,CAAd,CAAL,EAAuB,IAAvB,CAAd,EAA4CI,IAAI,CAACI,KAAL,CAAWR,CAAX,CAA5C,EAA2D,IAA3D,CAApB;AACH;;AACD,QAAI,CAACK,OAAO,CAACF,IAAI,CAACH,CAAD,CAAL,EAAUI,IAAI,CAACJ,CAAD,CAAd,CAAZ,EAAgC;AAC5B,aAAON,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKS,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcR,CAAd,CAAL,EAAuB,IAAvB,CAAd,EAA4C,CAACI,IAAI,CAACJ,CAAD,CAAL,CAA5C,EAAuD,KAAvD,CAAd,EAA6EE,iBAAiB,CAACC,IAAI,CAACK,KAAL,CAAWR,CAAC,GAAG,CAAf,CAAD,EAAoBI,IAAI,CAACI,KAAL,CAAWR,CAAC,GAAG,CAAf,CAApB,EAAuCK,OAAvC,CAA9F,EAA+I,IAA/I,CAApB;AACH;AACJ;;AACD,SAAOF,IAAP;AACH;;AACD,OAAO,SAASM,gBAAT,CAA0BX,KAA1B,EAAiCO,OAAjC,EAA0C;AAC7C,MAAIK,GAAG,GAAGd,MAAM,CAACE,KAAD,CAAhB;AACA,MAAIa,OAAO,GAAGT,iBAAiB,CAACQ,GAAG,CAACE,OAAL,EAAcd,KAAd,EAAqBO,OAArB,CAA/B;AACAV,EAAAA,SAAS,CAAC,YAAY;AAClBe,IAAAA,GAAG,CAACE,OAAJ,GAAcD,OAAd;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAGA,SAAOA,OAAP;AACH","sourcesContent":["import { __spreadArray } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nexport function findIndex(array, condition) {\n    for (var i = 0; i < array.length; i++) {\n        if (condition(array[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction makeMemoizedArray(prev, next, isEqual) {\n    for (var i = 0; i < Math.max(prev.length, next.length); i++) {\n        if (i === next.length) {\n            return prev.slice(0, i);\n        }\n        if (i === prev.length) {\n            return __spreadArray(__spreadArray([], prev.slice(0, i), true), next.slice(i), true);\n        }\n        if (!isEqual(prev[i], next[i])) {\n            return __spreadArray(__spreadArray(__spreadArray([], prev.slice(0, i), true), [next[i]], false), makeMemoizedArray(prev.slice(i + 1), next.slice(i + 1), isEqual), true);\n        }\n    }\n    return prev;\n}\nexport function useMemoizedArray(array, isEqual) {\n    var ref = useRef(array);\n    var updated = makeMemoizedArray(ref.current, array, isEqual);\n    useEffect(function () {\n        ref.current = updated;\n    }, [updated]);\n    return updated;\n}\n"]},"metadata":{},"sourceType":"module"}