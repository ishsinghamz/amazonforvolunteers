{"ast":null,"code":"import { THEME, PACKAGE_VERSION } from './environment';\nvar oneTimeMetrics = {};\n\nvar buildMetricHash = function (_a) {\n  var source = _a.source,\n      action = _a.action;\n  return [\"src\" + source, \"action\" + action].join('_');\n};\n\nvar getMajorVersion = function (versionString) {\n  var majorVersionMatch = versionString.match(/^(\\d+\\.\\d+)/);\n  return majorVersionMatch ? majorVersionMatch[1] : '';\n};\n\nvar formatMajorVersionForMetricDetail = function (version) {\n  return version.replace(/\\s/g, '');\n};\n\nvar formatVersionForMetricName = function (theme, version) {\n  return \"\" + theme.charAt(0) + getMajorVersion(version).replace('.', '');\n};\n\nvar buildMetricDetail = function (_a) {\n  var source = _a.source,\n      action = _a.action,\n      version = _a.version;\n  var metricOrigin = typeof AWSUI_METRIC_ORIGIN !== 'undefined' ? AWSUI_METRIC_ORIGIN : 'main';\n  var detailObject = {\n    o: metricOrigin,\n    s: source,\n    t: THEME,\n    a: action,\n    f: framework,\n    v: formatMajorVersionForMetricDetail(version)\n  };\n  return JSON.stringify(detailObject);\n};\n\nvar buildMetricName = function (_a) {\n  var source = _a.source,\n      version = _a.version;\n  return ['awsui', source, \"\" + formatVersionForMetricName(THEME, version)].join('_');\n};\n\nvar findAWSC = function (currentWindow) {\n  try {\n    if (typeof (currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC) === 'object') {\n      return currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC;\n    }\n\n    if (!currentWindow || currentWindow.parent === currentWindow) {\n      return undefined;\n    }\n\n    return findAWSC(currentWindow.parent);\n  } catch (ex) {\n    return undefined;\n  }\n};\n\nvar framework = 'react';\n\nfunction setFramework(fwk) {\n  framework = fwk;\n}\n\nexport var Metrics = {\n  initMetrics: function (fwk) {\n    setFramework(fwk);\n  },\n  sendMetric: function (metricName, value, detail) {\n    if (!metricName || !/^[a-zA-Z0-9_-]{1,32}$/.test(metricName)) {\n      console.error(\"Invalid metric name: \" + metricName);\n      return;\n    }\n\n    if (detail && detail.length > 200) {\n      console.error(\"Detail for metric \" + metricName + \" is too long: \" + detail);\n      return;\n    }\n\n    var AWSC = findAWSC(window);\n\n    if (typeof AWSC === 'object' && typeof AWSC.Clog === 'object' && typeof AWSC.Clog.log === 'function') {\n      AWSC.Clog.log(metricName, value, detail);\n    }\n  },\n  sendMetricObject: function (metric, value) {\n    this.sendMetric(buildMetricName(metric), value, buildMetricDetail(metric));\n  },\n  sendMetricObjectOnce: function (metric, value) {\n    var metricHash = buildMetricHash(metric);\n\n    if (!oneTimeMetrics[metricHash]) {\n      this.sendMetricObject(metric, value);\n      oneTimeMetrics[metricHash] = true;\n    }\n  },\n  sendMetricOnce: function (metricName, value, detail) {\n    if (!oneTimeMetrics[metricName]) {\n      this.sendMetric(metricName, value, detail);\n      oneTimeMetrics[metricName] = true;\n    }\n  },\n  logComponentLoaded: function () {\n    this.sendMetricObjectOnce({\n      source: 'components',\n      action: 'loaded',\n      version: PACKAGE_VERSION\n    }, 1);\n  },\n  logComponentUsed: function (componentName) {\n    this.sendMetricObjectOnce({\n      source: componentName,\n      action: 'used',\n      version: PACKAGE_VERSION\n    }, 1);\n  }\n};\nexport var MetricsTestHelper = {\n  resetOneTimeMetricsCache: function () {\n    for (var prop in oneTimeMetrics) {\n      delete oneTimeMetrics[prop];\n    }\n  },\n  formatMajorVersionForMetricDetail: formatMajorVersionForMetricDetail,\n  formatVersionForMetricName: formatVersionForMetricName\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/metrics.js"],"names":["THEME","PACKAGE_VERSION","oneTimeMetrics","buildMetricHash","_a","source","action","join","getMajorVersion","versionString","majorVersionMatch","match","formatMajorVersionForMetricDetail","version","replace","formatVersionForMetricName","theme","charAt","buildMetricDetail","metricOrigin","AWSUI_METRIC_ORIGIN","detailObject","o","s","t","a","f","framework","v","JSON","stringify","buildMetricName","findAWSC","currentWindow","AWSC","parent","undefined","ex","setFramework","fwk","Metrics","initMetrics","sendMetric","metricName","value","detail","test","console","error","length","window","Clog","log","sendMetricObject","metric","sendMetricObjectOnce","metricHash","sendMetricOnce","logComponentLoaded","logComponentUsed","componentName","MetricsTestHelper","resetOneTimeMetricsCache","prop"],"mappings":"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","sourcesContent":["import { THEME, PACKAGE_VERSION } from './environment';\nvar oneTimeMetrics = {};\nvar buildMetricHash = function (_a) {\n    var source = _a.source, action = _a.action;\n    return [\"src\" + source, \"action\" + action].join('_');\n};\nvar getMajorVersion = function (versionString) {\n    var majorVersionMatch = versionString.match(/^(\\d+\\.\\d+)/);\n    return majorVersionMatch ? majorVersionMatch[1] : '';\n};\nvar formatMajorVersionForMetricDetail = function (version) {\n    return version.replace(/\\s/g, '');\n};\nvar formatVersionForMetricName = function (theme, version) {\n    return \"\" + theme.charAt(0) + getMajorVersion(version).replace('.', '');\n};\nvar buildMetricDetail = function (_a) {\n    var source = _a.source, action = _a.action, version = _a.version;\n    var metricOrigin = typeof AWSUI_METRIC_ORIGIN !== 'undefined' ? AWSUI_METRIC_ORIGIN : 'main';\n    var detailObject = {\n        o: metricOrigin,\n        s: source,\n        t: THEME,\n        a: action,\n        f: framework,\n        v: formatMajorVersionForMetricDetail(version)\n    };\n    return JSON.stringify(detailObject);\n};\nvar buildMetricName = function (_a) {\n    var source = _a.source, version = _a.version;\n    return ['awsui', source, \"\" + formatVersionForMetricName(THEME, version)].join('_');\n};\nvar findAWSC = function (currentWindow) {\n    try {\n        if (typeof (currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC) === 'object') {\n            return currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC;\n        }\n        if (!currentWindow || currentWindow.parent === currentWindow) {\n            return undefined;\n        }\n        return findAWSC(currentWindow.parent);\n    }\n    catch (ex) {\n        return undefined;\n    }\n};\nvar framework = 'react';\nfunction setFramework(fwk) {\n    framework = fwk;\n}\nexport var Metrics = {\n    initMetrics: function (fwk) {\n        setFramework(fwk);\n    },\n    sendMetric: function (metricName, value, detail) {\n        if (!metricName || !/^[a-zA-Z0-9_-]{1,32}$/.test(metricName)) {\n            console.error(\"Invalid metric name: \" + metricName);\n            return;\n        }\n        if (detail && detail.length > 200) {\n            console.error(\"Detail for metric \" + metricName + \" is too long: \" + detail);\n            return;\n        }\n        var AWSC = findAWSC(window);\n        if (typeof AWSC === 'object' && typeof AWSC.Clog === 'object' && typeof AWSC.Clog.log === 'function') {\n            AWSC.Clog.log(metricName, value, detail);\n        }\n    },\n    sendMetricObject: function (metric, value) {\n        this.sendMetric(buildMetricName(metric), value, buildMetricDetail(metric));\n    },\n    sendMetricObjectOnce: function (metric, value) {\n        var metricHash = buildMetricHash(metric);\n        if (!oneTimeMetrics[metricHash]) {\n            this.sendMetricObject(metric, value);\n            oneTimeMetrics[metricHash] = true;\n        }\n    },\n    sendMetricOnce: function (metricName, value, detail) {\n        if (!oneTimeMetrics[metricName]) {\n            this.sendMetric(metricName, value, detail);\n            oneTimeMetrics[metricName] = true;\n        }\n    },\n    logComponentLoaded: function () {\n        this.sendMetricObjectOnce({\n            source: 'components',\n            action: 'loaded',\n            version: PACKAGE_VERSION\n        }, 1);\n    },\n    logComponentUsed: function (componentName) {\n        this.sendMetricObjectOnce({\n            source: componentName,\n            action: 'used',\n            version: PACKAGE_VERSION\n        }, 1);\n    }\n};\nexport var MetricsTestHelper = {\n    resetOneTimeMetricsCache: function () {\n        for (var prop in oneTimeMetrics) {\n            delete oneTimeMetrics[prop];\n        }\n    },\n    formatMajorVersionForMetricDetail: formatMajorVersionForMetricDetail,\n    formatVersionForMetricName: formatVersionForMetricName\n};\n"]},"metadata":{},"sourceType":"module"}