{"ast":null,"code":"import { useLayoutEffect, useCallback } from 'react';\nimport { useResizeObserver } from '../internal/hooks/container-queries/use-resize-observer';\nimport stickyScrolling, { calculateScrollingOffset, scrollUpBy } from './sticky-scrolling';\nimport { useMobile } from '../internal/hooks/use-mobile';\n\nfunction syncSizes(from, to) {\n  var fromCells = Array.prototype.slice.apply(from.children);\n  var toCells = Array.prototype.slice.apply(to.children);\n\n  for (var i = 0; i < fromCells.length; i++) {\n    var width = fromCells[i].style.width;\n\n    if (width !== 'auto') {\n      width = fromCells[i].offsetWidth + \"px\";\n    }\n\n    toCells[i].style.width = width;\n  }\n}\n\nexport var useStickyHeader = function (theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef) {\n  var isMobile = useMobile();\n  var getPrimaryThead = useCallback(function () {\n    return theadRef.current;\n  }, [theadRef]);\n  var syncColumnHeaderWidths = useCallback(function () {\n    if (theadRef.current && secondaryTheadRef.current && secondaryTableRef.current && tableWrapperRef.current) {\n      syncSizes(theadRef.current, secondaryTheadRef.current);\n      secondaryTableRef.current.style.width = theadRef.current.offsetWidth + \"px\";\n      tableWrapperRef.current.style.marginTop = \"-\" + theadRef.current.offsetHeight + \"px\";\n    }\n  }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef]);\n  useLayoutEffect(function () {\n    syncColumnHeaderWidths();\n    setTimeout(function () {\n      return syncColumnHeaderWidths();\n    }, 0);\n    var secondaryTable = secondaryTableRef.current;\n    var primaryTable = tableWrapperRef.current;\n    return function () {\n      if (secondaryTable) {\n        secondaryTable.style.width = '';\n      }\n\n      if (primaryTable) {\n        primaryTable.style.marginTop = '';\n      }\n    };\n  });\n  useResizeObserver(getPrimaryThead, syncColumnHeaderWidths);\n\n  var scrollToTop = function () {\n    if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {\n      var scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);\n\n      if (scrollDist > 0) {\n        scrollUpBy(scrollDist, tableWrapperRef.current);\n      }\n    }\n  };\n\n  var scrollToItem = stickyScrolling(tableWrapperRef, secondaryTheadRef).scrollToItem;\n\n  var scrollToRow = function (itemNode) {\n    if (!isMobile) {\n      scrollToItem(itemNode);\n    }\n  };\n\n  return {\n    scrollToRow: scrollToRow,\n    scrollToTop: scrollToTop\n  };\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/table/use-sticky-header.js"],"names":["useLayoutEffect","useCallback","useResizeObserver","stickyScrolling","calculateScrollingOffset","scrollUpBy","useMobile","syncSizes","from","to","fromCells","Array","prototype","slice","apply","children","toCells","i","length","width","style","offsetWidth","useStickyHeader","theadRef","secondaryTheadRef","secondaryTableRef","tableWrapperRef","isMobile","getPrimaryThead","current","syncColumnHeaderWidths","marginTop","offsetHeight","setTimeout","secondaryTable","primaryTable","scrollToTop","scrollDist","scrollToItem","scrollToRow","itemNode"],"mappings":"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","sourcesContent":["import { useLayoutEffect, useCallback } from 'react';\nimport { useResizeObserver } from '../internal/hooks/container-queries/use-resize-observer';\nimport stickyScrolling, { calculateScrollingOffset, scrollUpBy } from './sticky-scrolling';\nimport { useMobile } from '../internal/hooks/use-mobile';\nfunction syncSizes(from, to) {\n    var fromCells = Array.prototype.slice.apply(from.children);\n    var toCells = Array.prototype.slice.apply(to.children);\n    for (var i = 0; i < fromCells.length; i++) {\n        var width = fromCells[i].style.width;\n        if (width !== 'auto') {\n            width = fromCells[i].offsetWidth + \"px\";\n        }\n        toCells[i].style.width = width;\n    }\n}\nexport var useStickyHeader = function (theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef) {\n    var isMobile = useMobile();\n    var getPrimaryThead = useCallback(function () { return theadRef.current; }, [theadRef]);\n    var syncColumnHeaderWidths = useCallback(function () {\n        if (theadRef.current && secondaryTheadRef.current && secondaryTableRef.current && tableWrapperRef.current) {\n            syncSizes(theadRef.current, secondaryTheadRef.current);\n            secondaryTableRef.current.style.width = theadRef.current.offsetWidth + \"px\";\n            tableWrapperRef.current.style.marginTop = \"-\" + theadRef.current.offsetHeight + \"px\";\n        }\n    }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef]);\n    useLayoutEffect(function () {\n        syncColumnHeaderWidths();\n        setTimeout(function () { return syncColumnHeaderWidths(); }, 0);\n        var secondaryTable = secondaryTableRef.current;\n        var primaryTable = tableWrapperRef.current;\n        return function () {\n            if (secondaryTable) {\n                secondaryTable.style.width = '';\n            }\n            if (primaryTable) {\n                primaryTable.style.marginTop = '';\n            }\n        };\n    });\n    useResizeObserver(getPrimaryThead, syncColumnHeaderWidths);\n    var scrollToTop = function () {\n        if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {\n            var scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);\n            if (scrollDist > 0) {\n                scrollUpBy(scrollDist, tableWrapperRef.current);\n            }\n        }\n    };\n    var scrollToItem = stickyScrolling(tableWrapperRef, secondaryTheadRef).scrollToItem;\n    var scrollToRow = function (itemNode) {\n        if (!isMobile) {\n            scrollToItem(itemNode);\n        }\n    };\n    return { scrollToRow: scrollToRow, scrollToTop: scrollToTop };\n};\n"]},"metadata":{},"sourceType":"module"}