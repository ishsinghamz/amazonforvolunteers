{"ast":null,"code":"import React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes = /*#__PURE__*/new Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction useRect(nodeRef, initialRect) {\n  if (initialRect === void 0) {\n    initialRect = {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var _React$useState = React.useState(nodeRef.current),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var _React$useReducer = React.useReducer(rectReducer, initialRect),\n      rect = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var initialRectSet = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true;\n\n      var _rect = element.getBoundingClientRect();\n\n      dispatch({\n        rect: _rect\n      });\n    }\n  }, [element]);\n  React.useEffect(function () {\n    if (!element) {\n      return;\n    }\n\n    var observer = observeRect(element, function (rect) {\n      dispatch({\n        rect: rect\n      });\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [element]);\n  return rect;\n}\n\nfunction rectReducer(state, action) {\n  var rect = action.rect;\n\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect;\n  }\n\n  return state;\n}\n\nvar defaultEstimateSize = function defaultEstimateSize() {\n  return 50;\n};\n\nvar defaultKeyExtractor = function defaultKeyExtractor(index) {\n  return index;\n};\n\nvar defaultMeasureSize = function defaultMeasureSize(el, horizontal) {\n  var key = horizontal ? 'offsetWidth' : 'offsetHeight';\n  return el[key];\n};\n\nvar defaultRangeExtractor = function defaultRangeExtractor(range) {\n  var start = Math.max(range.start - range.overscan, 0);\n  var end = Math.min(range.end + range.overscan, range.size - 1);\n  var arr = [];\n\n  for (var i = start; i <= end; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nfunction useVirtual(_ref) {\n  var _measurements;\n\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 0 : _ref$size,\n      _ref$estimateSize = _ref.estimateSize,\n      estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize,\n      _ref$overscan = _ref.overscan,\n      overscan = _ref$overscan === void 0 ? 1 : _ref$overscan,\n      _ref$paddingStart = _ref.paddingStart,\n      paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart,\n      _ref$paddingEnd = _ref.paddingEnd,\n      paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd,\n      parentRef = _ref.parentRef,\n      horizontal = _ref.horizontal,\n      scrollToFn = _ref.scrollToFn,\n      useObserver = _ref.useObserver,\n      initialRect = _ref.initialRect,\n      onScrollElement = _ref.onScrollElement,\n      scrollOffsetFn = _ref.scrollOffsetFn,\n      _ref$keyExtractor = _ref.keyExtractor,\n      keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor,\n      _ref$measureSize = _ref.measureSize,\n      measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize,\n      _ref$rangeExtractor = _ref.rangeExtractor,\n      rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;\n  var sizeKey = horizontal ? 'width' : 'height';\n  var scrollKey = horizontal ? 'scrollLeft' : 'scrollTop';\n  var latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: []\n  });\n\n  var _React$useState = React.useState(0),\n      scrollOffset = _React$useState[0],\n      setScrollOffset = _React$useState[1];\n\n  latestRef.current.scrollOffset = scrollOffset;\n  var useMeasureParent = useObserver || useRect;\n\n  var _useMeasureParent = useMeasureParent(parentRef, initialRect),\n      outerSize = _useMeasureParent[sizeKey];\n\n  latestRef.current.outerSize = outerSize;\n  var defaultScrollToFn = React.useCallback(function (offset) {\n    if (parentRef.current) {\n      parentRef.current[scrollKey] = offset;\n    }\n  }, [parentRef, scrollKey]);\n  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;\n  scrollToFn = React.useCallback(function (offset) {\n    resolvedScrollToFn(offset, defaultScrollToFn);\n  }, [defaultScrollToFn, resolvedScrollToFn]);\n\n  var _React$useState2 = React.useState({}),\n      measuredCache = _React$useState2[0],\n      setMeasuredCache = _React$useState2[1];\n\n  var measure = React.useCallback(function () {\n    return setMeasuredCache({});\n  }, []);\n  var pendingMeasuredCacheIndexesRef = React.useRef([]);\n  var measurements = React.useMemo(function () {\n    var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;\n    pendingMeasuredCacheIndexesRef.current = [];\n    var measurements = latestRef.current.measurements.slice(0, min);\n\n    for (var i = min; i < size; i++) {\n      var key = keyExtractor(i);\n      var measuredSize = measuredCache[key];\n\n      var _start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n\n      var _size = typeof measuredSize === 'number' ? measuredSize : estimateSize(i);\n\n      var _end = _start + _size;\n\n      measurements[i] = {\n        index: i,\n        start: _start,\n        size: _size,\n        end: _end,\n        key: key\n      };\n    }\n\n    return measurements;\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);\n  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;\n  latestRef.current.measurements = measurements;\n  latestRef.current.totalSize = totalSize;\n  var element = onScrollElement ? onScrollElement.current : parentRef.current;\n  var scrollOffsetFnRef = React.useRef(scrollOffsetFn);\n  scrollOffsetFnRef.current = scrollOffsetFn;\n  useIsomorphicLayoutEffect(function () {\n    if (!element) {\n      setScrollOffset(0);\n      return;\n    }\n\n    var onScroll = function onScroll(event) {\n      var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];\n      setScrollOffset(offset);\n    };\n\n    onScroll();\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true\n    });\n    return function () {\n      element.removeEventListener('scroll', onScroll);\n    };\n  }, [element, scrollKey]);\n\n  var _calculateRange = calculateRange(latestRef.current),\n      start = _calculateRange.start,\n      end = _calculateRange.end;\n\n  var indexes = React.useMemo(function () {\n    return rangeExtractor({\n      start: start,\n      end: end,\n      overscan: overscan,\n      size: measurements.length\n    });\n  }, [start, end, overscan, measurements.length, rangeExtractor]);\n  var measureSizeRef = React.useRef(measureSize);\n  measureSizeRef.current = measureSize;\n  var virtualItems = React.useMemo(function () {\n    var virtualItems = [];\n\n    var _loop = function _loop(k, len) {\n      var i = indexes[k];\n      var measurement = measurements[i];\n\n      var item = _extends(_extends({}, measurement), {}, {\n        measureRef: function measureRef(el) {\n          if (el) {\n            var measuredSize = measureSizeRef.current(el, horizontal);\n\n            if (measuredSize !== item.size) {\n              var _scrollOffset = latestRef.current.scrollOffset;\n\n              if (item.start < _scrollOffset) {\n                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i);\n              setMeasuredCache(function (old) {\n                var _extends2;\n\n                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));\n              });\n            }\n          }\n        }\n      });\n\n      virtualItems.push(item);\n    };\n\n    for (var k = 0, len = indexes.length; k < len; k++) {\n      _loop(k);\n    }\n\n    return virtualItems;\n  }, [indexes, defaultScrollToFn, horizontal, measurements]);\n  var mountedRef = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (mountedRef.current) {\n      setMeasuredCache({});\n    }\n\n    mountedRef.current = true;\n  }, [estimateSize]);\n  var scrollToOffset = React.useCallback(function (toOffset, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$align = _ref2.align,\n        align = _ref2$align === void 0 ? 'start' : _ref2$align;\n\n    var _latestRef$current = latestRef.current,\n        scrollOffset = _latestRef$current.scrollOffset,\n        outerSize = _latestRef$current.outerSize;\n\n    if (align === 'auto') {\n      if (toOffset <= scrollOffset) {\n        align = 'start';\n      } else if (toOffset >= scrollOffset + outerSize) {\n        align = 'end';\n      } else {\n        align = 'start';\n      }\n    }\n\n    if (align === 'start') {\n      scrollToFn(toOffset);\n    } else if (align === 'end') {\n      scrollToFn(toOffset - outerSize);\n    } else if (align === 'center') {\n      scrollToFn(toOffset - outerSize / 2);\n    }\n  }, [scrollToFn]);\n  var tryScrollToIndex = React.useCallback(function (index, _temp2) {\n    var _ref3 = _temp2 === void 0 ? {} : _temp2,\n        _ref3$align = _ref3.align,\n        align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n        rest = _objectWithoutPropertiesLoose(_ref3, [\"align\"]);\n\n    var _latestRef$current2 = latestRef.current,\n        measurements = _latestRef$current2.measurements,\n        scrollOffset = _latestRef$current2.scrollOffset,\n        outerSize = _latestRef$current2.outerSize;\n    var measurement = measurements[Math.max(0, Math.min(index, size - 1))];\n\n    if (!measurement) {\n      return;\n    }\n\n    if (align === 'auto') {\n      if (measurement.end >= scrollOffset + outerSize) {\n        align = 'end';\n      } else if (measurement.start <= scrollOffset) {\n        align = 'start';\n      } else {\n        return;\n      }\n    }\n\n    var toOffset = align === 'center' ? measurement.start + measurement.size / 2 : align === 'end' ? measurement.end : measurement.start;\n    scrollToOffset(toOffset, _extends({\n      align: align\n    }, rest));\n  }, [scrollToOffset, size]);\n  var scrollToIndex = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // We do a double request here because of\n    // dynamic sizes which can cause offset shift\n    // and end up in the wrong spot. Unfortunately,\n    // we can't know about those dynamic sizes until\n    // we try and render them. So double down!\n\n\n    tryScrollToIndex.apply(void 0, args);\n    requestAnimationFrame(function () {\n      tryScrollToIndex.apply(void 0, args);\n    });\n  }, [tryScrollToIndex]);\n  return {\n    virtualItems: virtualItems,\n    totalSize: totalSize,\n    scrollToOffset: scrollToOffset,\n    scrollToIndex: scrollToIndex,\n    measure: measure\n  };\n}\n\nvar findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n  while (low <= high) {\n    var middle = (low + high) / 2 | 0;\n    var currentValue = getCurrentValue(middle);\n\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction calculateRange(_ref4) {\n  var measurements = _ref4.measurements,\n      outerSize = _ref4.outerSize,\n      scrollOffset = _ref4.scrollOffset;\n  var size = measurements.length - 1;\n\n  var getOffset = function getOffset(index) {\n    return measurements[index].start;\n  };\n\n  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);\n  var end = start;\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++;\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n\nexport { defaultRangeExtractor, useVirtual };","map":{"version":3,"mappings":"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","names":["props","rectChanged","a","b","some","prop","observedNodes","Map","run","changedStates","newRect","node","getBoundingClientRect","state","rect","rafId","window","observeRect","cb","observe","wasEmpty","undefined","hasRectChanged","callbacks","unobserve","index","length","size","cancelAnimationFrame","React","useLayoutEffect","useEffect","useRect","nodeRef","initialRect","width","height","useState","current","element","setElement","useReducer","rectReducer","dispatch","initialRectSet","useRef","useIsomorphicLayoutEffect","observer","action","defaultEstimateSize","defaultKeyExtractor","defaultMeasureSize","el","horizontal","key","defaultRangeExtractor","start","Math","max","range","overscan","end","min","arr","i","push","useVirtual","estimateSize","paddingStart","paddingEnd","parentRef","scrollToFn","useObserver","onScrollElement","scrollOffsetFn","keyExtractor","measureSize","rangeExtractor","sizeKey","scrollKey","latestRef","scrollOffset","measurements","setScrollOffset","useMeasureParent","outerSize","defaultScrollToFn","useCallback","offset","resolvedScrollToFn","measuredCache","setMeasuredCache","measure","pendingMeasuredCacheIndexesRef","useMemo","slice","measuredSize","totalSize","scrollOffsetFnRef","onScroll","event","addEventListener","capture","passive","removeEventListener","calculateRange","indexes","measureSizeRef","virtualItems","k","len","measurement","item","measureRef","old","_loop","mountedRef","scrollToOffset","toOffset","align","tryScrollToIndex","rest","scrollToIndex","args","arguments","requestAnimationFrame","findNearestBinarySearch","low","high","getCurrentValue","value","middle","currentValue","getOffset"],"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/react-virtual/node_modules/@reach/observe-rect/dist/observe-rect.esm.js","/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/react-virtual/src/useIsomorphicLayoutEffect.js","/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/react-virtual/src/useRect.js","/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/react-virtual/src/index.js"],"sourcesContent":["var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes =\n/*#__PURE__*/\nnew Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport default observeRect;\n//# sourceMappingURL=observe-rect.esm.js.map\n","import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","import React from 'react'\nimport observeRect from '@reach/observe-rect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useRect(\n  nodeRef,\n  initialRect = { width: 0, height: 0 }\n) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const [rect, dispatch] = React.useReducer(rectReducer, initialRect)\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      const rect = element.getBoundingClientRect()\n      dispatch({ rect })\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    const observer = observeRect(element, rect => {\n      dispatch({ rect })\n    })\n\n    observer.observe()\n\n    return () => {\n      observer.unobserve()\n    }\n  }, [element])\n\n  return rect\n}\n\nfunction rectReducer(state, action) {\n  const rect = action.rect\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect\n  }\n  return state\n}\n","import React from 'react'\nimport useRect from './useRect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst defaultEstimateSize = () => 50\n\nconst defaultKeyExtractor = index => index\n\nconst defaultMeasureSize = (el, horizontal) => {\n  const key = horizontal ? 'offsetWidth' : 'offsetHeight'\n\n  return el[key]\n}\n\nexport const defaultRangeExtractor = range => {\n  const start = Math.max(range.start - range.overscan, 0)\n  const end = Math.min(range.end + range.overscan, range.size - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport function useVirtual({\n  size = 0,\n  estimateSize = defaultEstimateSize,\n  overscan = 1,\n  paddingStart = 0,\n  paddingEnd = 0,\n  parentRef,\n  horizontal,\n  scrollToFn,\n  useObserver,\n  initialRect,\n  onScrollElement,\n  scrollOffsetFn,\n  keyExtractor = defaultKeyExtractor,\n  measureSize = defaultMeasureSize,\n  rangeExtractor = defaultRangeExtractor,\n}) {\n  const sizeKey = horizontal ? 'width' : 'height'\n  const scrollKey = horizontal ? 'scrollLeft' : 'scrollTop'\n\n  const latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: [],\n  })\n\n  const [scrollOffset, setScrollOffset] = React.useState(0)\n  latestRef.current.scrollOffset = scrollOffset\n\n  const useMeasureParent = useObserver || useRect\n\n  const { [sizeKey]: outerSize } = useMeasureParent(parentRef, initialRect)\n\n  latestRef.current.outerSize = outerSize\n\n  const defaultScrollToFn = React.useCallback(\n    offset => {\n      if (parentRef.current) {\n        parentRef.current[scrollKey] = offset\n      }\n    },\n    [parentRef, scrollKey]\n  )\n\n  const resolvedScrollToFn = scrollToFn || defaultScrollToFn\n\n  scrollToFn = React.useCallback(\n    offset => {\n      resolvedScrollToFn(offset, defaultScrollToFn)\n    },\n    [defaultScrollToFn, resolvedScrollToFn]\n  )\n\n  const [measuredCache, setMeasuredCache] = React.useState({})\n\n  const measure = React.useCallback(() => setMeasuredCache({}), [])\n\n  const pendingMeasuredCacheIndexesRef = React.useRef([])\n\n  const measurements = React.useMemo(() => {\n    const min =\n      pendingMeasuredCacheIndexesRef.current.length > 0\n        ? Math.min(...pendingMeasuredCacheIndexesRef.current)\n        : 0\n    pendingMeasuredCacheIndexesRef.current = []\n\n    const measurements = latestRef.current.measurements.slice(0, min)\n\n    for (let i = min; i < size; i++) {\n      const key = keyExtractor(i)\n      const measuredSize = measuredCache[key]\n      const start = measurements[i - 1] ? measurements[i - 1].end : paddingStart\n      const size =\n        typeof measuredSize === 'number' ? measuredSize : estimateSize(i)\n      const end = start + size\n      measurements[i] = { index: i, start, size, end, key }\n    }\n    return measurements\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor])\n\n  const totalSize = (measurements[size - 1]?.end || paddingStart) + paddingEnd\n\n  latestRef.current.measurements = measurements\n  latestRef.current.totalSize = totalSize\n\n  const element = onScrollElement ? onScrollElement.current : parentRef.current\n\n  const scrollOffsetFnRef = React.useRef(scrollOffsetFn)\n  scrollOffsetFnRef.current = scrollOffsetFn\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      setScrollOffset(0)\n\n      return\n    }\n\n    const onScroll = event => {\n      const offset = scrollOffsetFnRef.current\n        ? scrollOffsetFnRef.current(event)\n        : element[scrollKey]\n\n      setScrollOffset(offset)\n    }\n\n    onScroll()\n\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      element.removeEventListener('scroll', onScroll)\n    }\n  }, [element, scrollKey])\n\n  const { start, end } = calculateRange(latestRef.current)\n\n  const indexes = React.useMemo(\n    () =>\n      rangeExtractor({\n        start,\n        end,\n        overscan,\n        size: measurements.length,\n      }),\n    [start, end, overscan, measurements.length, rangeExtractor]\n  )\n\n  const measureSizeRef = React.useRef(measureSize)\n  measureSizeRef.current = measureSize\n\n  const virtualItems = React.useMemo(() => {\n    const virtualItems = []\n\n    for (let k = 0, len = indexes.length; k < len; k++) {\n      const i = indexes[k]\n      const measurement = measurements[i]\n\n      const item = {\n        ...measurement,\n        measureRef: el => {\n          if (el) {\n            const measuredSize = measureSizeRef.current(el, horizontal)\n\n            if (measuredSize !== item.size) {\n              const { scrollOffset } = latestRef.current\n\n              if (item.start < scrollOffset) {\n                defaultScrollToFn(scrollOffset + (measuredSize - item.size))\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i)\n\n              setMeasuredCache(old => ({\n                ...old,\n                [item.key]: measuredSize,\n              }))\n            }\n          }\n        },\n      }\n\n      virtualItems.push(item)\n    }\n\n    return virtualItems\n  }, [indexes, defaultScrollToFn, horizontal, measurements])\n\n  const mountedRef = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (mountedRef.current) {\n      setMeasuredCache({})\n    }\n    mountedRef.current = true\n  }, [estimateSize])\n\n  const scrollToOffset = React.useCallback(\n    (toOffset, { align = 'start' } = {}) => {\n      const { scrollOffset, outerSize } = latestRef.current\n\n      if (align === 'auto') {\n        if (toOffset <= scrollOffset) {\n          align = 'start'\n        } else if (toOffset >= scrollOffset + outerSize) {\n          align = 'end'\n        } else {\n          align = 'start'\n        }\n      }\n\n      if (align === 'start') {\n        scrollToFn(toOffset)\n      } else if (align === 'end') {\n        scrollToFn(toOffset - outerSize)\n      } else if (align === 'center') {\n        scrollToFn(toOffset - outerSize / 2)\n      }\n    },\n    [scrollToFn]\n  )\n\n  const tryScrollToIndex = React.useCallback(\n    (index, { align = 'auto', ...rest } = {}) => {\n      const { measurements, scrollOffset, outerSize } = latestRef.current\n\n      const measurement = measurements[Math.max(0, Math.min(index, size - 1))]\n\n      if (!measurement) {\n        return\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffset + outerSize) {\n          align = 'end'\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start'\n        } else {\n          return\n        }\n      }\n\n      const toOffset =\n        align === 'center'\n          ? measurement.start + measurement.size / 2\n          : align === 'end'\n          ? measurement.end\n          : measurement.start\n\n      scrollToOffset(toOffset, { align, ...rest })\n    },\n    [scrollToOffset, size]\n  )\n\n  const scrollToIndex = React.useCallback(\n    (...args) => {\n      // We do a double request here because of\n      // dynamic sizes which can cause offset shift\n      // and end up in the wrong spot. Unfortunately,\n      // we can't know about those dynamic sizes until\n      // we try and render them. So double down!\n      tryScrollToIndex(...args)\n      requestAnimationFrame(() => {\n        tryScrollToIndex(...args)\n      })\n    },\n    [tryScrollToIndex]\n  )\n\n  return {\n    virtualItems,\n    totalSize,\n    scrollToOffset,\n    scrollToIndex,\n    measure,\n  }\n}\n\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    let middle = ((low + high) / 2) | 0\n    let currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({ measurements, outerSize, scrollOffset }) {\n  const size = measurements.length - 1\n  const getOffset = index => measurements[index].start\n\n  let start = findNearestBinarySearch(0, size, getOffset, scrollOffset)\n  let end = start\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++\n  }\n\n  return { start, end }\n}\n"]},"metadata":{},"sourceType":"module"}