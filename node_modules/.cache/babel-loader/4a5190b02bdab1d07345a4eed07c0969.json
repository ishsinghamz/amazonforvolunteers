{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport MobileExpandableGroup from '../mobile-expandable-group/mobile-expandable-group';\nimport Tooltip from '../tooltip.js';\nimport useHiddenDescription from '../utils/use-hidden-description.js';\nimport { getMenuItemProps } from '../utils/menu-item.js';\n\nvar MobileExpandableCategoryElement = function (_a) {\n  var _b, _c, _d;\n\n  var item = _a.item,\n      onItemActivate = _a.onItemActivate,\n      onGroupToggle = _a.onGroupToggle,\n      targetItem = _a.targetItem,\n      isHighlighted = _a.isHighlighted,\n      isExpanded = _a.isExpanded,\n      highlightItem = _a.highlightItem,\n      disabled = _a.disabled,\n      variant = _a.variant;\n  var highlighted = isHighlighted(item);\n  var expanded = isExpanded(item);\n  var triggerRef = React.useRef(null);\n  useEffect(function () {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n\n  var triggerClickHandler = function (e) {\n    if (!disabled) {\n      e.preventDefault();\n      onGroupToggle(item, e);\n    }\n  };\n\n  var onHover = function (event) {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  var isDisabledWithReason = !!item.disabledReason && item.disabled;\n\n  var _e = useHiddenDescription(item.disabledReason),\n      targetProps = _e.targetProps,\n      descriptionEl = _e.descriptionEl;\n\n  var trigger = item.text && React.createElement(\"span\", __assign({\n    onClick: triggerClickHandler,\n    className: clsx(styles.header, styles['expandable-header'], styles[\"variant-\" + variant], (_b = {}, _b[styles.highlighted] = highlighted, _b[styles['rolled-down']] = expanded, _b[styles.disabled] = disabled, _b)),\n    tabIndex: highlighted ? 0 : -1,\n    ref: triggerRef\n  }, getMenuItemProps({\n    parent: true,\n    disabled: disabled,\n    expanded: expanded\n  }), isDisabledWithReason ? targetProps : {}), item.text, React.createElement(\"span\", {\n    className: clsx(styles['expand-icon'], (_c = {}, _c[styles['expand-icon-up']] = expanded, _c))\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\"\n  })));\n  var content;\n\n  if (isDisabledWithReason) {\n    content = React.createElement(React.Fragment, null, descriptionEl, React.createElement(Tooltip, {\n      content: item.disabledReason\n    }, trigger));\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = React.createElement(MobileExpandableGroup, {\n      open: expanded,\n      trigger: trigger\n    }, item.items && expanded && React.createElement(\"ul\", {\n      role: \"menu\",\n      \"aria-label\": item.text,\n      className: clsx(styles['items-list-container'])\n    }, React.createElement(ItemsList, {\n      items: item.items,\n      onItemActivate: onItemActivate,\n      onGroupToggle: onGroupToggle,\n      targetItem: targetItem,\n      isHighlighted: isHighlighted,\n      isExpanded: isExpanded,\n      highlightItem: highlightItem,\n      hasCategoryHeader: true,\n      variant: variant\n    })));\n  }\n\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[\"variant-\" + variant], styles.expandable, (_d = {}, _d[styles.expanded] = expanded, _d[styles.disabled] = disabled, _d[styles.highlighted] = highlighted || expanded, _d[styles.expandable] = true, _d)),\n    role: \"presentation\",\n    onMouseEnter: onHover,\n    onTouchStart: onHover,\n    \"data-testid\": item.id\n  }, content);\n};\n\nexport default MobileExpandableCategoryElement;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/button-dropdown/category-elements/mobile-expandable-category-element.js"],"names":["__assign","React","useEffect","clsx","styles","InternalIcon","ItemsList","MobileExpandableGroup","Tooltip","useHiddenDescription","getMenuItemProps","MobileExpandableCategoryElement","_a","_b","_c","_d","item","onItemActivate","onGroupToggle","targetItem","isHighlighted","isExpanded","highlightItem","disabled","variant","highlighted","expanded","triggerRef","useRef","current","focus","triggerClickHandler","e","preventDefault","onHover","event","isDisabledWithReason","disabledReason","_e","targetProps","descriptionEl","trigger","text","createElement","onClick","className","header","tabIndex","ref","parent","name","content","Fragment","open","items","role","hasCategoryHeader","category","expandable","onMouseEnter","onTouchStart","id"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport MobileExpandableGroup from '../mobile-expandable-group/mobile-expandable-group';\nimport Tooltip from '../tooltip.js';\nimport useHiddenDescription from '../utils/use-hidden-description.js';\nimport { getMenuItemProps } from '../utils/menu-item.js';\nvar MobileExpandableCategoryElement = function (_a) {\n    var _b, _c, _d;\n    var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, variant = _a.variant;\n    var highlighted = isHighlighted(item);\n    var expanded = isExpanded(item);\n    var triggerRef = React.useRef(null);\n    useEffect(function () {\n        if (triggerRef.current && highlighted && !expanded) {\n            triggerRef.current.focus();\n        }\n    }, [expanded, highlighted]);\n    var triggerClickHandler = function (e) {\n        if (!disabled) {\n            e.preventDefault();\n            onGroupToggle(item, e);\n        }\n    };\n    var onHover = function (event) {\n        event.preventDefault();\n        highlightItem(item);\n    };\n    var isDisabledWithReason = !!item.disabledReason && item.disabled;\n    var _e = useHiddenDescription(item.disabledReason), targetProps = _e.targetProps, descriptionEl = _e.descriptionEl;\n    var trigger = item.text && (React.createElement(\"span\", __assign({ onClick: triggerClickHandler, className: clsx(styles.header, styles['expandable-header'], styles[\"variant-\" + variant], (_b = {},\n            _b[styles.highlighted] = highlighted,\n            _b[styles['rolled-down']] = expanded,\n            _b[styles.disabled] = disabled,\n            _b)), tabIndex: highlighted ? 0 : -1, ref: triggerRef }, getMenuItemProps({ parent: true, disabled: disabled, expanded: expanded }), (isDisabledWithReason ? targetProps : {})),\n        item.text,\n        React.createElement(\"span\", { className: clsx(styles['expand-icon'], (_c = {},\n                _c[styles['expand-icon-up']] = expanded,\n                _c)) },\n            React.createElement(InternalIcon, { name: \"caret-down-filled\" }))));\n    var content;\n    if (isDisabledWithReason) {\n        content = (React.createElement(React.Fragment, null,\n            descriptionEl,\n            React.createElement(Tooltip, { content: item.disabledReason }, trigger)));\n    }\n    else if (disabled) {\n        content = trigger;\n    }\n    else {\n        content = (React.createElement(MobileExpandableGroup, { open: expanded, trigger: trigger }, item.items && expanded && (React.createElement(\"ul\", { role: \"menu\", \"aria-label\": item.text, className: clsx(styles['items-list-container']) },\n            React.createElement(ItemsList, { items: item.items, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, targetItem: targetItem, isHighlighted: isHighlighted, isExpanded: isExpanded, highlightItem: highlightItem, hasCategoryHeader: true, variant: variant })))));\n    }\n    return (React.createElement(\"li\", { className: clsx(styles.category, styles[\"variant-\" + variant], styles.expandable, (_d = {},\n            _d[styles.expanded] = expanded,\n            _d[styles.disabled] = disabled,\n            _d[styles.highlighted] = highlighted || expanded,\n            _d[styles.expandable] = true,\n            _d)), role: \"presentation\", onMouseEnter: onHover, onTouchStart: onHover, \"data-testid\": item.id }, content));\n};\nexport default MobileExpandableCategoryElement;\n"]},"metadata":{},"sourceType":"module"}