{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport InternalIcon from '../icon/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nexport var ExpandableSectionHeader = function (_a) {\n  var id = _a.id,\n      className = _a.className,\n      variant = _a.variant,\n      children = _a.children,\n      expanded = _a.expanded,\n      ariaControls = _a.ariaControls,\n      ariaLabelledBy = _a.ariaLabelledBy,\n      onKeyUp = _a.onKeyUp,\n      onKeyDown = _a.onKeyDown,\n      onClick = _a.onClick;\n  var focusVisible = useFocusVisible();\n  var icon = React.createElement(InternalIcon, {\n    size: variant === 'container' ? 'medium' : 'normal',\n    className: clsx(styles.icon, expanded && styles.expanded),\n    name: \"caret-down-filled\"\n  });\n  var ariaAttributes = {\n    'aria-controls': ariaControls,\n    'aria-expanded': expanded\n  };\n  var triggerClassName = clsx(styles.trigger, styles[\"trigger-\" + variant], expanded && styles['trigger-expanded']);\n\n  if (variant === 'navigation') {\n    return React.createElement(\"div\", {\n      id: id,\n      className: clsx(className, triggerClassName),\n      onClick: onClick\n    }, React.createElement(\"button\", __assign({\n      className: styles['icon-container'],\n      type: \"button\",\n      \"aria-labelledby\": ariaLabelledBy\n    }, focusVisible, ariaAttributes), icon), children);\n  }\n\n  return React.createElement(\"div\", __assign({\n    id: id,\n    role: \"button\",\n    className: clsx(className, triggerClassName, styles.focusable, expanded && styles.expanded),\n    tabIndex: 0,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onClick: onClick\n  }, focusVisible, ariaAttributes), React.createElement(\"div\", {\n    className: styles['icon-container']\n  }, icon), children);\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/expandable-section/expandable-section-header.js"],"names":["__assign","React","useFocusVisible","InternalIcon","clsx","styles","ExpandableSectionHeader","_a","id","className","variant","children","expanded","ariaControls","ariaLabelledBy","onKeyUp","onKeyDown","onClick","focusVisible","icon","createElement","size","name","ariaAttributes","triggerClassName","trigger","type","role","focusable","tabIndex"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport InternalIcon from '../icon/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nexport var ExpandableSectionHeader = function (_a) {\n    var id = _a.id, className = _a.className, variant = _a.variant, children = _a.children, expanded = _a.expanded, ariaControls = _a.ariaControls, ariaLabelledBy = _a.ariaLabelledBy, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown, onClick = _a.onClick;\n    var focusVisible = useFocusVisible();\n    var icon = (React.createElement(InternalIcon, { size: variant === 'container' ? 'medium' : 'normal', className: clsx(styles.icon, expanded && styles.expanded), name: \"caret-down-filled\" }));\n    var ariaAttributes = {\n        'aria-controls': ariaControls,\n        'aria-expanded': expanded\n    };\n    var triggerClassName = clsx(styles.trigger, styles[\"trigger-\" + variant], expanded && styles['trigger-expanded']);\n    if (variant === 'navigation') {\n        return (React.createElement(\"div\", { id: id, className: clsx(className, triggerClassName), onClick: onClick },\n            React.createElement(\"button\", __assign({ className: styles['icon-container'], type: \"button\", \"aria-labelledby\": ariaLabelledBy }, focusVisible, ariaAttributes), icon),\n            children));\n    }\n    return (React.createElement(\"div\", __assign({ id: id, role: \"button\", className: clsx(className, triggerClassName, styles.focusable, expanded && styles.expanded), tabIndex: 0, onKeyUp: onKeyUp, onKeyDown: onKeyDown, onClick: onClick }, focusVisible, ariaAttributes),\n        React.createElement(\"div\", { className: styles['icon-container'] }, icon),\n        children));\n};\n"]},"metadata":{},"sourceType":"module"}