{"ast":null,"code":"var SCHEME = 's3://';\nvar BUCKET_FIRST_CHAR = /^[a-z0-9]{1}/;\nvar CAPITAL_LETTER = /[A-Z]/;\nvar DNS_NAME = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;\n\nfunction checkBucketNameLength(bucketName) {\n  return 3 <= bucketName.length && bucketName.length <= 63;\n}\n\nexport function extractBucketName(uri) {\n  var _a = uri.replace(SCHEME, '').split('/'),\n      bucketName = _a[0],\n      rest = _a.slice(1);\n\n  return [bucketName, rest.join('/')];\n}\nexport function validate(uri) {\n  if (uri === '') {\n    return undefined;\n  }\n\n  if (uri.slice(0, SCHEME.length) !== SCHEME) {\n    return 'validationPathMustBegin';\n  }\n\n  var bucketName = extractBucketName(uri)[0];\n\n  if (!BUCKET_FIRST_CHAR.test(bucketName)) {\n    return 'validationBucketLowerCase';\n  }\n\n  if (CAPITAL_LETTER.test(bucketName)) {\n    return 'validationBucketMustNotContain';\n  }\n\n  if (!checkBucketNameLength(bucketName)) {\n    return 'validationBucketLength';\n  }\n\n  if (!DNS_NAME.test(bucketName)) {\n    return 'validationBucketMustComplyDns';\n  }\n\n  return undefined;\n}\nexport function getErrorText(i18nStrings, errorCode) {\n  return errorCode ? i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings[errorCode] : undefined;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/s3-resource-selector/s3-in-context/validation.js"],"names":["SCHEME","BUCKET_FIRST_CHAR","CAPITAL_LETTER","DNS_NAME","checkBucketNameLength","bucketName","length","extractBucketName","uri","_a","replace","split","rest","slice","join","validate","undefined","test","getErrorText","i18nStrings","errorCode"],"mappings":"AAAA,IAAIA,MAAM,GAAG,OAAb;AACA,IAAIC,iBAAiB,GAAG,cAAxB;AACA,IAAIC,cAAc,GAAG,OAArB;AACA,IAAIC,QAAQ,GAAG,mFAAf;;AACA,SAASC,qBAAT,CAA+BC,UAA/B,EAA2C;AACvC,SAAO,KAAKA,UAAU,CAACC,MAAhB,IAA0BD,UAAU,CAACC,MAAX,IAAqB,EAAtD;AACH;;AACD,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AACnC,MAAIC,EAAE,GAAGD,GAAG,CAACE,OAAJ,CAAYV,MAAZ,EAAoB,EAApB,EAAwBW,KAAxB,CAA8B,GAA9B,CAAT;AAAA,MAA6CN,UAAU,GAAGI,EAAE,CAAC,CAAD,CAA5D;AAAA,MAAiEG,IAAI,GAAGH,EAAE,CAACI,KAAH,CAAS,CAAT,CAAxE;;AACA,SAAO,CAACR,UAAD,EAAaO,IAAI,CAACE,IAAL,CAAU,GAAV,CAAb,CAAP;AACH;AACD,OAAO,SAASC,QAAT,CAAkBP,GAAlB,EAAuB;AAC1B,MAAIA,GAAG,KAAK,EAAZ,EAAgB;AACZ,WAAOQ,SAAP;AACH;;AACD,MAAIR,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAab,MAAM,CAACM,MAApB,MAAgCN,MAApC,EAA4C;AACxC,WAAO,yBAAP;AACH;;AACD,MAAIK,UAAU,GAAGE,iBAAiB,CAACC,GAAD,CAAjB,CAAuB,CAAvB,CAAjB;;AACA,MAAI,CAACP,iBAAiB,CAACgB,IAAlB,CAAuBZ,UAAvB,CAAL,EAAyC;AACrC,WAAO,2BAAP;AACH;;AACD,MAAIH,cAAc,CAACe,IAAf,CAAoBZ,UAApB,CAAJ,EAAqC;AACjC,WAAO,gCAAP;AACH;;AACD,MAAI,CAACD,qBAAqB,CAACC,UAAD,CAA1B,EAAwC;AACpC,WAAO,wBAAP;AACH;;AACD,MAAI,CAACF,QAAQ,CAACc,IAAT,CAAcZ,UAAd,CAAL,EAAgC;AAC5B,WAAO,+BAAP;AACH;;AACD,SAAOW,SAAP;AACH;AACD,OAAO,SAASE,YAAT,CAAsBC,WAAtB,EAAmCC,SAAnC,EAA8C;AACjD,SAAOA,SAAS,GAAGD,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACC,SAAD,CAAxE,GAAsFJ,SAAtG;AACH","sourcesContent":["var SCHEME = 's3://';\nvar BUCKET_FIRST_CHAR = /^[a-z0-9]{1}/;\nvar CAPITAL_LETTER = /[A-Z]/;\nvar DNS_NAME = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;\nfunction checkBucketNameLength(bucketName) {\n    return 3 <= bucketName.length && bucketName.length <= 63;\n}\nexport function extractBucketName(uri) {\n    var _a = uri.replace(SCHEME, '').split('/'), bucketName = _a[0], rest = _a.slice(1);\n    return [bucketName, rest.join('/')];\n}\nexport function validate(uri) {\n    if (uri === '') {\n        return undefined;\n    }\n    if (uri.slice(0, SCHEME.length) !== SCHEME) {\n        return 'validationPathMustBegin';\n    }\n    var bucketName = extractBucketName(uri)[0];\n    if (!BUCKET_FIRST_CHAR.test(bucketName)) {\n        return 'validationBucketLowerCase';\n    }\n    if (CAPITAL_LETTER.test(bucketName)) {\n        return 'validationBucketMustNotContain';\n    }\n    if (!checkBucketNameLength(bucketName)) {\n        return 'validationBucketLength';\n    }\n    if (!DNS_NAME.test(bucketName)) {\n        return 'validationBucketMustComplyDns';\n    }\n    return undefined;\n}\nexport function getErrorText(i18nStrings, errorCode) {\n    return errorCode ? i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings[errorCode] : undefined;\n}\n"]},"metadata":{},"sourceType":"module"}