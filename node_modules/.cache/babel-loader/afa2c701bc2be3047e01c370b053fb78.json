{"ast":null,"code":"import { warnOnce } from '../internal/logging';\nexport var applyTrackBy = function (trackBy, item) {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n\n  return item[trackBy];\n};\nexport var getItemKey = function (trackBy, item, index) {\n  if (!trackBy) {\n    return index;\n  }\n\n  return applyTrackBy(trackBy, item);\n};\nexport var getTrackableValue = function (trackBy, item) {\n  if (!trackBy) {\n    return item;\n  }\n\n  return applyTrackBy(trackBy, item);\n};\nexport var getColumnKey = function (column, index) {\n  return column.id || index;\n};\nvar stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled'\n};\nvar stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending'\n};\nexport var getSortingStatus = function (sortable, sorted, descending, disabled) {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n\n    return 'ascending';\n  }\n\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n\n  return undefined;\n};\nexport var getSortingIconName = function (sortingState) {\n  return stateToIcon[sortingState];\n};\nexport var getAriaSort = function (sortingState) {\n  return stateToAriaSort[sortingState];\n};\nexport var isSorted = function (column, sortingColumn) {\n  return column === sortingColumn || column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField || column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator;\n};\nexport var toContainerVariant = function (variant) {\n  var isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant;\n};\nexport function checkSortingState(columnDefinitions, sortingComparator) {\n  var matchedColumn = columnDefinitions.filter(function (column) {\n    return column.sortingComparator === sortingComparator;\n  })[0];\n\n  if (!matchedColumn) {\n    warnOnce('Table', 'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.');\n  }\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/table/utils.js"],"names":["warnOnce","applyTrackBy","trackBy","item","getItemKey","index","getTrackableValue","getColumnKey","column","id","stateToIcon","sortable","ascending","descending","stateToAriaSort","getSortingStatus","sorted","disabled","undefined","getSortingIconName","sortingState","getAriaSort","isSorted","sortingColumn","sortingField","sortingComparator","toContainerVariant","variant","isDefaultVariant","checkSortingState","columnDefinitions","matchedColumn","filter"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAO,IAAIC,YAAY,GAAG,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC/C,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,WAAOA,OAAO,CAACC,IAAD,CAAd;AACH;;AACD,SAAOA,IAAI,CAACD,OAAD,CAAX;AACH,CALM;AAMP,OAAO,IAAIE,UAAU,GAAG,UAAUF,OAAV,EAAmBC,IAAnB,EAAyBE,KAAzB,EAAgC;AACpD,MAAI,CAACH,OAAL,EAAc;AACV,WAAOG,KAAP;AACH;;AACD,SAAOJ,YAAY,CAACC,OAAD,EAAUC,IAAV,CAAnB;AACH,CALM;AAMP,OAAO,IAAIG,iBAAiB,GAAG,UAAUJ,OAAV,EAAmBC,IAAnB,EAAyB;AACpD,MAAI,CAACD,OAAL,EAAc;AACV,WAAOC,IAAP;AACH;;AACD,SAAOF,YAAY,CAACC,OAAD,EAAUC,IAAV,CAAnB;AACH,CALM;AAMP,OAAO,IAAII,YAAY,GAAG,UAAUC,MAAV,EAAkBH,KAAlB,EAAyB;AAC/C,SAAOG,MAAM,CAACC,EAAP,IAAaJ,KAApB;AACH,CAFM;AAGP,IAAIK,WAAW,GAAG;AACdC,EAAAA,QAAQ,EAAE,YADI;AAEdC,EAAAA,SAAS,EAAE,iBAFG;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;AAKA,IAAIC,eAAe,GAAG;AAClBH,EAAAA,QAAQ,EAAE,MADQ;AAElBC,EAAAA,SAAS,EAAE,WAFO;AAGlBC,EAAAA,UAAU,EAAE;AAHM,CAAtB;AAKA,OAAO,IAAIE,gBAAgB,GAAG,UAAUJ,QAAV,EAAoBK,MAApB,EAA4BH,UAA5B,EAAwCI,QAAxC,EAAkD;AAC5E,MAAID,MAAJ,EAAY;AACR,QAAIH,UAAJ,EAAgB;AACZ,aAAO,YAAP;AACH;;AACD,WAAO,WAAP;AACH;;AACD,MAAIF,QAAQ,IAAI,CAACM,QAAjB,EAA2B;AACvB,WAAO,UAAP;AACH;;AACD,SAAOC,SAAP;AACH,CAXM;AAYP,OAAO,IAAIC,kBAAkB,GAAG,UAAUC,YAAV,EAAwB;AAAE,SAAOV,WAAW,CAACU,YAAD,CAAlB;AAAmC,CAAtF;AACP,OAAO,IAAIC,WAAW,GAAG,UAAUD,YAAV,EAAwB;AAAE,SAAON,eAAe,CAACM,YAAD,CAAtB;AAAuC,CAAnF;AACP,OAAO,IAAIE,QAAQ,GAAG,UAAUd,MAAV,EAAkBe,aAAlB,EAAiC;AACnD,SAAOf,MAAM,KAAKe,aAAX,IACFf,MAAM,CAACgB,YAAP,KAAwBN,SAAxB,IAAqCV,MAAM,CAACgB,YAAP,KAAwBD,aAAa,CAACC,YADzE,IAEFhB,MAAM,CAACiB,iBAAP,KAA6BP,SAA7B,IAA0CV,MAAM,CAACiB,iBAAP,KAA6BF,aAAa,CAACE,iBAF1F;AAGH,CAJM;AAKP,OAAO,IAAIC,kBAAkB,GAAG,UAAUC,OAAV,EAAmB;AAC/C,MAAIC,gBAAgB,GAAG,CAACD,OAAD,IAAYA,OAAO,KAAK,WAA/C;AACA,SAAOC,gBAAgB,GAAG,SAAH,GAAeD,OAAtC;AACH,CAHM;AAIP,OAAO,SAASE,iBAAT,CAA2BC,iBAA3B,EAA8CL,iBAA9C,EAAiE;AACpE,MAAIM,aAAa,GAAGD,iBAAiB,CAACE,MAAlB,CAAyB,UAAUxB,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAACiB,iBAAP,KAA6BA,iBAApC;AAAwD,GAArG,EAAuG,CAAvG,CAApB;;AACA,MAAI,CAACM,aAAL,EAAoB;AAChB/B,IAAAA,QAAQ,CAAC,OAAD,EAAU,8IAAV,CAAR;AACH;AACJ","sourcesContent":["import { warnOnce } from '../internal/logging';\nexport var applyTrackBy = function (trackBy, item) {\n    if (typeof trackBy === 'function') {\n        return trackBy(item);\n    }\n    return item[trackBy];\n};\nexport var getItemKey = function (trackBy, item, index) {\n    if (!trackBy) {\n        return index;\n    }\n    return applyTrackBy(trackBy, item);\n};\nexport var getTrackableValue = function (trackBy, item) {\n    if (!trackBy) {\n        return item;\n    }\n    return applyTrackBy(trackBy, item);\n};\nexport var getColumnKey = function (column, index) {\n    return column.id || index;\n};\nvar stateToIcon = {\n    sortable: 'caret-down',\n    ascending: 'caret-up-filled',\n    descending: 'caret-down-filled'\n};\nvar stateToAriaSort = {\n    sortable: 'none',\n    ascending: 'ascending',\n    descending: 'descending'\n};\nexport var getSortingStatus = function (sortable, sorted, descending, disabled) {\n    if (sorted) {\n        if (descending) {\n            return 'descending';\n        }\n        return 'ascending';\n    }\n    if (sortable && !disabled) {\n        return 'sortable';\n    }\n    return undefined;\n};\nexport var getSortingIconName = function (sortingState) { return stateToIcon[sortingState]; };\nexport var getAriaSort = function (sortingState) { return stateToAriaSort[sortingState]; };\nexport var isSorted = function (column, sortingColumn) {\n    return column === sortingColumn ||\n        (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n        (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\n};\nexport var toContainerVariant = function (variant) {\n    var isDefaultVariant = !variant || variant === 'container';\n    return isDefaultVariant ? 'default' : variant;\n};\nexport function checkSortingState(columnDefinitions, sortingComparator) {\n    var matchedColumn = columnDefinitions.filter(function (column) { return column.sortingComparator === sortingComparator; })[0];\n    if (!matchedColumn) {\n        warnOnce('Table', 'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}