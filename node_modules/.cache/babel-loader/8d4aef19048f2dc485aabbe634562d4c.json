{"ast":null,"code":"import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { InternalButton } from '../../button/internal';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nimport { useFocusControl } from '../utils/use-focus-control';\nimport { Transition } from '../../internal/components/transition';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport customCssProps from '../../internal/generated/custom-css-properties';\nexport default function Navigation() {\n  var _a = useContext(AppLayoutContext),\n      ariaLabels = _a.ariaLabels,\n      handleNavigationClick = _a.handleNavigationClick,\n      isMobile = _a.isMobile,\n      isNavigationOpen = _a.isNavigationOpen,\n      navigation = _a.navigation,\n      navigationHide = _a.navigationHide,\n      navigationWidth = _a.navigationWidth,\n      isToolsOpen = _a.isToolsOpen,\n      isAnyPanelOpen = _a.isAnyPanelOpen,\n      toolsHide = _a.toolsHide;\n\n  var focusRefs = useFocusControl(isNavigationOpen);\n\n  if (navigationHide) {\n    return null;\n  }\n\n  var onNavigationClick = function (event) {\n    var hasLink = findUpUntil(event.target, function (node) {\n      return node.tagName === 'A' && !!node.href;\n    });\n\n    if (hasLink && isMobile) {\n      handleNavigationClick(false);\n    }\n  };\n\n  var isUnfocusable = isMobile && isAnyPanelOpen && isToolsOpen && !toolsHide;\n  return React.createElement(Transition, {\n    \"in\": isNavigationOpen\n  }, function (state, transitionEventsRef) {\n    var _a, _b;\n\n    var _c, _d, _e;\n\n    return React.createElement(\"div\", {\n      className: clsx(styles['navigation-container'], (_a = {}, _a[testutilStyles['drawer-closed']] = !isNavigationOpen, _a[styles.unfocusable] = isUnfocusable, _a)),\n      style: (_b = {}, _b[customCssProps.navigationWidth] = navigationWidth ? navigationWidth + \"px\" : '', _b)\n    }, !isMobile && React.createElement(\"nav\", {\n      \"aria-hidden\": isMobile || isNavigationOpen ? true : false,\n      \"aria-label\": (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _c !== void 0 ? _c : undefined,\n      className: clsx(styles['show-navigation'], state === 'exiting' && styles.animating),\n      \"data-is-navigation-open\": isNavigationOpen,\n      ref: state === 'exiting' ? transitionEventsRef : undefined\n    }, React.createElement(TriggerButton, {\n      ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationToggle,\n      iconName: \"menu\",\n      className: testutilStyles['navigation-toggle'],\n      onClick: function () {\n        return handleNavigationClick(true);\n      },\n      ref: focusRefs.toggle\n    })), React.createElement(\"nav\", {\n      \"aria-label\": (_d = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _d !== void 0 ? _d : undefined,\n      className: clsx(styles.navigation, state === 'entering' && styles.animating, testutilStyles.navigation),\n      \"data-is-navigation-open\": isNavigationOpen ? true : false,\n      ref: state !== 'exiting' ? transitionEventsRef : undefined,\n      \"aria-hidden\": !isNavigationOpen,\n      onClick: function (event) {\n        onNavigationClick && onNavigationClick(event);\n      }\n    }, React.createElement(\"div\", {\n      className: clsx(styles['animated-content'])\n    }, React.createElement(\"div\", {\n      className: clsx(styles['hide-navigation'])\n    }, React.createElement(InternalButton, {\n      ariaLabel: (_e = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationClose) !== null && _e !== void 0 ? _e : undefined,\n      iconName: isMobile ? 'close' : 'angle-left',\n      onClick: function () {\n        return handleNavigationClick(false);\n      },\n      variant: \"icon\",\n      formAction: \"none\",\n      className: testutilStyles['navigation-close'],\n      ref: focusRefs.close\n    })), navigation)));\n  });\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/app-layout/visual-refresh/navigation.js"],"names":["React","useContext","clsx","AppLayoutContext","InternalButton","TriggerButton","styles","testutilStyles","useFocusControl","Transition","findUpUntil","customCssProps","Navigation","_a","ariaLabels","handleNavigationClick","isMobile","isNavigationOpen","navigation","navigationHide","navigationWidth","isToolsOpen","isAnyPanelOpen","toolsHide","focusRefs","onNavigationClick","event","hasLink","target","node","tagName","href","isUnfocusable","createElement","state","transitionEventsRef","_b","_c","_d","_e","className","unfocusable","style","undefined","animating","ref","ariaLabel","navigationToggle","iconName","onClick","toggle","navigationClose","variant","formAction","close"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { InternalButton } from '../../button/internal';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nimport { useFocusControl } from '../utils/use-focus-control';\nimport { Transition } from '../../internal/components/transition';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport customCssProps from '../../internal/generated/custom-css-properties';\nexport default function Navigation() {\n    var _a = useContext(AppLayoutContext), ariaLabels = _a.ariaLabels, handleNavigationClick = _a.handleNavigationClick, isMobile = _a.isMobile, isNavigationOpen = _a.isNavigationOpen, navigation = _a.navigation, navigationHide = _a.navigationHide, navigationWidth = _a.navigationWidth, isToolsOpen = _a.isToolsOpen, isAnyPanelOpen = _a.isAnyPanelOpen, toolsHide = _a.toolsHide;\n    var focusRefs = useFocusControl(isNavigationOpen);\n    if (navigationHide) {\n        return null;\n    }\n    var onNavigationClick = function (event) {\n        var hasLink = findUpUntil(event.target, function (node) { return node.tagName === 'A' && !!node.href; });\n        if (hasLink && isMobile) {\n            handleNavigationClick(false);\n        }\n    };\n    var isUnfocusable = isMobile && isAnyPanelOpen && isToolsOpen && !toolsHide;\n    return (React.createElement(Transition, { \"in\": isNavigationOpen }, function (state, transitionEventsRef) {\n        var _a, _b;\n        var _c, _d, _e;\n        return (React.createElement(\"div\", { className: clsx(styles['navigation-container'], (_a = {},\n                _a[testutilStyles['drawer-closed']] = !isNavigationOpen,\n                _a[styles.unfocusable] = isUnfocusable,\n                _a)), style: (_b = {}, _b[customCssProps.navigationWidth] = navigationWidth ? navigationWidth + \"px\" : '', _b) },\n            !isMobile && (React.createElement(\"nav\", { \"aria-hidden\": isMobile || isNavigationOpen ? true : false, \"aria-label\": (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _c !== void 0 ? _c : undefined, className: clsx(styles['show-navigation'], state === 'exiting' && styles.animating), \"data-is-navigation-open\": isNavigationOpen, ref: state === 'exiting' ? transitionEventsRef : undefined },\n                React.createElement(TriggerButton, { ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationToggle, iconName: \"menu\", className: testutilStyles['navigation-toggle'], onClick: function () { return handleNavigationClick(true); }, ref: focusRefs.toggle }))),\n            React.createElement(\"nav\", { \"aria-label\": (_d = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _d !== void 0 ? _d : undefined, className: clsx(styles.navigation, state === 'entering' && styles.animating, testutilStyles.navigation), \"data-is-navigation-open\": isNavigationOpen ? true : false, ref: state !== 'exiting' ? transitionEventsRef : undefined, \"aria-hidden\": !isNavigationOpen, onClick: function (event) {\n                    onNavigationClick && onNavigationClick(event);\n                } },\n                React.createElement(\"div\", { className: clsx(styles['animated-content']) },\n                    React.createElement(\"div\", { className: clsx(styles['hide-navigation']) },\n                        React.createElement(InternalButton, { ariaLabel: (_e = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationClose) !== null && _e !== void 0 ? _e : undefined, iconName: isMobile ? 'close' : 'angle-left', onClick: function () { return handleNavigationClick(false); }, variant: \"icon\", formAction: \"none\", className: testutilStyles['navigation-close'], ref: focusRefs.close })),\n                    navigation))));\n    }));\n}\n"]},"metadata":{},"sourceType":"module"}