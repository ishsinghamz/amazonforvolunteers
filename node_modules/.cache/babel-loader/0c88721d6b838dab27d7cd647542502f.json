{"ast":null,"code":"import { KeyCode } from '../../internal/keycode';\nvar KEYBOARD_SINGLE_STEP_SIZE = 10;\nvar KEYBOARD_MULTIPLE_STEPS_SIZE = 60;\n\nvar getCurrentSize = function (splitPanelRef) {\n  if (!splitPanelRef || !splitPanelRef.current) {\n    return {\n      splitPanelHeight: 0,\n      splitPanelWidth: 0\n    };\n  }\n\n  var safeParseFloat = function (size) {\n    if (size === void 0) {\n      size = '';\n    }\n\n    return parseFloat(size) || 0;\n  };\n\n  return {\n    splitPanelHeight: safeParseFloat(splitPanelRef.current.style.height),\n    splitPanelWidth: safeParseFloat(splitPanelRef.current.style.width)\n  };\n};\n\nexport var useKeyboardEvents = function (_a) {\n  var position = _a.position,\n      setSidePanelWidth = _a.setSidePanelWidth,\n      setBottomPanelHeight = _a.setBottomPanelHeight,\n      splitPanelRef = _a.splitPanelRef;\n  return function (event) {\n    var setSizeFunction;\n    var currentSize;\n    var maxSize;\n\n    var _a = getCurrentSize(splitPanelRef),\n        splitPanelHeight = _a.splitPanelHeight,\n        splitPanelWidth = _a.splitPanelWidth;\n\n    if (position === 'side') {\n      setSizeFunction = setSidePanelWidth;\n      currentSize = splitPanelWidth;\n      maxSize = window.innerWidth;\n    } else {\n      setSizeFunction = setBottomPanelHeight;\n      currentSize = splitPanelHeight;\n      maxSize = window.innerHeight;\n    }\n\n    var isEventHandled = true;\n\n    switch (event.keyCode) {\n      case KeyCode.left:\n      case KeyCode.up:\n        setSizeFunction(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n        break;\n\n      case KeyCode.right:\n      case KeyCode.down:\n        setSizeFunction(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n        break;\n\n      case KeyCode.pageUp:\n        setSizeFunction(currentSize + KEYBOARD_MULTIPLE_STEPS_SIZE);\n        break;\n\n      case KeyCode.pageDown:\n        setSizeFunction(currentSize - KEYBOARD_MULTIPLE_STEPS_SIZE);\n        break;\n\n      case KeyCode.home:\n        setSizeFunction(maxSize);\n        break;\n\n      case KeyCode.end:\n        setSizeFunction(0);\n        break;\n\n      default:\n        isEventHandled = false;\n    }\n\n    if (isEventHandled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/split-panel/utils/use-keyboard-events.js"],"names":["KeyCode","KEYBOARD_SINGLE_STEP_SIZE","KEYBOARD_MULTIPLE_STEPS_SIZE","getCurrentSize","splitPanelRef","current","splitPanelHeight","splitPanelWidth","safeParseFloat","size","parseFloat","style","height","width","useKeyboardEvents","_a","position","setSidePanelWidth","setBottomPanelHeight","event","setSizeFunction","currentSize","maxSize","window","innerWidth","innerHeight","isEventHandled","keyCode","left","up","right","down","pageUp","pageDown","home","end","preventDefault","stopPropagation"],"mappings":"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","sourcesContent":["import { KeyCode } from '../../internal/keycode';\nvar KEYBOARD_SINGLE_STEP_SIZE = 10;\nvar KEYBOARD_MULTIPLE_STEPS_SIZE = 60;\nvar getCurrentSize = function (splitPanelRef) {\n    if (!splitPanelRef || !splitPanelRef.current) {\n        return {\n            splitPanelHeight: 0,\n            splitPanelWidth: 0\n        };\n    }\n    var safeParseFloat = function (size) {\n        if (size === void 0) { size = ''; }\n        return parseFloat(size) || 0;\n    };\n    return {\n        splitPanelHeight: safeParseFloat(splitPanelRef.current.style.height),\n        splitPanelWidth: safeParseFloat(splitPanelRef.current.style.width)\n    };\n};\nexport var useKeyboardEvents = function (_a) {\n    var position = _a.position, setSidePanelWidth = _a.setSidePanelWidth, setBottomPanelHeight = _a.setBottomPanelHeight, splitPanelRef = _a.splitPanelRef;\n    return function (event) {\n        var setSizeFunction;\n        var currentSize;\n        var maxSize;\n        var _a = getCurrentSize(splitPanelRef), splitPanelHeight = _a.splitPanelHeight, splitPanelWidth = _a.splitPanelWidth;\n        if (position === 'side') {\n            setSizeFunction = setSidePanelWidth;\n            currentSize = splitPanelWidth;\n            maxSize = window.innerWidth;\n        }\n        else {\n            setSizeFunction = setBottomPanelHeight;\n            currentSize = splitPanelHeight;\n            maxSize = window.innerHeight;\n        }\n        var isEventHandled = true;\n        switch (event.keyCode) {\n            case KeyCode.left:\n            case KeyCode.up:\n                setSizeFunction(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n                break;\n            case KeyCode.right:\n            case KeyCode.down:\n                setSizeFunction(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n                break;\n            case KeyCode.pageUp:\n                setSizeFunction(currentSize + KEYBOARD_MULTIPLE_STEPS_SIZE);\n                break;\n            case KeyCode.pageDown:\n                setSizeFunction(currentSize - KEYBOARD_MULTIPLE_STEPS_SIZE);\n                break;\n            case KeyCode.home:\n                setSizeFunction(maxSize);\n                break;\n            case KeyCode.end:\n                setSizeFunction(0);\n                break;\n            default:\n                isEventHandled = false;\n        }\n        if (isEventHandled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}