{"ast":null,"code":"import { parseCssVariable } from './dom';\nimport { categoryPalette } from '../styles/colors';\nimport { colorChartsThresholdNeutral as thresholdColor } from '../generated/styles/tokens';\nexport default function createCategoryColorScale(items, isThreshold, getOwnColor) {\n  if (isThreshold === void 0) {\n    isThreshold = function () {\n      return false;\n    };\n  }\n\n  if (getOwnColor === void 0) {\n    getOwnColor = function () {\n      return null;\n    };\n  }\n\n  var colors = [];\n  var categoryIndex = 0;\n\n  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n    var it = items_1[_i];\n    var ownColor = getOwnColor(it);\n    var defaultColor = isThreshold(it) ? thresholdColor : categoryPalette[categoryIndex % categoryPalette.length];\n    colors.push(parseCssVariable(ownColor || defaultColor));\n\n    if (!isThreshold(it) && !ownColor) {\n      categoryIndex++;\n    }\n  }\n\n  return colors;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/utils/create-category-color-scale.js"],"names":["parseCssVariable","categoryPalette","colorChartsThresholdNeutral","thresholdColor","createCategoryColorScale","items","isThreshold","getOwnColor","colors","categoryIndex","_i","items_1","length","it","ownColor","defaultColor","push"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,2BAA2B,IAAIC,cAAxC,QAA8D,4BAA9D;AACA,eAAe,SAASC,wBAAT,CAAkCC,KAAlC,EAAyCC,WAAzC,EAAsDC,WAAtD,EAAmE;AAC9E,MAAID,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,IAAAA,WAAW,GAAG,YAAY;AAAE,aAAO,KAAP;AAAe,KAA3C;AAA8C;;AAC5E,MAAIC,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,IAAAA,WAAW,GAAG,YAAY;AAAE,aAAO,IAAP;AAAc,KAA1C;AAA6C;;AAC3E,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,aAAa,GAAG,CAApB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGN,KAA3B,EAAkCK,EAAE,GAAGC,OAAO,CAACC,MAA/C,EAAuDF,EAAE,EAAzD,EAA6D;AACzD,QAAIG,EAAE,GAAGF,OAAO,CAACD,EAAD,CAAhB;AACA,QAAII,QAAQ,GAAGP,WAAW,CAACM,EAAD,CAA1B;AACA,QAAIE,YAAY,GAAGT,WAAW,CAACO,EAAD,CAAX,GAAkBV,cAAlB,GAAmCF,eAAe,CAACQ,aAAa,GAAGR,eAAe,CAACW,MAAjC,CAArE;AACAJ,IAAAA,MAAM,CAACQ,IAAP,CAAYhB,gBAAgB,CAACc,QAAQ,IAAIC,YAAb,CAA5B;;AACA,QAAI,CAACT,WAAW,CAACO,EAAD,CAAZ,IAAoB,CAACC,QAAzB,EAAmC;AAC/BL,MAAAA,aAAa;AAChB;AACJ;;AACD,SAAOD,MAAP;AACH","sourcesContent":["import { parseCssVariable } from './dom';\nimport { categoryPalette } from '../styles/colors';\nimport { colorChartsThresholdNeutral as thresholdColor } from '../generated/styles/tokens';\nexport default function createCategoryColorScale(items, isThreshold, getOwnColor) {\n    if (isThreshold === void 0) { isThreshold = function () { return false; }; }\n    if (getOwnColor === void 0) { getOwnColor = function () { return null; }; }\n    var colors = [];\n    var categoryIndex = 0;\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var it = items_1[_i];\n        var ownColor = getOwnColor(it);\n        var defaultColor = isThreshold(it) ? thresholdColor : categoryPalette[categoryIndex % categoryPalette.length];\n        colors.push(parseCssVariable(ownColor || defaultColor));\n        if (!isThreshold(it) && !ownColor) {\n            categoryIndex++;\n        }\n    }\n    return colors;\n}\n"]},"metadata":{},"sourceType":"module"}