{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useState, useRef, useEffect } from 'react';\nimport InternalBox from '../box/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { S3InContext } from './s3-in-context';\nimport { S3Modal } from './s3-modal';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar S3ResourceSelector = React.forwardRef(function (_a, ref) {\n  var i18nStrings = _a.i18nStrings,\n      alert = _a.alert,\n      resource = _a.resource,\n      viewHref = _a.viewHref,\n      invalid = _a.invalid,\n      _b = _a.selectableItemsTypes,\n      selectableItemsTypes = _b === void 0 ? [] : _b,\n      inputAriaDescribedby = _a.inputAriaDescribedby,\n      _c = _a.bucketsVisibleColumns,\n      bucketsVisibleColumns = _c === void 0 ? ['Name', 'CreationDate'] : _c,\n      bucketsIsItemDisabled = _a.bucketsIsItemDisabled,\n      fetchBuckets = _a.fetchBuckets,\n      fetchObjects = _a.fetchObjects,\n      _d = _a.objectsVisibleColumns,\n      objectsVisibleColumns = _d === void 0 ? ['Key', 'LastModified', 'Size'] : _d,\n      objectsIsItemDisabled = _a.objectsIsItemDisabled,\n      fetchVersions = _a.fetchVersions,\n      _e = _a.versionsVisibleColumns,\n      versionsVisibleColumns = _e === void 0 ? ['ID', 'LastModified', 'Size'] : _e,\n      versionsIsItemDisabled = _a.versionsIsItemDisabled,\n      onChange = _a.onChange,\n      rest = __rest(_a, [\"i18nStrings\", \"alert\", \"resource\", \"viewHref\", \"invalid\", \"selectableItemsTypes\", \"inputAriaDescribedby\", \"bucketsVisibleColumns\", \"bucketsIsItemDisabled\", \"fetchBuckets\", \"fetchObjects\", \"objectsVisibleColumns\", \"objectsIsItemDisabled\", \"fetchVersions\", \"versionsVisibleColumns\", \"versionsIsItemDisabled\", \"onChange\"]);\n\n  var __internalRootRef = useBaseComponent('S3ResourceSelector').__internalRootRef;\n\n  var _f = useState(false),\n      modalOpen = _f[0],\n      setModalOpen = _f[1];\n\n  var inContextRef = useRef(null);\n  var modalWasSubmitted = useRef(false);\n  useForwardFocus(ref, inContextRef);\n  useEffect(function () {\n    var _a;\n\n    if (!modalOpen && modalWasSubmitted.current) {\n      modalWasSubmitted.current = false;\n      (_a = inContextRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [modalOpen]);\n  var baseProps = getBaseProps(rest);\n  var modalProps = {\n    alert: alert,\n    i18nStrings: i18nStrings,\n    fetchBuckets: fetchBuckets,\n    selectableItemsTypes: selectableItemsTypes,\n    bucketsVisibleColumns: bucketsVisibleColumns,\n    bucketsIsItemDisabled: bucketsIsItemDisabled,\n    fetchObjects: fetchObjects,\n    objectsVisibleColumns: objectsVisibleColumns,\n    objectsIsItemDisabled: objectsIsItemDisabled,\n    fetchVersions: fetchVersions,\n    versionsVisibleColumns: versionsVisibleColumns,\n    versionsIsItemDisabled: versionsIsItemDisabled,\n    onSubmit: function (resource) {\n      fireNonCancelableEvent(onChange, {\n        resource: resource\n      });\n      setModalOpen(false);\n      modalWasSubmitted.current = true;\n    },\n    onDismiss: function () {\n      return setModalOpen(false);\n    }\n  };\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    ref: __internalRootRef\n  }), React.createElement(S3InContext, {\n    ref: inContextRef,\n    selectableItemsTypes: selectableItemsTypes,\n    i18nStrings: i18nStrings,\n    resource: resource,\n    viewHref: viewHref,\n    invalid: invalid,\n    inputAriaDescribedby: inputAriaDescribedby,\n    fetchVersions: fetchVersions,\n    onBrowse: function () {\n      return setModalOpen(true);\n    },\n    onChange: function (resource, errorText) {\n      return fireNonCancelableEvent(onChange, {\n        resource: resource,\n        errorText: errorText\n      });\n    }\n  }), !modalOpen && alert && React.createElement(InternalBox, {\n    className: styles.alert,\n    margin: {\n      top: 's'\n    }\n  }, alert), modalOpen && React.createElement(S3Modal, __assign({}, modalProps)));\n});\napplyDisplayName(S3ResourceSelector, 'S3ResourceSelector');\nexport default S3ResourceSelector;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/s3-resource-selector/index.js"],"names":["__assign","__rest","clsx","React","useState","useRef","useEffect","InternalBox","getBaseProps","fireNonCancelableEvent","useForwardFocus","applyDisplayName","S3InContext","S3Modal","styles","useBaseComponent","S3ResourceSelector","forwardRef","_a","ref","i18nStrings","alert","resource","viewHref","invalid","_b","selectableItemsTypes","inputAriaDescribedby","_c","bucketsVisibleColumns","bucketsIsItemDisabled","fetchBuckets","fetchObjects","_d","objectsVisibleColumns","objectsIsItemDisabled","fetchVersions","_e","versionsVisibleColumns","versionsIsItemDisabled","onChange","rest","__internalRootRef","_f","modalOpen","setModalOpen","inContextRef","modalWasSubmitted","current","focus","baseProps","modalProps","onSubmit","onDismiss","createElement","className","root","onBrowse","errorText","margin","top"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useState, useRef, useEffect } from 'react';\nimport InternalBox from '../box/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { S3InContext } from './s3-in-context';\nimport { S3Modal } from './s3-modal';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar S3ResourceSelector = React.forwardRef(function (_a, ref) {\n    var i18nStrings = _a.i18nStrings, alert = _a.alert, resource = _a.resource, viewHref = _a.viewHref, invalid = _a.invalid, _b = _a.selectableItemsTypes, selectableItemsTypes = _b === void 0 ? [] : _b, inputAriaDescribedby = _a.inputAriaDescribedby, _c = _a.bucketsVisibleColumns, bucketsVisibleColumns = _c === void 0 ? ['Name', 'CreationDate'] : _c, bucketsIsItemDisabled = _a.bucketsIsItemDisabled, fetchBuckets = _a.fetchBuckets, fetchObjects = _a.fetchObjects, _d = _a.objectsVisibleColumns, objectsVisibleColumns = _d === void 0 ? ['Key', 'LastModified', 'Size'] : _d, objectsIsItemDisabled = _a.objectsIsItemDisabled, fetchVersions = _a.fetchVersions, _e = _a.versionsVisibleColumns, versionsVisibleColumns = _e === void 0 ? ['ID', 'LastModified', 'Size'] : _e, versionsIsItemDisabled = _a.versionsIsItemDisabled, onChange = _a.onChange, rest = __rest(_a, [\"i18nStrings\", \"alert\", \"resource\", \"viewHref\", \"invalid\", \"selectableItemsTypes\", \"inputAriaDescribedby\", \"bucketsVisibleColumns\", \"bucketsIsItemDisabled\", \"fetchBuckets\", \"fetchObjects\", \"objectsVisibleColumns\", \"objectsIsItemDisabled\", \"fetchVersions\", \"versionsVisibleColumns\", \"versionsIsItemDisabled\", \"onChange\"]);\n    var __internalRootRef = useBaseComponent('S3ResourceSelector').__internalRootRef;\n    var _f = useState(false), modalOpen = _f[0], setModalOpen = _f[1];\n    var inContextRef = useRef(null);\n    var modalWasSubmitted = useRef(false);\n    useForwardFocus(ref, inContextRef);\n    useEffect(function () {\n        var _a;\n        if (!modalOpen && modalWasSubmitted.current) {\n            modalWasSubmitted.current = false;\n            (_a = inContextRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n    }, [modalOpen]);\n    var baseProps = getBaseProps(rest);\n    var modalProps = {\n        alert: alert,\n        i18nStrings: i18nStrings,\n        fetchBuckets: fetchBuckets,\n        selectableItemsTypes: selectableItemsTypes,\n        bucketsVisibleColumns: bucketsVisibleColumns,\n        bucketsIsItemDisabled: bucketsIsItemDisabled,\n        fetchObjects: fetchObjects,\n        objectsVisibleColumns: objectsVisibleColumns,\n        objectsIsItemDisabled: objectsIsItemDisabled,\n        fetchVersions: fetchVersions,\n        versionsVisibleColumns: versionsVisibleColumns,\n        versionsIsItemDisabled: versionsIsItemDisabled,\n        onSubmit: function (resource) {\n            fireNonCancelableEvent(onChange, { resource: resource });\n            setModalOpen(false);\n            modalWasSubmitted.current = true;\n        },\n        onDismiss: function () { return setModalOpen(false); }\n    };\n    return (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(styles.root, baseProps.className), ref: __internalRootRef }),\n        React.createElement(S3InContext, { ref: inContextRef, selectableItemsTypes: selectableItemsTypes, i18nStrings: i18nStrings, resource: resource, viewHref: viewHref, invalid: invalid, inputAriaDescribedby: inputAriaDescribedby, fetchVersions: fetchVersions, onBrowse: function () { return setModalOpen(true); }, onChange: function (resource, errorText) { return fireNonCancelableEvent(onChange, { resource: resource, errorText: errorText }); } }),\n        !modalOpen && alert && (React.createElement(InternalBox, { className: styles.alert, margin: { top: 's' } }, alert)),\n        modalOpen && React.createElement(S3Modal, __assign({}, modalProps))));\n});\napplyDisplayName(S3ResourceSelector, 'S3ResourceSelector');\nexport default S3ResourceSelector;\n"]},"metadata":{},"sourceType":"module"}