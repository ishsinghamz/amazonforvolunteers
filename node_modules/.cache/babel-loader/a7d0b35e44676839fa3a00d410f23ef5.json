{"ast":null,"code":"import { getOverflowParentDimensions, getOverflowParents } from '../../utils/scrollable-containers';\nvar AVAILABLE_SPACE_RESERVE = 50;\n\nvar getClosestParentDimensions = function (element) {\n  var parents = getOverflowParents(element).map(function (el) {\n    var _a = el.getBoundingClientRect(),\n        height = _a.height,\n        width = _a.width,\n        top = _a.top,\n        left = _a.left;\n\n    return {\n      height: height,\n      width: width,\n      top: top,\n      left: left\n    };\n  });\n  return parents.shift();\n};\n\nexport var getAvailableSpace = function (trigger, dropdown, expandToViewport) {\n  var overflowParents = getOverflowParentDimensions(dropdown, false, expandToViewport);\n\n  var _a = trigger.getBoundingClientRect(),\n      triggerBottom = _a.bottom,\n      triggerLeft = _a.left,\n      triggerRight = _a.right;\n\n  return overflowParents.reduce(function (_a, overflowParent) {\n    var above = _a.above,\n        below = _a.below,\n        left = _a.left,\n        right = _a.right;\n    var offsetTop = triggerBottom - overflowParent.top;\n    var currentAbove = offsetTop - trigger.offsetHeight - AVAILABLE_SPACE_RESERVE;\n    var currentBelow = overflowParent.height - offsetTop - AVAILABLE_SPACE_RESERVE;\n    var currentLeft = triggerRight - overflowParent.left - AVAILABLE_SPACE_RESERVE;\n    var currentRight = overflowParent.left + overflowParent.width - triggerLeft - AVAILABLE_SPACE_RESERVE;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport var getInteriorAvailableSpace = function (trigger, dropdown, expandToViewport) {\n  var overflowParents = getOverflowParentDimensions(dropdown, true, expandToViewport);\n\n  var _a = trigger.getBoundingClientRect(),\n      triggerBottom = _a.bottom,\n      triggerTop = _a.top,\n      triggerLeft = _a.left,\n      triggerRight = _a.right;\n\n  return overflowParents.reduce(function (_a, overflowParent) {\n    var above = _a.above,\n        below = _a.below,\n        left = _a.left,\n        right = _a.right;\n    var currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE;\n    var currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE;\n    var currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE;\n    var currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport var getDropdownPosition = function (trigger, dropdown, expandToViewport, minWidth, preferCenter) {\n  if (expandToViewport === void 0) {\n    expandToViewport = false;\n  }\n\n  if (preferCenter === void 0) {\n    preferCenter = false;\n  }\n\n  var availableSpace = getAvailableSpace(trigger, dropdown, expandToViewport);\n  var triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  var requiredWidth = dropdown.getBoundingClientRect().width;\n  var idealWidth = Math.max(requiredWidth, minWidth);\n  var dropLeft;\n  var left = null;\n  var width = idealWidth;\n\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false;\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n\n  if (preferCenter) {\n    var spillOver = (idealWidth - triggerWidth) / 2;\n    var availableOutsideLeft = availableSpace.left - triggerWidth;\n    var availableOutsideRight = availableSpace.right - triggerWidth;\n    var fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n\n  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  var availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp: dropUp,\n    dropLeft: dropLeft,\n    left: left === null ? 'auto' : left + \"px\",\n    height: croppedHeight + \"px\",\n    width: width + \"px\"\n  };\n};\nexport var getInteriorDropdownPosition = function (trigger, dropdown, expandToViewport) {\n  var availableSpace = getInteriorAvailableSpace(trigger, dropdown, expandToViewport);\n\n  var _a = trigger.getBoundingClientRect(),\n      triggerBottom = _a.bottom,\n      triggerTop = _a.top,\n      triggerWidth = _a.width;\n\n  var _b = getClosestParentDimensions(trigger),\n      parentDropdownTop = _b.top,\n      parentDropdownHeight = _b.height;\n\n  var dropLeft;\n  var width = dropdown.getBoundingClientRect().width;\n  var top = triggerTop - parentDropdownTop;\n\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n\n  var left = dropLeft ? 0 - width : triggerWidth;\n  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  var bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  var availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp: dropUp,\n    dropLeft: dropLeft,\n    height: croppedHeight + \"px\",\n    width: width + \"px\",\n    top: top + \"px\",\n    bottom: bottom + \"px\",\n    left: left + \"px\"\n  };\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/dropdown/dropdown-fit-handler.js"],"names":["getOverflowParentDimensions","getOverflowParents","AVAILABLE_SPACE_RESERVE","getClosestParentDimensions","element","parents","map","el","_a","getBoundingClientRect","height","width","top","left","shift","getAvailableSpace","trigger","dropdown","expandToViewport","overflowParents","triggerBottom","bottom","triggerLeft","triggerRight","right","reduce","overflowParent","above","below","offsetTop","currentAbove","offsetHeight","currentBelow","currentLeft","currentRight","Math","min","Number","MAX_VALUE","getInteriorAvailableSpace","triggerTop","getDropdownPosition","minWidth","preferCenter","availableSpace","triggerWidth","requiredWidth","idealWidth","max","dropLeft","spillOver","availableOutsideLeft","availableOutsideRight","fitsInCenter","dropUp","availableHeight","croppedHeight","floor","getInteriorDropdownPosition","_b","parentDropdownTop","parentDropdownHeight"],"mappings":"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","sourcesContent":["import { getOverflowParentDimensions, getOverflowParents } from '../../utils/scrollable-containers';\nvar AVAILABLE_SPACE_RESERVE = 50;\nvar getClosestParentDimensions = function (element) {\n    var parents = getOverflowParents(element).map(function (el) {\n        var _a = el.getBoundingClientRect(), height = _a.height, width = _a.width, top = _a.top, left = _a.left;\n        return {\n            height: height,\n            width: width,\n            top: top,\n            left: left\n        };\n    });\n    return parents.shift();\n};\nexport var getAvailableSpace = function (trigger, dropdown, expandToViewport) {\n    var overflowParents = getOverflowParentDimensions(dropdown, false, expandToViewport);\n    var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerLeft = _a.left, triggerRight = _a.right;\n    return overflowParents.reduce(function (_a, overflowParent) {\n        var above = _a.above, below = _a.below, left = _a.left, right = _a.right;\n        var offsetTop = triggerBottom - overflowParent.top;\n        var currentAbove = offsetTop - trigger.offsetHeight - AVAILABLE_SPACE_RESERVE;\n        var currentBelow = overflowParent.height - offsetTop - AVAILABLE_SPACE_RESERVE;\n        var currentLeft = triggerRight - overflowParent.left - AVAILABLE_SPACE_RESERVE;\n        var currentRight = overflowParent.left + overflowParent.width - triggerLeft - AVAILABLE_SPACE_RESERVE;\n        return {\n            above: Math.min(above, currentAbove),\n            below: Math.min(below, currentBelow),\n            left: Math.min(left, currentLeft),\n            right: Math.min(right, currentRight)\n        };\n    }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });\n};\nexport var getInteriorAvailableSpace = function (trigger, dropdown, expandToViewport) {\n    var overflowParents = getOverflowParentDimensions(dropdown, true, expandToViewport);\n    var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerTop = _a.top, triggerLeft = _a.left, triggerRight = _a.right;\n    return overflowParents.reduce(function (_a, overflowParent) {\n        var above = _a.above, below = _a.below, left = _a.left, right = _a.right;\n        var currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE;\n        var currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE;\n        var currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE;\n        var currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE;\n        return {\n            above: Math.min(above, currentAbove),\n            below: Math.min(below, currentBelow),\n            left: Math.min(left, currentLeft),\n            right: Math.min(right, currentRight)\n        };\n    }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });\n};\nexport var getDropdownPosition = function (trigger, dropdown, expandToViewport, minWidth, preferCenter) {\n    if (expandToViewport === void 0) { expandToViewport = false; }\n    if (preferCenter === void 0) { preferCenter = false; }\n    var availableSpace = getAvailableSpace(trigger, dropdown, expandToViewport);\n    var triggerWidth = trigger.getBoundingClientRect().width;\n    minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n    var requiredWidth = dropdown.getBoundingClientRect().width;\n    var idealWidth = Math.max(requiredWidth, minWidth);\n    var dropLeft;\n    var left = null;\n    var width = idealWidth;\n    if (idealWidth <= availableSpace.right) {\n        dropLeft = false;\n    }\n    else if (idealWidth <= availableSpace.left) {\n        dropLeft = true;\n    }\n    else {\n        dropLeft = availableSpace.left > availableSpace.right;\n        width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n    }\n    if (preferCenter) {\n        var spillOver = (idealWidth - triggerWidth) / 2;\n        var availableOutsideLeft = availableSpace.left - triggerWidth;\n        var availableOutsideRight = availableSpace.right - triggerWidth;\n        var fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n        if (fitsInCenter) {\n            left = -spillOver;\n        }\n    }\n    var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n    var availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n    var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n    return {\n        dropUp: dropUp,\n        dropLeft: dropLeft,\n        left: left === null ? 'auto' : left + \"px\",\n        height: croppedHeight + \"px\",\n        width: width + \"px\"\n    };\n};\nexport var getInteriorDropdownPosition = function (trigger, dropdown, expandToViewport) {\n    var availableSpace = getInteriorAvailableSpace(trigger, dropdown, expandToViewport);\n    var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerTop = _a.top, triggerWidth = _a.width;\n    var _b = getClosestParentDimensions(trigger), parentDropdownTop = _b.top, parentDropdownHeight = _b.height;\n    var dropLeft;\n    var width = dropdown.getBoundingClientRect().width;\n    var top = triggerTop - parentDropdownTop;\n    if (width <= availableSpace.right) {\n        dropLeft = false;\n    }\n    else if (width <= availableSpace.left) {\n        dropLeft = true;\n    }\n    else {\n        dropLeft = availableSpace.left > availableSpace.right;\n        width = Math.max(availableSpace.left, availableSpace.right);\n    }\n    var left = dropLeft ? 0 - width : triggerWidth;\n    var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n    var bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n    var availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n    var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n    return {\n        dropUp: dropUp,\n        dropLeft: dropLeft,\n        height: croppedHeight + \"px\",\n        width: width + \"px\",\n        top: top + \"px\",\n        bottom: bottom + \"px\",\n        left: left + \"px\"\n    };\n};\n"]},"metadata":{},"sourceType":"module"}