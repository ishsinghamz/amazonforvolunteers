{"ast":null,"code":"export default function makeScaledSeries(series, xScale, yScale) {\n  var xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  var scaleX = function (x) {\n    return (xScale.d3Scale(x) || 0) + xOffset;\n  };\n\n  var scaleY = function (y) {\n    return yScale.d3Scale(y) || 0;\n  };\n\n  var allScaledX = getAllScaledX(series, scaleX);\n\n  if (allScaledX.length === 0) {\n    allScaledX.push(NaN);\n  }\n\n  return series.reduce(function (acc, _a) {\n    var series = _a.series,\n        color = _a.color;\n\n    if (series.type === 'line') {\n      for (var _i = 0, _b = series.data; _i < _b.length; _i++) {\n        var datum = _b[_i];\n        acc.push({\n          x: scaleX(datum.x),\n          y: scaleY(datum.y),\n          datum: datum,\n          series: series,\n          color: color\n        });\n      }\n    } else if (series.type === 'threshold') {\n      for (var _c = 0, allScaledX_1 = allScaledX; _c < allScaledX_1.length; _c++) {\n        var x = allScaledX_1[_c];\n        acc.push({\n          x: x,\n          y: scaleY(series.y),\n          series: series,\n          color: color\n        });\n      }\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction getAllScaledX(series, scaleX) {\n  var addDataXSet = new Set();\n\n  for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\n    var s = series_1[_i].series;\n\n    if (s.type !== 'threshold') {\n      for (var _a = 0, _b = s.data; _a < _b.length; _a++) {\n        var d = _b[_a];\n        addDataXSet.add(scaleX(d.x));\n      }\n    }\n  }\n\n  var allDataX = [];\n  addDataXSet.forEach(function (x) {\n    return allDataX.push(x);\n  });\n  return allDataX;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/mixed-line-bar-chart/make-scaled-series.js"],"names":["makeScaledSeries","series","xScale","yScale","xOffset","isCategorical","Math","max","d3Scale","bandwidth","scaleX","x","scaleY","y","allScaledX","getAllScaledX","length","push","NaN","reduce","acc","_a","color","type","_i","_b","data","datum","_c","allScaledX_1","addDataXSet","Set","series_1","s","d","add","allDataX","forEach"],"mappings":"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","sourcesContent":["export default function makeScaledSeries(series, xScale, yScale) {\n    var xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;\n    var scaleX = function (x) { return (xScale.d3Scale(x) || 0) + xOffset; };\n    var scaleY = function (y) { return yScale.d3Scale(y) || 0; };\n    var allScaledX = getAllScaledX(series, scaleX);\n    if (allScaledX.length === 0) {\n        allScaledX.push(NaN);\n    }\n    return series.reduce(function (acc, _a) {\n        var series = _a.series, color = _a.color;\n        if (series.type === 'line') {\n            for (var _i = 0, _b = series.data; _i < _b.length; _i++) {\n                var datum = _b[_i];\n                acc.push({ x: scaleX(datum.x), y: scaleY(datum.y), datum: datum, series: series, color: color });\n            }\n        }\n        else if (series.type === 'threshold') {\n            for (var _c = 0, allScaledX_1 = allScaledX; _c < allScaledX_1.length; _c++) {\n                var x = allScaledX_1[_c];\n                acc.push({ x: x, y: scaleY(series.y), series: series, color: color });\n            }\n        }\n        return acc;\n    }, []);\n}\nfunction getAllScaledX(series, scaleX) {\n    var addDataXSet = new Set();\n    for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\n        var s = series_1[_i].series;\n        if (s.type !== 'threshold') {\n            for (var _a = 0, _b = s.data; _a < _b.length; _a++) {\n                var d = _b[_a];\n                addDataXSet.add(scaleX(d.x));\n            }\n        }\n    }\n    var allDataX = [];\n    addDataXSet.forEach(function (x) { return allDataX.push(x); });\n    return allDataX;\n}\n"]},"metadata":{},"sourceType":"module"}