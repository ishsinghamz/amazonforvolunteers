{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { useMemo } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport clsx from 'clsx';\nimport ButtonTrigger from '../../internal/components/button-trigger';\nimport styles from './styles.css.js';\nimport Option from '../../internal/components/option';\nimport { generateUniqueId } from '../../internal/hooks/use-unique-id';\nvar Trigger = React.forwardRef(function (_a, ref) {\n  var ariaLabelledby = _a.ariaLabelledby,\n      ariaDescribedby = _a.ariaDescribedby,\n      controlId = _a.controlId,\n      invalid = _a.invalid,\n      triggerProps = _a.triggerProps,\n      selectedOption = _a.selectedOption,\n      triggerVariant = _a.triggerVariant,\n      inFilteringToken = _a.inFilteringToken,\n      isOpen = _a.isOpen,\n      placeholder = _a.placeholder,\n      disabled = _a.disabled,\n      ariaLabel = _a.ariaLabel;\n  var id = useMemo(function () {\n    return controlId !== null && controlId !== void 0 ? controlId : generateUniqueId();\n  }, [controlId]);\n  var triggerContent = null;\n\n  if (!selectedOption) {\n    triggerContent = React.createElement(\"span\", {\n      \"aria-disabled\": \"true\",\n      className: clsx(styles.placeholder, styles.trigger),\n      id: triggerProps.ariaLabelledby\n    }, placeholder);\n  } else if (triggerVariant === 'option') {\n    triggerContent = React.createElement(Option, {\n      id: triggerProps.ariaLabelledby,\n      option: __assign(__assign({}, selectedOption), {\n        disabled: disabled\n      }),\n      triggerVariant: true\n    });\n  } else {\n    triggerContent = React.createElement(\"span\", {\n      id: triggerProps.ariaLabelledby,\n      className: styles.trigger\n    }, selectedOption.label || selectedOption.value);\n  }\n\n  return React.createElement(ButtonTrigger, __assign({}, triggerProps, {\n    id: id,\n    ref: mergeRefs([triggerProps.ref, ref]),\n    pressed: isOpen,\n    disabled: disabled,\n    invalid: invalid,\n    inFilteringToken: inFilteringToken,\n    ariaLabel: ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabelledby: [ariaLabelledby, triggerProps.ariaLabelledby].filter(function (label) {\n      return !!label;\n    }).join(' ')\n  }), triggerContent);\n});\nexport default Trigger;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/select/parts/trigger.js"],"names":["__assign","React","useMemo","mergeRefs","clsx","ButtonTrigger","styles","Option","generateUniqueId","Trigger","forwardRef","_a","ref","ariaLabelledby","ariaDescribedby","controlId","invalid","triggerProps","selectedOption","triggerVariant","inFilteringToken","isOpen","placeholder","disabled","ariaLabel","id","triggerContent","createElement","className","trigger","option","label","value","pressed","filter","join"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,IAAIC,OAAO,GAAGR,KAAK,CAACS,UAAN,CAAiB,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AAC9C,MAAIC,cAAc,GAAGF,EAAE,CAACE,cAAxB;AAAA,MAAwCC,eAAe,GAAGH,EAAE,CAACG,eAA7D;AAAA,MAA8EC,SAAS,GAAGJ,EAAE,CAACI,SAA7F;AAAA,MAAwGC,OAAO,GAAGL,EAAE,CAACK,OAArH;AAAA,MAA8HC,YAAY,GAAGN,EAAE,CAACM,YAAhJ;AAAA,MAA8JC,cAAc,GAAGP,EAAE,CAACO,cAAlL;AAAA,MAAkMC,cAAc,GAAGR,EAAE,CAACQ,cAAtN;AAAA,MAAsOC,gBAAgB,GAAGT,EAAE,CAACS,gBAA5P;AAAA,MAA8QC,MAAM,GAAGV,EAAE,CAACU,MAA1R;AAAA,MAAkSC,WAAW,GAAGX,EAAE,CAACW,WAAnT;AAAA,MAAgUC,QAAQ,GAAGZ,EAAE,CAACY,QAA9U;AAAA,MAAwVC,SAAS,GAAGb,EAAE,CAACa,SAAvW;AACA,MAAIC,EAAE,GAAGvB,OAAO,CAAC,YAAY;AAAE,WAAOa,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6CA,SAA7C,GAAyDP,gBAAgB,EAAhF;AAAqF,GAApG,EAAsG,CAACO,SAAD,CAAtG,CAAhB;AACA,MAAIW,cAAc,GAAG,IAArB;;AACA,MAAI,CAACR,cAAL,EAAqB;AACjBQ,IAAAA,cAAc,GAAIzB,KAAK,CAAC0B,aAAN,CAAoB,MAApB,EAA4B;AAAE,uBAAiB,MAAnB;AAA2BC,MAAAA,SAAS,EAAExB,IAAI,CAACE,MAAM,CAACgB,WAAR,EAAqBhB,MAAM,CAACuB,OAA5B,CAA1C;AAAgFJ,MAAAA,EAAE,EAAER,YAAY,CAACJ;AAAjG,KAA5B,EAA+IS,WAA/I,CAAlB;AACH,GAFD,MAGK,IAAIH,cAAc,KAAK,QAAvB,EAAiC;AAClCO,IAAAA,cAAc,GAAIzB,KAAK,CAAC0B,aAAN,CAAoBpB,MAApB,EAA4B;AAAEkB,MAAAA,EAAE,EAAER,YAAY,CAACJ,cAAnB;AAAmCiB,MAAAA,MAAM,EAAE9B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkB,cAAL,CAAT,EAA+B;AAAEK,QAAAA,QAAQ,EAAEA;AAAZ,OAA/B,CAAnD;AAA2GJ,MAAAA,cAAc,EAAE;AAA3H,KAA5B,CAAlB;AACH,GAFI,MAGA;AACDO,IAAAA,cAAc,GAAIzB,KAAK,CAAC0B,aAAN,CAAoB,MAApB,EAA4B;AAAEF,MAAAA,EAAE,EAAER,YAAY,CAACJ,cAAnB;AAAmCe,MAAAA,SAAS,EAAEtB,MAAM,CAACuB;AAArD,KAA5B,EAA4FX,cAAc,CAACa,KAAf,IAAwBb,cAAc,CAACc,KAAnI,CAAlB;AACH;;AACD,SAAQ/B,KAAK,CAAC0B,aAAN,CAAoBtB,aAApB,EAAmCL,QAAQ,CAAC,EAAD,EAAKiB,YAAL,EAAmB;AAAEQ,IAAAA,EAAE,EAAEA,EAAN;AAAUb,IAAAA,GAAG,EAAET,SAAS,CAAC,CAACc,YAAY,CAACL,GAAd,EAAmBA,GAAnB,CAAD,CAAxB;AAAmDqB,IAAAA,OAAO,EAAEZ,MAA5D;AAAoEE,IAAAA,QAAQ,EAAEA,QAA9E;AAAwFP,IAAAA,OAAO,EAAEA,OAAjG;AAA0GI,IAAAA,gBAAgB,EAAEA,gBAA5H;AAA8II,IAAAA,SAAS,EAAEA,SAAzJ;AAAoKV,IAAAA,eAAe,EAAEA,eAArL;AAAsMD,IAAAA,cAAc,EAAE,CAACA,cAAD,EAAiBI,YAAY,CAACJ,cAA9B,EAA8CqB,MAA9C,CAAqD,UAAUH,KAAV,EAAiB;AAAE,aAAO,CAAC,CAACA,KAAT;AAAiB,KAAzF,EAA2FI,IAA3F,CAAgG,GAAhG;AAAtN,GAAnB,CAA3C,EAA6XT,cAA7X,CAAR;AACH,CAda,CAAd;AAeA,eAAejB,OAAf","sourcesContent":["import { __assign } from \"tslib\";\nimport React, { useMemo } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport clsx from 'clsx';\nimport ButtonTrigger from '../../internal/components/button-trigger';\nimport styles from './styles.css.js';\nimport Option from '../../internal/components/option';\nimport { generateUniqueId } from '../../internal/hooks/use-unique-id';\nvar Trigger = React.forwardRef(function (_a, ref) {\n    var ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby, controlId = _a.controlId, invalid = _a.invalid, triggerProps = _a.triggerProps, selectedOption = _a.selectedOption, triggerVariant = _a.triggerVariant, inFilteringToken = _a.inFilteringToken, isOpen = _a.isOpen, placeholder = _a.placeholder, disabled = _a.disabled, ariaLabel = _a.ariaLabel;\n    var id = useMemo(function () { return controlId !== null && controlId !== void 0 ? controlId : generateUniqueId(); }, [controlId]);\n    var triggerContent = null;\n    if (!selectedOption) {\n        triggerContent = (React.createElement(\"span\", { \"aria-disabled\": \"true\", className: clsx(styles.placeholder, styles.trigger), id: triggerProps.ariaLabelledby }, placeholder));\n    }\n    else if (triggerVariant === 'option') {\n        triggerContent = (React.createElement(Option, { id: triggerProps.ariaLabelledby, option: __assign(__assign({}, selectedOption), { disabled: disabled }), triggerVariant: true }));\n    }\n    else {\n        triggerContent = (React.createElement(\"span\", { id: triggerProps.ariaLabelledby, className: styles.trigger }, selectedOption.label || selectedOption.value));\n    }\n    return (React.createElement(ButtonTrigger, __assign({}, triggerProps, { id: id, ref: mergeRefs([triggerProps.ref, ref]), pressed: isOpen, disabled: disabled, invalid: invalid, inFilteringToken: inFilteringToken, ariaLabel: ariaLabel, ariaDescribedby: ariaDescribedby, ariaLabelledby: [ariaLabelledby, triggerProps.ariaLabelledby].filter(function (label) { return !!label; }).join(' ') }), triggerContent));\n});\nexport default Trigger;\n"]},"metadata":{},"sourceType":"module"}