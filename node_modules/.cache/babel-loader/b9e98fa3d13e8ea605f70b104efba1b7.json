{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport styles from './styles.css.js';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { getBaseProps } from '../internal/base-component';\nimport { useContainerQuery } from '../internal/hooks/container-queries/use-container-query';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { focusMarkers, useFocusMove, useSelection } from '../table/use-selection';\nimport SelectionControl from '../table/selection-control';\nimport InternalContainer from '../container/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport { useSupportsStickyHeader } from '../container/use-sticky-header';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport mergeRefs from 'react-merge-refs';\nvar Cards = React.forwardRef(function (_a, ref) {\n  var _b = _a.items,\n      items = _b === void 0 ? [] : _b,\n      cardDefinition = _a.cardDefinition,\n      _c = _a.cardsPerRow,\n      cardsPerRow = _c === void 0 ? [] : _c,\n      header = _a.header,\n      filter = _a.filter,\n      pagination = _a.pagination,\n      preferences = _a.preferences,\n      empty = _a.empty,\n      loading = _a.loading,\n      loadingText = _a.loadingText,\n      trackBy = _a.trackBy,\n      selectedItems = _a.selectedItems,\n      selectionType = _a.selectionType,\n      isItemDisabled = _a.isItemDisabled,\n      onSelectionChange = _a.onSelectionChange,\n      ariaLabels = _a.ariaLabels,\n      visibleSections = _a.visibleSections,\n      stickyHeader = _a.stickyHeader,\n      stickyHeaderVerticalOffset = _a.stickyHeaderVerticalOffset,\n      _d = _a.variant,\n      variant = _d === void 0 ? 'container' : _d,\n      rest = __rest(_a, [\"items\", \"cardDefinition\", \"cardsPerRow\", \"header\", \"filter\", \"pagination\", \"preferences\", \"empty\", \"loading\", \"loadingText\", \"trackBy\", \"selectedItems\", \"selectionType\", \"isItemDisabled\", \"onSelectionChange\", \"ariaLabels\", \"visibleSections\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"variant\"]);\n\n  var __internalRootRef = useBaseComponent('Cards').__internalRootRef;\n\n  var baseProps = getBaseProps(rest);\n  var isRefresh = useVisualRefresh(__internalRootRef);\n  var computedVariant = isRefresh ? variant : 'container';\n\n  var _e = useContainerQuery(function (_a) {\n    var width = _a.width;\n    return getCardsPerRow(width, cardsPerRow);\n  }, [cardsPerRow]),\n      columns = _e[0],\n      containerRef = _e[1];\n\n  var _f = useSelection({\n    items: items,\n    trackBy: trackBy,\n    selectedItems: selectedItems,\n    selectionType: selectionType,\n    isItemDisabled: isItemDisabled,\n    onSelectionChange: onSelectionChange,\n    ariaLabels: ariaLabels\n  }),\n      isItemSelected = _f.isItemSelected,\n      getItemSelectionProps = _f.getItemSelectionProps,\n      updateShiftToggle = _f.updateShiftToggle;\n\n  var hasToolsHeader = header || filter || pagination || preferences;\n  var headerRef = useRef(null);\n\n  var _g = stickyScrolling(containerRef, headerRef),\n      scrollToTop = _g.scrollToTop,\n      scrollToItem = _g.scrollToItem;\n\n  stickyHeader = useSupportsStickyHeader() && stickyHeader;\n\n  var onCardFocus = function (event) {\n    if (stickyHeader) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToTop: function () {\n        if (stickyHeader) {\n          scrollToTop();\n        }\n      }\n    };\n  }, [stickyHeader, scrollToTop]);\n  var status;\n\n  if (loading) {\n    status = React.createElement(\"div\", {\n      className: styles.loading\n    }, React.createElement(InternalStatusIndicator, {\n      type: \"loading\"\n    }, loadingText));\n  } else if (empty && !items.length) {\n    status = React.createElement(\"div\", {\n      className: styles.empty\n    }, empty);\n  }\n\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergeRefs([containerRef, __internalRootRef])\n  }), React.createElement(InternalContainer, {\n    header: hasToolsHeader && React.createElement(\"div\", {\n      ref: headerRef,\n      className: clsx(styles.header, isRefresh && styles['header-refresh'], styles[\"header-variant-\" + computedVariant])\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences\n    })),\n    disableContentPaddings: true,\n    disableHeaderPaddings: true,\n    variant: computedVariant === 'container' ? 'embedded' : computedVariant,\n    __stickyHeader: stickyHeader,\n    __stickyOffset: stickyHeaderVerticalOffset,\n    __disableHeaderDivider: true\n  }, React.createElement(\"div\", {\n    className: clsx(hasToolsHeader && styles['has-header'])\n  }, status !== null && status !== void 0 ? status : React.createElement(CardsList, {\n    items: items,\n    cardDefinition: cardDefinition,\n    trackBy: trackBy,\n    selectionType: selectionType,\n    columns: columns,\n    isItemSelected: isItemSelected,\n    getItemSelectionProps: getItemSelectionProps,\n    visibleSections: visibleSections,\n    updateShiftToggle: updateShiftToggle,\n    onFocus: onCardFocus\n  }))));\n});\nexport default Cards;\n\nvar CardsList = function (_a) {\n  var items = _a.items,\n      cardDefinition = _a.cardDefinition,\n      trackBy = _a.trackBy,\n      selectionType = _a.selectionType,\n      columns = _a.columns,\n      isItemSelected = _a.isItemSelected,\n      getItemSelectionProps = _a.getItemSelectionProps,\n      visibleSections = _a.visibleSections,\n      updateShiftToggle = _a.updateShiftToggle,\n      onFocus = _a.onFocus;\n  var selectable = !!selectionType;\n\n  var _b = useFocusMove(selectionType, items.length),\n      moveFocusDown = _b.moveFocusDown,\n      moveFocusUp = _b.moveFocusUp;\n\n  var visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections ? visibleSectionsDefinition.filter(function (section) {\n    return section.id && visibleSections.indexOf(section.id) !== -1;\n  }) : visibleSectionsDefinition;\n  return React.createElement(\"ol\", __assign({\n    className: clsx(styles.list, styles[\"list-grid-\" + (columns || 1)])\n  }, focusMarkers && focusMarkers.root), items.map(function (item, index) {\n    var _a;\n\n    return React.createElement(\"li\", __assign({\n      className: clsx(styles.card, (_a = {}, _a[styles['card-selectable']] = selectable, _a[styles['card-selected']] = selectable && isItemSelected(item), _a)),\n      key: getItemKey(trackBy, item, index),\n      onFocus: onFocus\n    }, focusMarkers && focusMarkers.item), React.createElement(\"div\", {\n      className: styles['card-inner']\n    }, React.createElement(\"div\", {\n      className: styles['card-header']\n    }, React.createElement(\"span\", {\n      className: styles['card-header-inner']\n    }, cardDefinition.header ? cardDefinition.header(item) : ''), selectable && React.createElement(SelectionControl, __assign({\n      className: styles['selection-control'],\n      rootTag: 'div',\n      onFocusDown: moveFocusDown,\n      onFocusUp: moveFocusUp,\n      onShiftToggle: updateShiftToggle\n    }, getItemSelectionProps(item)))), visibleSectionsDefinition.map(function (_a, index) {\n      var _b = _a.width,\n          width = _b === void 0 ? 100 : _b,\n          header = _a.header,\n          content = _a.content,\n          id = _a.id;\n      return React.createElement(\"div\", {\n        key: id || index,\n        className: styles.section,\n        style: {\n          width: width + \"%\"\n        }\n      }, header ? React.createElement(\"div\", {\n        className: styles['section-header']\n      }, header) : '', content ? React.createElement(\"div\", {\n        className: styles['section-content']\n      }, content(item)) : '');\n    })));\n  }));\n};\n\napplyDisplayName(Cards, 'Cards');","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/cards/index.js"],"names":["__assign","__rest","clsx","React","useImperativeHandle","useRef","styles","getCardsPerRow","getBaseProps","useContainerQuery","ToolsHeader","getItemKey","focusMarkers","useFocusMove","useSelection","SelectionControl","InternalContainer","InternalStatusIndicator","applyDisplayName","stickyScrolling","useSupportsStickyHeader","useBaseComponent","useVisualRefresh","mergeRefs","Cards","forwardRef","_a","ref","_b","items","cardDefinition","_c","cardsPerRow","header","filter","pagination","preferences","empty","loading","loadingText","trackBy","selectedItems","selectionType","isItemDisabled","onSelectionChange","ariaLabels","visibleSections","stickyHeader","stickyHeaderVerticalOffset","_d","variant","rest","__internalRootRef","baseProps","isRefresh","computedVariant","_e","width","columns","containerRef","_f","isItemSelected","getItemSelectionProps","updateShiftToggle","hasToolsHeader","headerRef","_g","scrollToTop","scrollToItem","onCardFocus","event","currentTarget","status","createElement","className","type","length","root","disableContentPaddings","disableHeaderPaddings","__stickyHeader","__stickyOffset","__disableHeaderDivider","CardsList","onFocus","selectable","moveFocusDown","moveFocusUp","visibleSectionsDefinition","sections","section","id","indexOf","list","map","item","index","card","key","rootTag","onFocusDown","onFocusUp","onShiftToggle","content","style"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport styles from './styles.css.js';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { getBaseProps } from '../internal/base-component';\nimport { useContainerQuery } from '../internal/hooks/container-queries/use-container-query';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { focusMarkers, useFocusMove, useSelection } from '../table/use-selection';\nimport SelectionControl from '../table/selection-control';\nimport InternalContainer from '../container/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport { useSupportsStickyHeader } from '../container/use-sticky-header';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport mergeRefs from 'react-merge-refs';\nvar Cards = React.forwardRef(function (_a, ref) {\n    var _b = _a.items, items = _b === void 0 ? [] : _b, cardDefinition = _a.cardDefinition, _c = _a.cardsPerRow, cardsPerRow = _c === void 0 ? [] : _c, header = _a.header, filter = _a.filter, pagination = _a.pagination, preferences = _a.preferences, empty = _a.empty, loading = _a.loading, loadingText = _a.loadingText, trackBy = _a.trackBy, selectedItems = _a.selectedItems, selectionType = _a.selectionType, isItemDisabled = _a.isItemDisabled, onSelectionChange = _a.onSelectionChange, ariaLabels = _a.ariaLabels, visibleSections = _a.visibleSections, stickyHeader = _a.stickyHeader, stickyHeaderVerticalOffset = _a.stickyHeaderVerticalOffset, _d = _a.variant, variant = _d === void 0 ? 'container' : _d, rest = __rest(_a, [\"items\", \"cardDefinition\", \"cardsPerRow\", \"header\", \"filter\", \"pagination\", \"preferences\", \"empty\", \"loading\", \"loadingText\", \"trackBy\", \"selectedItems\", \"selectionType\", \"isItemDisabled\", \"onSelectionChange\", \"ariaLabels\", \"visibleSections\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"variant\"]);\n    var __internalRootRef = useBaseComponent('Cards').__internalRootRef;\n    var baseProps = getBaseProps(rest);\n    var isRefresh = useVisualRefresh(__internalRootRef);\n    var computedVariant = isRefresh ? variant : 'container';\n    var _e = useContainerQuery(function (_a) {\n        var width = _a.width;\n        return getCardsPerRow(width, cardsPerRow);\n    }, [cardsPerRow]), columns = _e[0], containerRef = _e[1];\n    var _f = useSelection({\n        items: items,\n        trackBy: trackBy,\n        selectedItems: selectedItems,\n        selectionType: selectionType,\n        isItemDisabled: isItemDisabled,\n        onSelectionChange: onSelectionChange,\n        ariaLabels: ariaLabels\n    }), isItemSelected = _f.isItemSelected, getItemSelectionProps = _f.getItemSelectionProps, updateShiftToggle = _f.updateShiftToggle;\n    var hasToolsHeader = header || filter || pagination || preferences;\n    var headerRef = useRef(null);\n    var _g = stickyScrolling(containerRef, headerRef), scrollToTop = _g.scrollToTop, scrollToItem = _g.scrollToItem;\n    stickyHeader = useSupportsStickyHeader() && stickyHeader;\n    var onCardFocus = function (event) {\n        if (stickyHeader) {\n            scrollToItem(event.currentTarget);\n        }\n    };\n    useImperativeHandle(ref, function () { return ({\n        scrollToTop: function () {\n            if (stickyHeader) {\n                scrollToTop();\n            }\n        }\n    }); }, [stickyHeader, scrollToTop]);\n    var status;\n    if (loading) {\n        status = (React.createElement(\"div\", { className: styles.loading },\n            React.createElement(InternalStatusIndicator, { type: \"loading\" }, loadingText)));\n    }\n    else if (empty && !items.length) {\n        status = React.createElement(\"div\", { className: styles.empty }, empty);\n    }\n    return (React.createElement(\"div\", __assign({}, baseProps, { className: clsx(baseProps.className, styles.root), ref: mergeRefs([containerRef, __internalRootRef]) }),\n        React.createElement(InternalContainer, { header: hasToolsHeader && (React.createElement(\"div\", { ref: headerRef, className: clsx(styles.header, isRefresh && styles['header-refresh'], styles[\"header-variant-\" + computedVariant]) },\n                React.createElement(ToolsHeader, { header: header, filter: filter, pagination: pagination, preferences: preferences }))), disableContentPaddings: true, disableHeaderPaddings: true, variant: computedVariant === 'container' ? 'embedded' : computedVariant, __stickyHeader: stickyHeader, __stickyOffset: stickyHeaderVerticalOffset, __disableHeaderDivider: true },\n            React.createElement(\"div\", { className: clsx(hasToolsHeader && styles['has-header']) }, status !== null && status !== void 0 ? status : (React.createElement(CardsList, { items: items, cardDefinition: cardDefinition, trackBy: trackBy, selectionType: selectionType, columns: columns, isItemSelected: isItemSelected, getItemSelectionProps: getItemSelectionProps, visibleSections: visibleSections, updateShiftToggle: updateShiftToggle, onFocus: onCardFocus }))))));\n});\nexport default Cards;\nvar CardsList = function (_a) {\n    var items = _a.items, cardDefinition = _a.cardDefinition, trackBy = _a.trackBy, selectionType = _a.selectionType, columns = _a.columns, isItemSelected = _a.isItemSelected, getItemSelectionProps = _a.getItemSelectionProps, visibleSections = _a.visibleSections, updateShiftToggle = _a.updateShiftToggle, onFocus = _a.onFocus;\n    var selectable = !!selectionType;\n    var _b = useFocusMove(selectionType, items.length), moveFocusDown = _b.moveFocusDown, moveFocusUp = _b.moveFocusUp;\n    var visibleSectionsDefinition = cardDefinition.sections || [];\n    visibleSectionsDefinition = visibleSections\n        ? visibleSectionsDefinition.filter(function (section) { return section.id && visibleSections.indexOf(section.id) !== -1; })\n        : visibleSectionsDefinition;\n    return (React.createElement(\"ol\", __assign({ className: clsx(styles.list, styles[\"list-grid-\" + (columns || 1)]) }, (focusMarkers && focusMarkers.root)), items.map(function (item, index) {\n        var _a;\n        return (React.createElement(\"li\", __assign({ className: clsx(styles.card, (_a = {},\n                _a[styles['card-selectable']] = selectable,\n                _a[styles['card-selected']] = selectable && isItemSelected(item),\n                _a)), key: getItemKey(trackBy, item, index), onFocus: onFocus }, (focusMarkers && focusMarkers.item)),\n            React.createElement(\"div\", { className: styles['card-inner'] },\n                React.createElement(\"div\", { className: styles['card-header'] },\n                    React.createElement(\"span\", { className: styles['card-header-inner'] }, cardDefinition.header ? cardDefinition.header(item) : ''),\n                    selectable && (React.createElement(SelectionControl, __assign({ className: styles['selection-control'], rootTag: 'div', onFocusDown: moveFocusDown, onFocusUp: moveFocusUp, onShiftToggle: updateShiftToggle }, getItemSelectionProps(item))))),\n                visibleSectionsDefinition.map(function (_a, index) {\n                    var _b = _a.width, width = _b === void 0 ? 100 : _b, header = _a.header, content = _a.content, id = _a.id;\n                    return (React.createElement(\"div\", { key: id || index, className: styles.section, style: { width: width + \"%\" } },\n                        header ? React.createElement(\"div\", { className: styles['section-header'] }, header) : '',\n                        content ? React.createElement(\"div\", { className: styles['section-content'] }, content(item)) : ''));\n                }))));\n    })));\n};\napplyDisplayName(Cards, 'Cards');\n"]},"metadata":{},"sourceType":"module"}