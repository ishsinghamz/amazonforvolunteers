{"ast":null,"code":"import { __assign } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default function RadioButton(_a) {\n  var _b, _c;\n\n  var name = _a.name,\n      label = _a.label,\n      value = _a.value,\n      checked = _a.checked,\n      withoutLabel = _a.withoutLabel,\n      description = _a.description,\n      disabled = _a.disabled,\n      controlId = _a.controlId,\n      onChange = _a.onChange;\n  var radioRef = useRef(null);\n  var isVisualRefresh = useVisualRefresh(radioRef);\n  return React.createElement(AbstractSwitch, {\n    className: clsx(styles.radio, description && styles['radio--has-description']),\n    controlClassName: styles['radio-control'],\n    label: label,\n    description: description,\n    disabled: disabled,\n    controlId: controlId,\n    nativeControl: function (nativeControlProps) {\n      return React.createElement(\"input\", __assign({}, nativeControlProps, {\n        className: styles.input,\n        type: \"radio\",\n        name: name,\n        value: value,\n        checked: checked,\n        onChange: onChange && function () {\n          return fireNonCancelableEvent(onChange, {\n            value: value\n          });\n        }\n      }));\n    },\n    styledControl: React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      focusable: \"false\",\n      \"aria-hidden\": \"true\",\n      ref: radioRef\n    }, React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-border'], (_b = {}, _b[styles['styled-circle-disabled']] = disabled, _b)),\n      strokeWidth: isVisualRefresh ? 12 : 8,\n      cx: 50,\n      cy: 50,\n      r: isVisualRefresh ? 44 : 46\n    }), React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-fill'], (_c = {}, _c[styles['styled-circle-disabled']] = disabled, _c[styles['styled-circle-checked']] = checked, _c)),\n      strokeWidth: 30,\n      cx: 50,\n      cy: 50,\n      r: 35\n    })),\n    withoutLabel: withoutLabel\n  });\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/radio-group/radio-button.js"],"names":["__assign","clsx","React","useRef","AbstractSwitch","fireNonCancelableEvent","useVisualRefresh","styles","RadioButton","_a","_b","_c","name","label","value","checked","withoutLabel","description","disabled","controlId","onChange","radioRef","isVisualRefresh","createElement","className","radio","controlClassName","nativeControl","nativeControlProps","input","type","styledControl","viewBox","focusable","ref","strokeWidth","cx","cy","r"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default function RadioButton(_a) {\n    var _b, _c;\n    var name = _a.name, label = _a.label, value = _a.value, checked = _a.checked, withoutLabel = _a.withoutLabel, description = _a.description, disabled = _a.disabled, controlId = _a.controlId, onChange = _a.onChange;\n    var radioRef = useRef(null);\n    var isVisualRefresh = useVisualRefresh(radioRef);\n    return (React.createElement(AbstractSwitch, { className: clsx(styles.radio, description && styles['radio--has-description']), controlClassName: styles['radio-control'], label: label, description: description, disabled: disabled, controlId: controlId, nativeControl: function (nativeControlProps) { return (React.createElement(\"input\", __assign({}, nativeControlProps, { className: styles.input, type: \"radio\", name: name, value: value, checked: checked, onChange: onChange && (function () { return fireNonCancelableEvent(onChange, { value: value }); }) }))); }, styledControl: React.createElement(\"svg\", { viewBox: \"0 0 100 100\", focusable: \"false\", \"aria-hidden\": \"true\", ref: radioRef },\n            React.createElement(\"circle\", { className: clsx(styles['styled-circle-border'], (_b = {}, _b[styles['styled-circle-disabled']] = disabled, _b)), strokeWidth: isVisualRefresh ? 12 : 8, cx: 50, cy: 50, r: isVisualRefresh ? 44 : 46 }),\n            React.createElement(\"circle\", { className: clsx(styles['styled-circle-fill'], (_c = {},\n                    _c[styles['styled-circle-disabled']] = disabled,\n                    _c[styles['styled-circle-checked']] = checked,\n                    _c)), strokeWidth: 30, cx: 50, cy: 50, r: 35 })), withoutLabel: withoutLabel }));\n}\n"]},"metadata":{},"sourceType":"module"}