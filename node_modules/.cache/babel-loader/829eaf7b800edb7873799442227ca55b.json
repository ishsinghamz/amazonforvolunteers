{"ast":null,"code":"import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../button/internal';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport splitPanelStyles from '../../split-panel/styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nimport { useFocusControl } from '../utils/use-focus-control';\nimport { Transition } from '../../internal/components/transition';\nimport customCssProps from '../../internal/generated/custom-css-properties';\nexport default function Tools(_a) {\n  var children = _a.children;\n\n  var _b = useContext(AppLayoutContext),\n      ariaLabels = _b.ariaLabels,\n      handleSplitPanelClick = _b.handleSplitPanelClick,\n      handleToolsClick = _b.handleToolsClick,\n      hasDefaultToolsWidth = _b.hasDefaultToolsWidth,\n      isNavigationOpen = _b.isNavigationOpen,\n      isMobile = _b.isMobile,\n      isSplitPanelOpen = _b.isSplitPanelOpen,\n      isToolsOpen = _b.isToolsOpen,\n      splitPanel = _b.splitPanel,\n      tools = _b.tools,\n      toolsHide = _b.toolsHide,\n      toolsWidth = _b.toolsWidth,\n      isAnyPanelOpen = _b.isAnyPanelOpen,\n      navigationHide = _b.navigationHide;\n\n  var _c = useContext(SplitPanelContext),\n      splitPanelPosition = _c.position,\n      openButtonAriaLabel = _c.openButtonAriaLabel;\n\n  var hasSplitPanel = getSplitPanelStatus(splitPanel, splitPanelPosition);\n  var hasToolsForm = getToolsFormStatus(hasSplitPanel, isMobile, isSplitPanelOpen, isToolsOpen, toolsHide);\n  var hasToolsFormPersistence = getToolsFormPersistence(hasSplitPanel, isSplitPanelOpen, isToolsOpen, toolsHide);\n  var focusRefs = useFocusControl(isToolsOpen);\n\n  if (toolsHide && !hasSplitPanel) {\n    return null;\n  }\n\n  var isUnfocusable = isMobile && isAnyPanelOpen && isNavigationOpen && !navigationHide;\n  return React.createElement(Transition, {\n    \"in\": isToolsOpen !== null && isToolsOpen !== void 0 ? isToolsOpen : false\n  }, function (state, transitionEventsRef) {\n    var _a, _b;\n\n    var _c, _d, _e;\n\n    return React.createElement(\"div\", {\n      className: clsx(styles['tools-container'], (_a = {}, _a[testutilStyles['drawer-closed']] = !isToolsOpen, _a[styles.unfocusable] = isUnfocusable, _a)),\n      style: (_b = {}, _b[customCssProps.toolsAnimationStartingOpacity] = \"\" + (hasSplitPanel && isSplitPanelOpen ? 1 : 0), _b[customCssProps.toolsWidth] = hasDefaultToolsWidth ? '' : toolsWidth + \"px\", _b)\n    }, children, !toolsHide && React.createElement(\"aside\", {\n      \"aria-hidden\": !isToolsOpen ? true : false,\n      \"aria-label\": (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _c !== void 0 ? _c : undefined,\n      className: clsx(styles.tools, state === 'entering' && styles.animating, testutilStyles.tools),\n      ref: state !== 'exiting' ? transitionEventsRef : undefined,\n      \"data-is-tools-open\": isToolsOpen ? true : false,\n      \"data-has-tools-form-persistence\": hasToolsFormPersistence ? true : false\n    }, React.createElement(\"div\", {\n      className: clsx(styles['animated-content'])\n    }, React.createElement(\"div\", {\n      className: clsx(styles['hide-tools'])\n    }, React.createElement(InternalButton, {\n      ariaLabel: (_d = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsClose) !== null && _d !== void 0 ? _d : undefined,\n      iconName: isMobile ? 'close' : 'angle-right',\n      onClick: function () {\n        return handleToolsClick(false);\n      },\n      variant: \"icon\",\n      formAction: \"none\",\n      className: testutilStyles['tools-close'],\n      ref: focusRefs.close\n    })), tools)), !isMobile && React.createElement(\"aside\", {\n      \"aria-hidden\": !hasToolsForm ? true : false,\n      \"aria-label\": (_e = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _e !== void 0 ? _e : undefined,\n      className: clsx(styles['show-tools'], splitPanelStyles.root, state === 'exiting' && styles.animating),\n      ref: state === 'exiting' ? transitionEventsRef : undefined,\n      \"data-has-tools-form\": hasToolsForm ? true : false,\n      \"data-has-tools-form-persistence\": hasToolsFormPersistence ? true : false\n    }, !toolsHide && React.createElement(TriggerButton, {\n      ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsToggle,\n      iconName: \"status-info\",\n      onClick: function () {\n        return handleToolsClick(!isToolsOpen);\n      },\n      selected: hasSplitPanel && isToolsOpen,\n      className: testutilStyles['tools-toggle'],\n      ref: focusRefs.toggle\n    }), hasSplitPanel && React.createElement(TriggerButton, {\n      ariaLabel: openButtonAriaLabel,\n      iconName: \"view-vertical\",\n      onClick: function () {\n        return handleSplitPanelClick();\n      },\n      selected: hasSplitPanel && isSplitPanelOpen,\n      className: splitPanelStyles['open-button']\n    })));\n  });\n}\nexport function getToolsDefaultState(isMobile, stateFromProps) {\n  var isToolsOpen;\n\n  if (isMobile || stateFromProps === undefined) {\n    isToolsOpen = false;\n  } else {\n    isToolsOpen = stateFromProps;\n  }\n\n  return isToolsOpen;\n}\n\nfunction getSplitPanelStatus(splitPanel, splitPanelPosition) {\n  return splitPanel && splitPanelPosition === 'side' ? true : false;\n}\n\nfunction getToolsFormStatus(hasSplitPanel, isMobile, isSplitPanelOpen, isToolsOpen, toolsHide) {\n  var hasToolsForm = false;\n\n  if (!isMobile) {\n    if (hasSplitPanel && !toolsHide) {\n      hasToolsForm = true;\n    }\n\n    if (hasSplitPanel && !isSplitPanelOpen && toolsHide) {\n      hasToolsForm = true;\n    }\n\n    if (!hasSplitPanel && !toolsHide && !isToolsOpen) {\n      hasToolsForm = true;\n    }\n  }\n\n  return hasToolsForm;\n}\n\nfunction getToolsFormPersistence(hasSplitPanel, isSplitPanelOpen, isToolsOpen, toolsHide) {\n  var hasToolsFormPersistence = false;\n\n  if (hasSplitPanel && !toolsHide && (isSplitPanelOpen || isToolsOpen)) {\n    hasToolsFormPersistence = true;\n  }\n\n  return hasToolsFormPersistence;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/app-layout/visual-refresh/tools.js"],"names":["React","useContext","clsx","InternalButton","AppLayoutContext","SplitPanelContext","TriggerButton","styles","splitPanelStyles","testutilStyles","useFocusControl","Transition","customCssProps","Tools","_a","children","_b","ariaLabels","handleSplitPanelClick","handleToolsClick","hasDefaultToolsWidth","isNavigationOpen","isMobile","isSplitPanelOpen","isToolsOpen","splitPanel","tools","toolsHide","toolsWidth","isAnyPanelOpen","navigationHide","_c","splitPanelPosition","position","openButtonAriaLabel","hasSplitPanel","getSplitPanelStatus","hasToolsForm","getToolsFormStatus","hasToolsFormPersistence","getToolsFormPersistence","focusRefs","isUnfocusable","createElement","state","transitionEventsRef","_d","_e","className","unfocusable","style","toolsAnimationStartingOpacity","undefined","animating","ref","ariaLabel","toolsClose","iconName","onClick","variant","formAction","close","root","toolsToggle","selected","toggle","getToolsDefaultState","stateFromProps"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../button/internal';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport splitPanelStyles from '../../split-panel/styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nimport { useFocusControl } from '../utils/use-focus-control';\nimport { Transition } from '../../internal/components/transition';\nimport customCssProps from '../../internal/generated/custom-css-properties';\nexport default function Tools(_a) {\n    var children = _a.children;\n    var _b = useContext(AppLayoutContext), ariaLabels = _b.ariaLabels, handleSplitPanelClick = _b.handleSplitPanelClick, handleToolsClick = _b.handleToolsClick, hasDefaultToolsWidth = _b.hasDefaultToolsWidth, isNavigationOpen = _b.isNavigationOpen, isMobile = _b.isMobile, isSplitPanelOpen = _b.isSplitPanelOpen, isToolsOpen = _b.isToolsOpen, splitPanel = _b.splitPanel, tools = _b.tools, toolsHide = _b.toolsHide, toolsWidth = _b.toolsWidth, isAnyPanelOpen = _b.isAnyPanelOpen, navigationHide = _b.navigationHide;\n    var _c = useContext(SplitPanelContext), splitPanelPosition = _c.position, openButtonAriaLabel = _c.openButtonAriaLabel;\n    var hasSplitPanel = getSplitPanelStatus(splitPanel, splitPanelPosition);\n    var hasToolsForm = getToolsFormStatus(hasSplitPanel, isMobile, isSplitPanelOpen, isToolsOpen, toolsHide);\n    var hasToolsFormPersistence = getToolsFormPersistence(hasSplitPanel, isSplitPanelOpen, isToolsOpen, toolsHide);\n    var focusRefs = useFocusControl(isToolsOpen);\n    if (toolsHide && !hasSplitPanel) {\n        return null;\n    }\n    var isUnfocusable = isMobile && isAnyPanelOpen && isNavigationOpen && !navigationHide;\n    return (React.createElement(Transition, { \"in\": isToolsOpen !== null && isToolsOpen !== void 0 ? isToolsOpen : false }, function (state, transitionEventsRef) {\n        var _a, _b;\n        var _c, _d, _e;\n        return (React.createElement(\"div\", { className: clsx(styles['tools-container'], (_a = {},\n                _a[testutilStyles['drawer-closed']] = !isToolsOpen,\n                _a[styles.unfocusable] = isUnfocusable,\n                _a)), style: (_b = {},\n                _b[customCssProps.toolsAnimationStartingOpacity] = \"\" + (hasSplitPanel && isSplitPanelOpen ? 1 : 0),\n                _b[customCssProps.toolsWidth] = hasDefaultToolsWidth ? '' : toolsWidth + \"px\",\n                _b) },\n            children,\n            !toolsHide && (React.createElement(\"aside\", { \"aria-hidden\": !isToolsOpen ? true : false, \"aria-label\": (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _c !== void 0 ? _c : undefined, className: clsx(styles.tools, state === 'entering' && styles.animating, testutilStyles.tools), ref: state !== 'exiting' ? transitionEventsRef : undefined, \"data-is-tools-open\": isToolsOpen ? true : false, \"data-has-tools-form-persistence\": hasToolsFormPersistence ? true : false },\n                React.createElement(\"div\", { className: clsx(styles['animated-content']) },\n                    React.createElement(\"div\", { className: clsx(styles['hide-tools']) },\n                        React.createElement(InternalButton, { ariaLabel: (_d = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsClose) !== null && _d !== void 0 ? _d : undefined, iconName: isMobile ? 'close' : 'angle-right', onClick: function () { return handleToolsClick(false); }, variant: \"icon\", formAction: \"none\", className: testutilStyles['tools-close'], ref: focusRefs.close })),\n                    tools))),\n            !isMobile && (React.createElement(\"aside\", { \"aria-hidden\": !hasToolsForm ? true : false, \"aria-label\": (_e = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _e !== void 0 ? _e : undefined, className: clsx(styles['show-tools'], splitPanelStyles.root, state === 'exiting' && styles.animating), ref: state === 'exiting' ? transitionEventsRef : undefined, \"data-has-tools-form\": hasToolsForm ? true : false, \"data-has-tools-form-persistence\": hasToolsFormPersistence ? true : false },\n                !toolsHide && (React.createElement(TriggerButton, { ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsToggle, iconName: \"status-info\", onClick: function () { return handleToolsClick(!isToolsOpen); }, selected: hasSplitPanel && isToolsOpen, className: testutilStyles['tools-toggle'], ref: focusRefs.toggle })),\n                hasSplitPanel && (React.createElement(TriggerButton, { ariaLabel: openButtonAriaLabel, iconName: \"view-vertical\", onClick: function () { return handleSplitPanelClick(); }, selected: hasSplitPanel && isSplitPanelOpen, className: splitPanelStyles['open-button'] }))))));\n    }));\n}\nexport function getToolsDefaultState(isMobile, stateFromProps) {\n    var isToolsOpen;\n    if (isMobile || stateFromProps === undefined) {\n        isToolsOpen = false;\n    }\n    else {\n        isToolsOpen = stateFromProps;\n    }\n    return isToolsOpen;\n}\nfunction getSplitPanelStatus(splitPanel, splitPanelPosition) {\n    return splitPanel && splitPanelPosition === 'side' ? true : false;\n}\nfunction getToolsFormStatus(hasSplitPanel, isMobile, isSplitPanelOpen, isToolsOpen, toolsHide) {\n    var hasToolsForm = false;\n    if (!isMobile) {\n        if (hasSplitPanel && !toolsHide) {\n            hasToolsForm = true;\n        }\n        if (hasSplitPanel && !isSplitPanelOpen && toolsHide) {\n            hasToolsForm = true;\n        }\n        if (!hasSplitPanel && !toolsHide && !isToolsOpen) {\n            hasToolsForm = true;\n        }\n    }\n    return hasToolsForm;\n}\nfunction getToolsFormPersistence(hasSplitPanel, isSplitPanelOpen, isToolsOpen, toolsHide) {\n    var hasToolsFormPersistence = false;\n    if (hasSplitPanel && !toolsHide && (isSplitPanelOpen || isToolsOpen)) {\n        hasToolsFormPersistence = true;\n    }\n    return hasToolsFormPersistence;\n}\n"]},"metadata":{},"sourceType":"module"}