{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { getBaseProps } from '../../base-component';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../../events';\nimport { useFormFieldContext } from '../../context/form-field-context';\nimport InternalInput from '../../../input/internal';\nimport useMask from './use-mask';\nimport MaskFormat from './utils/mask-format';\nvar MaskedInput = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      onKeyDown = _a.onKeyDown,\n      mask = _a.mask,\n      _b = _a.autofix,\n      autofix = _b === void 0 ? false : _b,\n      _c = _a.disableAutocompleteOnBlur,\n      disableAutocompleteOnBlur = _c === void 0 ? false : _c,\n      rest = __rest(_a, [\"value\", \"onBlur\", \"onChange\", \"onKeyDown\", \"mask\", \"autofix\", \"disableAutocompleteOnBlur\"]);\n\n  var baseProps = getBaseProps(rest);\n  var formFieldContext = useFormFieldContext(rest);\n  var inputRef = React.useRef(null);\n\n  var _d = useState(null),\n      cursorPosition = _d[0],\n      setCursorPosition = _d[1];\n\n  useLayoutEffect(function () {\n    var _a;\n\n    if (cursorPosition !== null) {\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.setSelectionRange(cursorPosition, cursorPosition);\n    }\n  }, [cursorPosition, inputRef]);\n\n  var _e = useMask({\n    format: new MaskFormat(mask),\n    value: value,\n    inputRef: inputRef,\n    autofix: autofix,\n    disableAutocompleteOnBlur: disableAutocompleteOnBlur,\n    onChange: function (value) {\n      return !rest.readOnly && fireNonCancelableEvent(onChange, {\n        value: value\n      });\n    },\n    onKeyDown: function (event) {\n      return !rest.readOnly && onKeyDown && fireCancelableEvent(onKeyDown, event.detail, event);\n    },\n    onBlur: function () {\n      return fireNonCancelableEvent(onBlur);\n    },\n    setPosition: setCursorPosition\n  }),\n      onPaste = _e.onPaste,\n      maskProps = __rest(_e, [\"onPaste\"]);\n\n  var inputProps = __assign(__assign(__assign(__assign({}, rest), baseProps), formFieldContext), maskProps);\n\n  return React.createElement(InternalInput, __assign({}, inputProps, {\n    ref: mergeRefs([ref, inputRef]),\n    __nativeAttributes: {\n      onPaste: onPaste\n    }\n  }));\n});\nexport { useMask };\nexport default MaskedInput;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/masked-input/index.js"],"names":["__assign","__rest","React","useState","useLayoutEffect","mergeRefs","getBaseProps","fireCancelableEvent","fireNonCancelableEvent","useFormFieldContext","InternalInput","useMask","MaskFormat","MaskedInput","forwardRef","_a","ref","value","onBlur","onChange","onKeyDown","mask","_b","autofix","_c","disableAutocompleteOnBlur","rest","baseProps","formFieldContext","inputRef","useRef","_d","cursorPosition","setCursorPosition","current","setSelectionRange","_e","format","readOnly","event","detail","setPosition","onPaste","maskProps","inputProps","createElement","__nativeAttributes"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { getBaseProps } from '../../base-component';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../../events';\nimport { useFormFieldContext } from '../../context/form-field-context';\nimport InternalInput from '../../../input/internal';\nimport useMask from './use-mask';\nimport MaskFormat from './utils/mask-format';\nvar MaskedInput = React.forwardRef(function (_a, ref) {\n    var value = _a.value, onBlur = _a.onBlur, onChange = _a.onChange, onKeyDown = _a.onKeyDown, mask = _a.mask, _b = _a.autofix, autofix = _b === void 0 ? false : _b, _c = _a.disableAutocompleteOnBlur, disableAutocompleteOnBlur = _c === void 0 ? false : _c, rest = __rest(_a, [\"value\", \"onBlur\", \"onChange\", \"onKeyDown\", \"mask\", \"autofix\", \"disableAutocompleteOnBlur\"]);\n    var baseProps = getBaseProps(rest);\n    var formFieldContext = useFormFieldContext(rest);\n    var inputRef = React.useRef(null);\n    var _d = useState(null), cursorPosition = _d[0], setCursorPosition = _d[1];\n    useLayoutEffect(function () {\n        var _a;\n        if (cursorPosition !== null) {\n            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.setSelectionRange(cursorPosition, cursorPosition);\n        }\n    }, [cursorPosition, inputRef]);\n    var _e = useMask({\n        format: new MaskFormat(mask),\n        value: value,\n        inputRef: inputRef,\n        autofix: autofix,\n        disableAutocompleteOnBlur: disableAutocompleteOnBlur,\n        onChange: function (value) { return !rest.readOnly && fireNonCancelableEvent(onChange, { value: value }); },\n        onKeyDown: function (event) {\n            return !rest.readOnly && onKeyDown && fireCancelableEvent(onKeyDown, event.detail, event);\n        },\n        onBlur: function () { return fireNonCancelableEvent(onBlur); },\n        setPosition: setCursorPosition\n    }), onPaste = _e.onPaste, maskProps = __rest(_e, [\"onPaste\"]);\n    var inputProps = __assign(__assign(__assign(__assign({}, rest), baseProps), formFieldContext), maskProps);\n    return (React.createElement(InternalInput, __assign({}, inputProps, { ref: mergeRefs([ref, inputRef]), __nativeAttributes: {\n            onPaste: onPaste\n        } })));\n});\nexport { useMask };\nexport default MaskedInput;\n"]},"metadata":{},"sourceType":"module"}