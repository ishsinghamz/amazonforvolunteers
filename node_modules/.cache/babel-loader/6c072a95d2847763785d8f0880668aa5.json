{"ast":null,"code":"var testIndexMap = new WeakMap();\nexport var getTestOptionIndexes = function (item) {\n  return testIndexMap.get(item);\n};\nexport var generateTestIndexes = function (filteredItems, getParentGroup) {\n  var throughIndex = 1;\n  var groupIndex = 0;\n  var inGroupIndex = 1;\n  var currentGroup = null;\n  filteredItems.forEach(function (item) {\n    if (!('type' in item)) {\n      testIndexMap.set(item, {\n        throughIndex: throughIndex++\n      });\n    } else if (item.type === 'child') {\n      var parentGroup = getParentGroup(item);\n\n      if (parentGroup && parentGroup !== currentGroup) {\n        currentGroup = parentGroup;\n        inGroupIndex = 1;\n        testIndexMap.set(item, {\n          throughIndex: throughIndex++,\n          groupIndex: ++groupIndex,\n          inGroupIndex: inGroupIndex++\n        });\n      } else {\n        testIndexMap.set(item, {\n          throughIndex: throughIndex++,\n          groupIndex: groupIndex,\n          inGroupIndex: inGroupIndex++\n        });\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/internal/components/options-list/utils/test-indexes.js"],"names":["testIndexMap","WeakMap","getTestOptionIndexes","item","get","generateTestIndexes","filteredItems","getParentGroup","throughIndex","groupIndex","inGroupIndex","currentGroup","forEach","set","type","parentGroup"],"mappings":"AAAA,IAAIA,YAAY,GAAG,IAAIC,OAAJ,EAAnB;AACA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,IAAV,EAAgB;AAAE,SAAOH,YAAY,CAACI,GAAb,CAAiBD,IAAjB,CAAP;AAAgC,CAA7E;AACP,OAAO,IAAIE,mBAAmB,GAAG,UAAUC,aAAV,EAAyBC,cAAzB,EAAyC;AACtE,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,YAAY,GAAG,IAAnB;AACAL,EAAAA,aAAa,CAACM,OAAd,CAAsB,UAAUT,IAAV,EAAgB;AAClC,QAAI,EAAE,UAAUA,IAAZ,CAAJ,EAAuB;AACnBH,MAAAA,YAAY,CAACa,GAAb,CAAiBV,IAAjB,EAAuB;AAAEK,QAAAA,YAAY,EAAEA,YAAY;AAA5B,OAAvB;AACH,KAFD,MAGK,IAAIL,IAAI,CAACW,IAAL,KAAc,OAAlB,EAA2B;AAC5B,UAAIC,WAAW,GAAGR,cAAc,CAACJ,IAAD,CAAhC;;AACA,UAAIY,WAAW,IAAIA,WAAW,KAAKJ,YAAnC,EAAiD;AAC7CA,QAAAA,YAAY,GAAGI,WAAf;AACAL,QAAAA,YAAY,GAAG,CAAf;AACAV,QAAAA,YAAY,CAACa,GAAb,CAAiBV,IAAjB,EAAuB;AACnBK,UAAAA,YAAY,EAAEA,YAAY,EADP;AAEnBC,UAAAA,UAAU,EAAE,EAAEA,UAFK;AAGnBC,UAAAA,YAAY,EAAEA,YAAY;AAHP,SAAvB;AAKH,OARD,MASK;AACDV,QAAAA,YAAY,CAACa,GAAb,CAAiBV,IAAjB,EAAuB;AAAEK,UAAAA,YAAY,EAAEA,YAAY,EAA5B;AAAgCC,UAAAA,UAAU,EAAEA,UAA5C;AAAwDC,UAAAA,YAAY,EAAEA,YAAY;AAAlF,SAAvB;AACH;AACJ;AACJ,GAnBD;AAoBH,CAzBM","sourcesContent":["var testIndexMap = new WeakMap();\nexport var getTestOptionIndexes = function (item) { return testIndexMap.get(item); };\nexport var generateTestIndexes = function (filteredItems, getParentGroup) {\n    var throughIndex = 1;\n    var groupIndex = 0;\n    var inGroupIndex = 1;\n    var currentGroup = null;\n    filteredItems.forEach(function (item) {\n        if (!('type' in item)) {\n            testIndexMap.set(item, { throughIndex: throughIndex++ });\n        }\n        else if (item.type === 'child') {\n            var parentGroup = getParentGroup(item);\n            if (parentGroup && parentGroup !== currentGroup) {\n                currentGroup = parentGroup;\n                inGroupIndex = 1;\n                testIndexMap.set(item, {\n                    throughIndex: throughIndex++,\n                    groupIndex: ++groupIndex,\n                    inGroupIndex: inGroupIndex++\n                });\n            }\n            else {\n                testIndexMap.set(item, { throughIndex: throughIndex++, groupIndex: groupIndex, inGroupIndex: inGroupIndex++ });\n            }\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}