{"ast":null,"code":"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { KeyCode } from '../../../internal/keycode';\nimport { addDays, addWeeks, isSameMonth, isAfter, isBefore, addMonths, min, max } from 'date-fns';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport { Grid } from './grid';\nimport styles from '../../styles.css.js';\nimport useFocusVisible from '../../../internal/hooks/focus-visible/index';\nimport { getBaseDate } from '../get-base-date';\nimport { hasValue } from '../../../internal/utils/has-value';\n\nfunction isVisible(date, baseDate, isSingleGrid) {\n  if (isSingleGrid) {\n    return isSameMonth(date, baseDate);\n  }\n\n  var previousMonth = addMonths(baseDate, -1);\n  return isSameMonth(date, previousMonth) || isSameMonth(date, baseDate);\n}\n\nexport function selectFocusedDate(selected, baseDate, isDateEnabled) {\n  if (selected && isDateEnabled(selected) && isSameMonth(selected, baseDate)) {\n    return selected;\n  }\n\n  var today = new Date();\n\n  if (isDateEnabled(today) && isSameMonth(today, baseDate)) {\n    return today;\n  }\n\n  if (isDateEnabled(baseDate)) {\n    return baseDate;\n  }\n\n  return null;\n}\nexport var Grids = function (_a) {\n  var baseDate = _a.baseDate,\n      selectedStartDate = _a.selectedStartDate,\n      selectedEndDate = _a.selectedEndDate,\n      focusedDate = _a.focusedDate,\n      onFocusedDateChange = _a.onFocusedDateChange,\n      isDateEnabled = _a.isDateEnabled,\n      isSingleGrid = _a.isSingleGrid,\n      onSelectDate = _a.onSelectDate,\n      onChangeMonth = _a.onChangeMonth,\n      handleFocusMove = _a.handleFocusMove,\n      locale = _a.locale,\n      startOfWeek = _a.startOfWeek,\n      todayAriaLabel = _a.todayAriaLabel;\n  var containerRef = useRef(null);\n\n  var _b = useState(false),\n      gridHasFocus = _b[0],\n      setGridHasFocus = _b[1];\n\n  var focusedDateRef = useRef(null);\n  var baseDateTime = baseDate === null || baseDate === void 0 ? void 0 : baseDate.getTime();\n  var focusedDateTime = focusedDate === null || focusedDate === void 0 ? void 0 : focusedDate.getTime();\n  useEffect(function () {\n    if (focusedDate && !isVisible(focusedDate, baseDate, isSingleGrid)) {\n      var direction = isAfter(focusedDate, baseDate) ? 'backwards' : 'forwards';\n      var newMonth = !isSingleGrid && direction === 'backwards' ? addMonths(baseDate, -1) : baseDate;\n      var nearestBaseDate = getBaseDate(newMonth, direction === 'backwards' ? -1 : 1, isDateEnabled);\n      var newFocusedDate = selectFocusedDate(focusedDate, nearestBaseDate, isDateEnabled);\n      onFocusedDateChange(newFocusedDate);\n    }\n  }, [focusedDateTime, baseDateTime, isSingleGrid, isDateEnabled, onFocusedDateChange]);\n  var onGridKeyDownHandler = useCallback(function (e) {\n    var updatedFocusDate;\n\n    if (focusedDate === null) {\n      return;\n    }\n\n    switch (e.keyCode) {\n      case KeyCode.enter:\n        e.preventDefault();\n\n        if (focusedDate) {\n          onSelectDate(focusedDate);\n        }\n\n        return;\n\n      case KeyCode.right:\n        e.preventDefault();\n        updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) {\n          return addDays(date, 1);\n        });\n        break;\n\n      case KeyCode.left:\n        e.preventDefault();\n        updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) {\n          return addDays(date, -1);\n        });\n        break;\n\n      case KeyCode.up:\n        e.preventDefault();\n        updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) {\n          return addWeeks(date, -1);\n        });\n        break;\n\n      case KeyCode.down:\n        e.preventDefault();\n        updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) {\n          return addWeeks(date, 1);\n        });\n        break;\n\n      default:\n        return;\n    }\n\n    var updatedDateIsVisible = isVisible(updatedFocusDate, baseDate, isSingleGrid);\n\n    if (!updatedDateIsVisible) {\n      var newMonthIsOnLeftSide = !isSingleGrid && isBefore(updatedFocusDate, baseDate);\n      onChangeMonth(newMonthIsOnLeftSide ? addMonths(updatedFocusDate, 1) : updatedFocusDate);\n    }\n\n    onFocusedDateChange(updatedFocusDate);\n  }, [focusedDateTime, baseDateTime, handleFocusMove, isDateEnabled, onSelectDate, onChangeMonth, isSingleGrid]);\n  useEffect(function () {\n    if (focusedDate !== null && gridHasFocus) {\n      if (focusedDateRef.current && focusedDateRef.current !== document.activeElement) {\n        focusedDateRef.current.focus();\n      }\n    }\n  }, [focusedDateTime, gridHasFocus]);\n\n  var onGridBlur = function (event) {\n    var _a;\n\n    var newFocusTarget = event.relatedTarget || document.activeElement;\n    var newFocusTargetIsInGrid = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.contains(newFocusTarget);\n\n    if (newFocusTarget && !newFocusTargetIsInGrid && gridHasFocus) {\n      setGridHasFocus(false);\n    }\n  };\n\n  var onGridFocus = function () {\n    if (!gridHasFocus) {\n      setGridHasFocus(true);\n    }\n  };\n\n  var focusVisible = useFocusVisible();\n  var isRangeVisible = selectedStartDate && selectedEndDate || gridHasFocus && !!focusVisible['data-awsui-focus-visible'];\n  var rangeEnds = [selectedStartDate !== null && selectedStartDate !== void 0 ? selectedStartDate : focusedDate, selectedEndDate !== null && selectedEndDate !== void 0 ? selectedEndDate : focusedDate].filter(hasValue);\n  var rangeStartDate = min(rangeEnds);\n  var rangeEndDate = max(rangeEnds);\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    onFocus: onGridFocus,\n    onBlur: onGridBlur\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, !isSingleGrid && React.createElement(Grid, {\n    className: styles['first-grid'],\n    baseDate: addMonths(baseDate, -1),\n    selectedEndDate: selectedEndDate,\n    selectedStartDate: selectedStartDate,\n    rangeStartDate: isRangeVisible ? rangeStartDate : null,\n    rangeEndDate: isRangeVisible ? rangeEndDate : null,\n    focusedDate: focusedDate,\n    focusedDateRef: focusedDateRef,\n    isDateEnabled: isDateEnabled,\n    onSelectDate: onSelectDate,\n    onGridKeyDownHandler: onGridKeyDownHandler,\n    onFocusedDateChange: onFocusedDateChange,\n    locale: locale,\n    startOfWeek: startOfWeek,\n    todayAriaLabel: todayAriaLabel\n  }), React.createElement(Grid, {\n    className: styles['second-grid'],\n    baseDate: baseDate,\n    selectedEndDate: selectedEndDate,\n    selectedStartDate: selectedStartDate,\n    rangeStartDate: isRangeVisible ? rangeStartDate : null,\n    rangeEndDate: isRangeVisible ? rangeEndDate : null,\n    focusedDate: focusedDate,\n    focusedDateRef: focusedDateRef,\n    isDateEnabled: isDateEnabled,\n    onSelectDate: onSelectDate,\n    onGridKeyDownHandler: onGridKeyDownHandler,\n    onFocusedDateChange: onFocusedDateChange,\n    locale: locale,\n    startOfWeek: startOfWeek,\n    todayAriaLabel: todayAriaLabel\n  })));\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/date-range-picker/calendar/grids/index.js"],"names":["React","useCallback","useEffect","useRef","useState","KeyCode","addDays","addWeeks","isSameMonth","isAfter","isBefore","addMonths","min","max","InternalSpaceBetween","Grid","styles","useFocusVisible","getBaseDate","hasValue","isVisible","date","baseDate","isSingleGrid","previousMonth","selectFocusedDate","selected","isDateEnabled","today","Date","Grids","_a","selectedStartDate","selectedEndDate","focusedDate","onFocusedDateChange","onSelectDate","onChangeMonth","handleFocusMove","locale","startOfWeek","todayAriaLabel","containerRef","_b","gridHasFocus","setGridHasFocus","focusedDateRef","baseDateTime","getTime","focusedDateTime","direction","newMonth","nearestBaseDate","newFocusedDate","onGridKeyDownHandler","e","updatedFocusDate","keyCode","enter","preventDefault","right","left","up","down","updatedDateIsVisible","newMonthIsOnLeftSide","current","document","activeElement","focus","onGridBlur","event","newFocusTarget","relatedTarget","newFocusTargetIsInGrid","contains","onGridFocus","focusVisible","isRangeVisible","rangeEnds","filter","rangeStartDate","rangeEndDate","createElement","ref","onFocus","onBlur","size","className"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { KeyCode } from '../../../internal/keycode';\nimport { addDays, addWeeks, isSameMonth, isAfter, isBefore, addMonths, min, max } from 'date-fns';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport { Grid } from './grid';\nimport styles from '../../styles.css.js';\nimport useFocusVisible from '../../../internal/hooks/focus-visible/index';\nimport { getBaseDate } from '../get-base-date';\nimport { hasValue } from '../../../internal/utils/has-value';\nfunction isVisible(date, baseDate, isSingleGrid) {\n    if (isSingleGrid) {\n        return isSameMonth(date, baseDate);\n    }\n    var previousMonth = addMonths(baseDate, -1);\n    return isSameMonth(date, previousMonth) || isSameMonth(date, baseDate);\n}\nexport function selectFocusedDate(selected, baseDate, isDateEnabled) {\n    if (selected && isDateEnabled(selected) && isSameMonth(selected, baseDate)) {\n        return selected;\n    }\n    var today = new Date();\n    if (isDateEnabled(today) && isSameMonth(today, baseDate)) {\n        return today;\n    }\n    if (isDateEnabled(baseDate)) {\n        return baseDate;\n    }\n    return null;\n}\nexport var Grids = function (_a) {\n    var baseDate = _a.baseDate, selectedStartDate = _a.selectedStartDate, selectedEndDate = _a.selectedEndDate, focusedDate = _a.focusedDate, onFocusedDateChange = _a.onFocusedDateChange, isDateEnabled = _a.isDateEnabled, isSingleGrid = _a.isSingleGrid, onSelectDate = _a.onSelectDate, onChangeMonth = _a.onChangeMonth, handleFocusMove = _a.handleFocusMove, locale = _a.locale, startOfWeek = _a.startOfWeek, todayAriaLabel = _a.todayAriaLabel;\n    var containerRef = useRef(null);\n    var _b = useState(false), gridHasFocus = _b[0], setGridHasFocus = _b[1];\n    var focusedDateRef = useRef(null);\n    var baseDateTime = baseDate === null || baseDate === void 0 ? void 0 : baseDate.getTime();\n    var focusedDateTime = focusedDate === null || focusedDate === void 0 ? void 0 : focusedDate.getTime();\n    useEffect(function () {\n        if (focusedDate && !isVisible(focusedDate, baseDate, isSingleGrid)) {\n            var direction = isAfter(focusedDate, baseDate) ? 'backwards' : 'forwards';\n            var newMonth = !isSingleGrid && direction === 'backwards' ? addMonths(baseDate, -1) : baseDate;\n            var nearestBaseDate = getBaseDate(newMonth, direction === 'backwards' ? -1 : 1, isDateEnabled);\n            var newFocusedDate = selectFocusedDate(focusedDate, nearestBaseDate, isDateEnabled);\n            onFocusedDateChange(newFocusedDate);\n        }\n    }, [focusedDateTime, baseDateTime, isSingleGrid, isDateEnabled, onFocusedDateChange]);\n    var onGridKeyDownHandler = useCallback(function (e) {\n        var updatedFocusDate;\n        if (focusedDate === null) {\n            return;\n        }\n        switch (e.keyCode) {\n            case KeyCode.enter:\n                e.preventDefault();\n                if (focusedDate) {\n                    onSelectDate(focusedDate);\n                }\n                return;\n            case KeyCode.right:\n                e.preventDefault();\n                updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) { return addDays(date, 1); });\n                break;\n            case KeyCode.left:\n                e.preventDefault();\n                updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) { return addDays(date, -1); });\n                break;\n            case KeyCode.up:\n                e.preventDefault();\n                updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) { return addWeeks(date, -1); });\n                break;\n            case KeyCode.down:\n                e.preventDefault();\n                updatedFocusDate = handleFocusMove(focusedDate, isDateEnabled, function (date) { return addWeeks(date, 1); });\n                break;\n            default:\n                return;\n        }\n        var updatedDateIsVisible = isVisible(updatedFocusDate, baseDate, isSingleGrid);\n        if (!updatedDateIsVisible) {\n            var newMonthIsOnLeftSide = !isSingleGrid && isBefore(updatedFocusDate, baseDate);\n            onChangeMonth(newMonthIsOnLeftSide ? addMonths(updatedFocusDate, 1) : updatedFocusDate);\n        }\n        onFocusedDateChange(updatedFocusDate);\n    }, [focusedDateTime, baseDateTime, handleFocusMove, isDateEnabled, onSelectDate, onChangeMonth, isSingleGrid]);\n    useEffect(function () {\n        if (focusedDate !== null && gridHasFocus) {\n            if (focusedDateRef.current && focusedDateRef.current !== document.activeElement) {\n                focusedDateRef.current.focus();\n            }\n        }\n    }, [focusedDateTime, gridHasFocus]);\n    var onGridBlur = function (event) {\n        var _a;\n        var newFocusTarget = event.relatedTarget || document.activeElement;\n        var newFocusTargetIsInGrid = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.contains(newFocusTarget);\n        if (newFocusTarget && !newFocusTargetIsInGrid && gridHasFocus) {\n            setGridHasFocus(false);\n        }\n    };\n    var onGridFocus = function () {\n        if (!gridHasFocus) {\n            setGridHasFocus(true);\n        }\n    };\n    var focusVisible = useFocusVisible();\n    var isRangeVisible = (selectedStartDate && selectedEndDate) || (gridHasFocus && !!focusVisible['data-awsui-focus-visible']);\n    var rangeEnds = [selectedStartDate !== null && selectedStartDate !== void 0 ? selectedStartDate : focusedDate, selectedEndDate !== null && selectedEndDate !== void 0 ? selectedEndDate : focusedDate].filter(hasValue);\n    var rangeStartDate = min(rangeEnds);\n    var rangeEndDate = max(rangeEnds);\n    return (React.createElement(\"div\", { ref: containerRef, onFocus: onGridFocus, onBlur: onGridBlur },\n        React.createElement(InternalSpaceBetween, { size: \"xs\", direction: \"horizontal\" },\n            !isSingleGrid && (React.createElement(Grid, { className: styles['first-grid'], baseDate: addMonths(baseDate, -1), selectedEndDate: selectedEndDate, selectedStartDate: selectedStartDate, rangeStartDate: isRangeVisible ? rangeStartDate : null, rangeEndDate: isRangeVisible ? rangeEndDate : null, focusedDate: focusedDate, focusedDateRef: focusedDateRef, isDateEnabled: isDateEnabled, onSelectDate: onSelectDate, onGridKeyDownHandler: onGridKeyDownHandler, onFocusedDateChange: onFocusedDateChange, locale: locale, startOfWeek: startOfWeek, todayAriaLabel: todayAriaLabel })),\n            React.createElement(Grid, { className: styles['second-grid'], baseDate: baseDate, selectedEndDate: selectedEndDate, selectedStartDate: selectedStartDate, rangeStartDate: isRangeVisible ? rangeStartDate : null, rangeEndDate: isRangeVisible ? rangeEndDate : null, focusedDate: focusedDate, focusedDateRef: focusedDateRef, isDateEnabled: isDateEnabled, onSelectDate: onSelectDate, onGridKeyDownHandler: onGridKeyDownHandler, onFocusedDateChange: onFocusedDateChange, locale: locale, startOfWeek: startOfWeek, todayAriaLabel: todayAriaLabel }))));\n};\n"]},"metadata":{},"sourceType":"module"}