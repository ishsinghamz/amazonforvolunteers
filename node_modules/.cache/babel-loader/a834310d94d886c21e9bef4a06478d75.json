{"ast":null,"code":"import React, { useMemo, useRef } from 'react';\nimport clsx from 'clsx';\nimport { matchesX, getKeyValue } from './utils';\nimport styles from './styles.css.js';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nexport default function BarSeries(_a) {\n  var _b;\n\n  var axis = _a.axis,\n      series = _a.series,\n      color = _a.color,\n      xScale = _a.xScale,\n      yScale = _a.yScale,\n      highlighted = _a.highlighted,\n      dimmed = _a.dimmed,\n      highlightedGroupIndex = _a.highlightedGroupIndex,\n      stackedBarOffsets = _a.stackedBarOffsets,\n      totalSeriesCount = _a.totalSeriesCount,\n      seriesIndex = _a.seriesIndex,\n      plotSize = _a.plotSize,\n      chartAreaClipPath = _a.chartAreaClipPath;\n  var seriesRef = useRef(null);\n  var isRefresh = useVisualRefresh(seriesRef);\n  var xCoordinates = useMemo(function () {\n    var _a;\n\n    if (series.type !== 'bar' || !xScale.isCategorical()) {\n      return [];\n    }\n\n    var yContinuosScale = yScale.d3Scale;\n    var xPoints = series.data.map(function (_a) {\n      var x = _a.x;\n      return xScale.d3Scale(x) || NaN;\n    });\n    var zeroY = (_a = yScale.d3Scale(0)) !== null && _a !== void 0 ? _a : NaN;\n    var baseY = isFinite(zeroY) ? Math.min(plotSize, zeroY) : plotSize;\n    var barWidth = xScale.d3Scale.bandwidth();\n    var PADDING = 4;\n    var MINWIDTH = 4;\n\n    if (!stackedBarOffsets && totalSeriesCount > 1) {\n      barWidth = (barWidth - (totalSeriesCount - 1) * PADDING) / totalSeriesCount;\n      barWidth = Math.max(barWidth, MINWIDTH);\n    }\n\n    return xPoints.map(function (x, i) {\n      var _a, _b;\n\n      var d = series.data[i];\n      var barX = x;\n      var yValue = d.y;\n\n      if (stackedBarOffsets) {\n        var offsetMap = d.y < 0 ? stackedBarOffsets.negativeOffsets : stackedBarOffsets.positiveOffsets;\n        yValue = d.y + (offsetMap[getKeyValue(d.x)] || 0);\n      } else if (totalSeriesCount > 1) {\n        barX += seriesIndex * (barWidth + PADDING);\n      }\n\n      yValue = yValue < 0 ? yValue - d.y : yValue;\n      return {\n        x: barX,\n        y: (_a = yContinuosScale(yValue)) !== null && _a !== void 0 ? _a : NaN,\n        width: barWidth,\n        height: Math.abs(((_b = yContinuosScale(d.y)) !== null && _b !== void 0 ? _b : NaN) - baseY)\n      };\n    });\n  }, [series, xScale, yScale, plotSize, stackedBarOffsets, totalSeriesCount, seriesIndex]);\n  var highlightedXValue = highlightedGroupIndex !== null ? xScale.domain[highlightedGroupIndex] : null;\n  return React.createElement(\"g\", {\n    \"aria-label\": series.title,\n    clipPath: \"url(#\" + chartAreaClipPath + \")\",\n    className: clsx(styles.series, styles['series--bar'], (_b = {}, _b[styles['series--highlighted']] = highlighted, _b[styles['series--dimmed']] = dimmed, _b)),\n    ref: seriesRef\n  }, xCoordinates.map(function (_a, i) {\n    var _b;\n\n    var x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n    return isFinite(x) && isFinite(height) && React.createElement(\"rect\", {\n      key: \"bar-\" + i,\n      fill: color,\n      x: axis === 'x' ? x : y - height,\n      y: axis === 'x' ? y : x,\n      width: axis === 'x' ? width : height,\n      height: axis === 'x' ? height : width,\n      rx: isRefresh ? '4px' : '0px',\n      className: clsx(styles.series__rect, (_b = {}, _b[styles['series--dimmed']] = highlightedXValue !== null && !matchesX(highlightedXValue, series.data[i].x), _b))\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/mixed-line-bar-chart/bar-series.js"],"names":["React","useMemo","useRef","clsx","matchesX","getKeyValue","styles","useVisualRefresh","BarSeries","_a","_b","axis","series","color","xScale","yScale","highlighted","dimmed","highlightedGroupIndex","stackedBarOffsets","totalSeriesCount","seriesIndex","plotSize","chartAreaClipPath","seriesRef","isRefresh","xCoordinates","type","isCategorical","yContinuosScale","d3Scale","xPoints","data","map","x","NaN","zeroY","baseY","isFinite","Math","min","barWidth","bandwidth","PADDING","MINWIDTH","max","i","d","barX","yValue","y","offsetMap","negativeOffsets","positiveOffsets","width","height","abs","highlightedXValue","domain","createElement","title","clipPath","className","ref","key","fill","rx","series__rect"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef } from 'react';\nimport clsx from 'clsx';\nimport { matchesX, getKeyValue } from './utils';\nimport styles from './styles.css.js';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nexport default function BarSeries(_a) {\n    var _b;\n    var axis = _a.axis, series = _a.series, color = _a.color, xScale = _a.xScale, yScale = _a.yScale, highlighted = _a.highlighted, dimmed = _a.dimmed, highlightedGroupIndex = _a.highlightedGroupIndex, stackedBarOffsets = _a.stackedBarOffsets, totalSeriesCount = _a.totalSeriesCount, seriesIndex = _a.seriesIndex, plotSize = _a.plotSize, chartAreaClipPath = _a.chartAreaClipPath;\n    var seriesRef = useRef(null);\n    var isRefresh = useVisualRefresh(seriesRef);\n    var xCoordinates = useMemo(function () {\n        var _a;\n        if (series.type !== 'bar' || !xScale.isCategorical()) {\n            return [];\n        }\n        var yContinuosScale = yScale.d3Scale;\n        var xPoints = series.data.map(function (_a) {\n            var x = _a.x;\n            return xScale.d3Scale(x) || NaN;\n        });\n        var zeroY = (_a = yScale.d3Scale(0)) !== null && _a !== void 0 ? _a : NaN;\n        var baseY = isFinite(zeroY) ? Math.min(plotSize, zeroY) : plotSize;\n        var barWidth = xScale.d3Scale.bandwidth();\n        var PADDING = 4;\n        var MINWIDTH = 4;\n        if (!stackedBarOffsets && totalSeriesCount > 1) {\n            barWidth = (barWidth - (totalSeriesCount - 1) * PADDING) / totalSeriesCount;\n            barWidth = Math.max(barWidth, MINWIDTH);\n        }\n        return xPoints.map(function (x, i) {\n            var _a, _b;\n            var d = series.data[i];\n            var barX = x;\n            var yValue = d.y;\n            if (stackedBarOffsets) {\n                var offsetMap = d.y < 0 ? stackedBarOffsets.negativeOffsets : stackedBarOffsets.positiveOffsets;\n                yValue = d.y + (offsetMap[getKeyValue(d.x)] || 0);\n            }\n            else if (totalSeriesCount > 1) {\n                barX += seriesIndex * (barWidth + PADDING);\n            }\n            yValue = yValue < 0 ? yValue - d.y : yValue;\n            return {\n                x: barX,\n                y: (_a = yContinuosScale(yValue)) !== null && _a !== void 0 ? _a : NaN,\n                width: barWidth,\n                height: Math.abs(((_b = yContinuosScale(d.y)) !== null && _b !== void 0 ? _b : NaN) - baseY)\n            };\n        });\n    }, [series, xScale, yScale, plotSize, stackedBarOffsets, totalSeriesCount, seriesIndex]);\n    var highlightedXValue = highlightedGroupIndex !== null ? xScale.domain[highlightedGroupIndex] : null;\n    return (React.createElement(\"g\", { \"aria-label\": series.title, clipPath: \"url(#\" + chartAreaClipPath + \")\", className: clsx(styles.series, styles['series--bar'], (_b = {},\n            _b[styles['series--highlighted']] = highlighted,\n            _b[styles['series--dimmed']] = dimmed,\n            _b)), ref: seriesRef }, xCoordinates.map(function (_a, i) {\n        var _b;\n        var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n        return isFinite(x) &&\n            isFinite(height) && (React.createElement(\"rect\", { key: \"bar-\" + i, fill: color, x: axis === 'x' ? x : y - height, y: axis === 'x' ? y : x, width: axis === 'x' ? width : height, height: axis === 'x' ? height : width, rx: isRefresh ? '4px' : '0px', className: clsx(styles.series__rect, (_b = {},\n                _b[styles['series--dimmed']] = highlightedXValue !== null && !matchesX(highlightedXValue, series.data[i].x),\n                _b)) }));\n    })));\n}\n"]},"metadata":{},"sourceType":"module"}