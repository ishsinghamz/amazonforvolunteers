{"ast":null,"code":"import { computePlotPoints, computeDomainX, computeDomainY } from './utils';\nimport { createXTicks, createYTicks, getXTickCount, getYTickCount } from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\nexport default function computeChartProps(_a) {\n  var series = _a.series,\n      externalXDomain = _a.xDomain,\n      externalYDomain = _a.yDomain,\n      xScaleType = _a.xScaleType,\n      yScaleType = _a.yScaleType,\n      height = _a.height,\n      width = _a.width;\n  var xDomain = externalXDomain || computeDomainX(series);\n  var xTickCount = getXTickCount(width);\n  var xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n  var xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n  var yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  var yTickCount = getYTickCount(height);\n  var yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  var yTicks = createYTicks(yScale, yTickCount);\n  var plot = computePlotPoints(series, xScale, yScale);\n  return {\n    xDomain: xDomain,\n    yDomain: yDomain,\n    xScale: xScale,\n    yScale: yScale,\n    xTicks: xTicks,\n    yTicks: yTicks,\n    plot: plot\n  };\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/area-chart/model/compute-chart-props.js"],"names":["computePlotPoints","computeDomainX","computeDomainY","createXTicks","createYTicks","getXTickCount","getYTickCount","ChartScale","NumericChartScale","computeChartProps","_a","series","externalXDomain","xDomain","externalYDomain","yDomain","xScaleType","yScaleType","height","width","xTickCount","xScale","xTicks","domain","length","yTickCount","yScale","yTicks","plot"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,cAA5B,EAA4CC,cAA5C,QAAkE,SAAlE;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,EAAoDC,aAApD,QAA0E,iDAA1E;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,kDAA9C;AACA,eAAe,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC1C,MAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,MAAwBC,eAAe,GAAGF,EAAE,CAACG,OAA7C;AAAA,MAAsDC,eAAe,GAAGJ,EAAE,CAACK,OAA3E;AAAA,MAAoFC,UAAU,GAAGN,EAAE,CAACM,UAApG;AAAA,MAAgHC,UAAU,GAAGP,EAAE,CAACO,UAAhI;AAAA,MAA4IC,MAAM,GAAGR,EAAE,CAACQ,MAAxJ;AAAA,MAAgKC,KAAK,GAAGT,EAAE,CAACS,KAA3K;AACA,MAAIN,OAAO,GAAGD,eAAe,IAAIX,cAAc,CAACU,MAAD,CAA/C;AACA,MAAIS,UAAU,GAAGf,aAAa,CAACc,KAAD,CAA9B;AACA,MAAIE,MAAM,GAAG,IAAId,UAAJ,CAAeS,UAAf,EAA2BH,OAA3B,EAAoC,CAAC,CAAD,EAAIM,KAAJ,CAApC,CAAb;AACA,MAAIG,MAAM,GAAGD,MAAM,CAACE,MAAP,CAAcC,MAAd,GAAuB,CAAvB,GAA2BrB,YAAY,CAACkB,MAAD,EAASD,UAAT,CAAvC,GAA8D,EAA3E;AACA,MAAIL,OAAO,GAAGD,eAAe,IAAIZ,cAAc,CAACS,MAAD,EAASM,UAAT,CAA/C;AACA,MAAIQ,UAAU,GAAGnB,aAAa,CAACY,MAAD,CAA9B;AACA,MAAIQ,MAAM,GAAG,IAAIlB,iBAAJ,CAAsBS,UAAtB,EAAkCF,OAAlC,EAA2C,CAACG,MAAD,EAAS,CAAT,CAA3C,EAAwDJ,eAAe,GAAG,IAAH,GAAUW,UAAjF,CAAb;AACA,MAAIE,MAAM,GAAGvB,YAAY,CAACsB,MAAD,EAASD,UAAT,CAAzB;AACA,MAAIG,IAAI,GAAG5B,iBAAiB,CAACW,MAAD,EAASU,MAAT,EAAiBK,MAAjB,CAA5B;AACA,SAAO;AAAEb,IAAAA,OAAO,EAAEA,OAAX;AAAoBE,IAAAA,OAAO,EAAEA,OAA7B;AAAsCM,IAAAA,MAAM,EAAEA,MAA9C;AAAsDK,IAAAA,MAAM,EAAEA,MAA9D;AAAsEJ,IAAAA,MAAM,EAAEA,MAA9E;AAAsFK,IAAAA,MAAM,EAAEA,MAA9F;AAAsGC,IAAAA,IAAI,EAAEA;AAA5G,GAAP;AACH","sourcesContent":["import { computePlotPoints, computeDomainX, computeDomainY } from './utils';\nimport { createXTicks, createYTicks, getXTickCount, getYTickCount, } from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\nexport default function computeChartProps(_a) {\n    var series = _a.series, externalXDomain = _a.xDomain, externalYDomain = _a.yDomain, xScaleType = _a.xScaleType, yScaleType = _a.yScaleType, height = _a.height, width = _a.width;\n    var xDomain = externalXDomain || computeDomainX(series);\n    var xTickCount = getXTickCount(width);\n    var xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n    var xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n    var yDomain = externalYDomain || computeDomainY(series, yScaleType);\n    var yTickCount = getYTickCount(height);\n    var yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n    var yTicks = createYTicks(yScale, yTickCount);\n    var plot = computePlotPoints(series, xScale, yScale);\n    return { xDomain: xDomain, yDomain: yDomain, xScale: xScale, yScale: yScale, xTicks: xTicks, yTicks: yTicks, plot: plot };\n}\n"]},"metadata":{},"sourceType":"module"}