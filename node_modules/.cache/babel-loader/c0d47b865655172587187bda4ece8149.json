{"ast":null,"code":"import React, { memo, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { TICK_LENGTH, TICK_LINE_HEIGHT, TICK_MARGIN } from './constants';\nimport styles from './styles.css.js';\nimport { formatTicks, getVisibleTicks } from './label-utils';\nexport default memo(BottomLabels);\n\nfunction BottomLabels(_a) {\n  var _b = _a.axis,\n      axis = _b === void 0 ? 'x' : _b,\n      width = _a.width,\n      height = _a.height,\n      scale = _a.scale,\n      ticks = _a.ticks,\n      tickFormatter = _a.tickFormatter,\n      title = _a.title,\n      ariaRoleDescription = _a.ariaRoleDescription,\n      autoHeight = _a.autoHeight,\n      _c = _a.offsetLeft,\n      offsetLeft = _c === void 0 ? 0 : _c,\n      _d = _a.offsetRight,\n      offsetRight = _d === void 0 ? 0 : _d;\n  var virtualTextRef = useRef(null);\n  var xOffset = scale.isCategorical() && axis === 'x' ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;\n  var cacheRef = useRef({});\n\n  var getLabelSpace = function (label) {\n    if (cacheRef.current[label] !== undefined) {\n      return cacheRef.current[label];\n    }\n\n    if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {\n      virtualTextRef.current.textContent = label;\n      cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();\n      return cacheRef.current[label];\n    }\n\n    return 0;\n  };\n\n  var formattedTicks = formatTicks({\n    ticks: ticks,\n    scale: scale,\n    getLabelSpace: getLabelSpace,\n    tickFormatter: tickFormatter\n  });\n\n  if (virtualTextRef.current) {\n    virtualTextRef.current.textContent = '';\n  }\n\n  var from = 0 - offsetLeft - xOffset;\n  var until = width + offsetRight - xOffset;\n  var balanceLabels = axis === 'x' && scale.scaleType !== 'log';\n  var visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);\n  var maxHeight = TICK_LENGTH + TICK_MARGIN;\n\n  for (var _i = 0, formattedTicks_1 = formattedTicks; _i < formattedTicks_1.length; _i++) {\n    var lines = formattedTicks_1[_i].lines;\n    maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);\n  }\n\n  useEffect(function () {\n    autoHeight(maxHeight);\n  }, [autoHeight, maxHeight]);\n  return React.createElement(\"g\", {\n    transform: \"translate(0,\" + height + \")\",\n    className: styles['labels-bottom'],\n    focusable: false,\n    \"aria-label\": title,\n    role: \"list\",\n    \"aria-roledescription\": ariaRoleDescription,\n    \"aria-hidden\": visibleTicks.length === 0\n  }, visibleTicks.map(function (_a, index) {\n    var _b;\n\n    var position = _a.position,\n        lines = _a.lines;\n    return isFinite(position) && React.createElement(\"g\", {\n      key: index,\n      transform: \"translate(\" + (position + xOffset) + \",0)\",\n      className: clsx(styles.ticks, styles['ticks--bottom'], (_b = {}, _b[styles['ticks--x']] = axis === 'x', _b[styles['ticks--y']] = axis === 'y', _b)),\n      role: \"listitem\",\n      \"aria-label\": lines.join('\\n')\n    }, React.createElement(\"line\", {\n      className: styles.ticks__line,\n      x1: 0,\n      x2: 0,\n      y1: 0,\n      y2: TICK_LENGTH,\n      \"aria-hidden\": \"true\"\n    }), lines.map(function (line, lineIndex) {\n      return React.createElement(\"text\", {\n        className: styles.ticks__text,\n        key: lineIndex,\n        x: 0,\n        y: TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT\n      }, line);\n    }));\n  }), React.createElement(\"text\", {\n    ref: virtualTextRef,\n    x: 0,\n    y: 0,\n    style: {\n      visibility: 'hidden'\n    },\n    \"aria-hidden\": \"true\"\n  }));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/internal/components/cartesian-chart/bottom-labels.js"],"names":["React","memo","useEffect","useRef","clsx","TICK_LENGTH","TICK_LINE_HEIGHT","TICK_MARGIN","styles","formatTicks","getVisibleTicks","BottomLabels","_a","_b","axis","width","height","scale","ticks","tickFormatter","title","ariaRoleDescription","autoHeight","_c","offsetLeft","_d","offsetRight","virtualTextRef","xOffset","isCategorical","Math","max","d3Scale","bandwidth","cacheRef","getLabelSpace","label","current","undefined","getComputedTextLength","textContent","formattedTicks","from","until","balanceLabels","scaleType","visibleTicks","maxHeight","_i","formattedTicks_1","length","lines","createElement","transform","className","focusable","role","map","index","position","isFinite","key","join","ticks__line","x1","x2","y1","y2","line","lineIndex","ticks__text","x","y","ref","style","visibility"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { TICK_LENGTH, TICK_LINE_HEIGHT, TICK_MARGIN } from './constants';\nimport styles from './styles.css.js';\nimport { formatTicks, getVisibleTicks } from './label-utils';\nexport default memo(BottomLabels);\nfunction BottomLabels(_a) {\n    var _b = _a.axis, axis = _b === void 0 ? 'x' : _b, width = _a.width, height = _a.height, scale = _a.scale, ticks = _a.ticks, tickFormatter = _a.tickFormatter, title = _a.title, ariaRoleDescription = _a.ariaRoleDescription, autoHeight = _a.autoHeight, _c = _a.offsetLeft, offsetLeft = _c === void 0 ? 0 : _c, _d = _a.offsetRight, offsetRight = _d === void 0 ? 0 : _d;\n    var virtualTextRef = useRef(null);\n    var xOffset = scale.isCategorical() && axis === 'x' ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;\n    var cacheRef = useRef({});\n    var getLabelSpace = function (label) {\n        if (cacheRef.current[label] !== undefined) {\n            return cacheRef.current[label];\n        }\n        if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {\n            virtualTextRef.current.textContent = label;\n            cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();\n            return cacheRef.current[label];\n        }\n        return 0;\n    };\n    var formattedTicks = formatTicks({ ticks: ticks, scale: scale, getLabelSpace: getLabelSpace, tickFormatter: tickFormatter });\n    if (virtualTextRef.current) {\n        virtualTextRef.current.textContent = '';\n    }\n    var from = 0 - offsetLeft - xOffset;\n    var until = width + offsetRight - xOffset;\n    var balanceLabels = axis === 'x' && scale.scaleType !== 'log';\n    var visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);\n    var maxHeight = TICK_LENGTH + TICK_MARGIN;\n    for (var _i = 0, formattedTicks_1 = formattedTicks; _i < formattedTicks_1.length; _i++) {\n        var lines = formattedTicks_1[_i].lines;\n        maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);\n    }\n    useEffect(function () {\n        autoHeight(maxHeight);\n    }, [autoHeight, maxHeight]);\n    return (React.createElement(\"g\", { transform: \"translate(0,\" + height + \")\", className: styles['labels-bottom'], focusable: false, \"aria-label\": title, role: \"list\", \"aria-roledescription\": ariaRoleDescription, \"aria-hidden\": visibleTicks.length === 0 },\n        visibleTicks.map(function (_a, index) {\n            var _b;\n            var position = _a.position, lines = _a.lines;\n            return isFinite(position) && (React.createElement(\"g\", { key: index, transform: \"translate(\" + (position + xOffset) + \",0)\", className: clsx(styles.ticks, styles['ticks--bottom'], (_b = {},\n                    _b[styles['ticks--x']] = axis === 'x',\n                    _b[styles['ticks--y']] = axis === 'y',\n                    _b)), role: \"listitem\", \"aria-label\": lines.join('\\n') },\n                React.createElement(\"line\", { className: styles.ticks__line, x1: 0, x2: 0, y1: 0, y2: TICK_LENGTH, \"aria-hidden\": \"true\" }),\n                lines.map(function (line, lineIndex) { return (React.createElement(\"text\", { className: styles.ticks__text, key: lineIndex, x: 0, y: TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT }, line)); })));\n        }),\n        React.createElement(\"text\", { ref: virtualTextRef, x: 0, y: 0, style: { visibility: 'hidden' }, \"aria-hidden\": \"true\" })));\n}\n"]},"metadata":{},"sourceType":"module"}