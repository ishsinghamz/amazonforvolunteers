{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport OptionComponent from '../internal/components/option';\nimport SelectableItem from '../internal/components/selectable-item';\nimport { getBaseProps } from '../internal/base-component';\nimport { getTestOptionIndexes } from '../internal/components/options-list/utils/test-indexes';\nimport styles from './styles.css.js';\n\nvar AutosuggestOption = function (_a, ref) {\n  var _b = _a.nativeAttributes,\n      nativeAttributes = _b === void 0 ? {} : _b,\n      highlightText = _a.highlightText,\n      option = _a.option,\n      highlighted = _a.highlighted,\n      enteredTextLabel = _a.enteredTextLabel,\n      virtualPosition = _a.virtualPosition,\n      padBottom = _a.padBottom,\n      rest = __rest(_a, [\"nativeAttributes\", \"highlightText\", \"option\", \"highlighted\", \"enteredTextLabel\", \"virtualPosition\", \"padBottom\"]);\n\n  var baseProps = getBaseProps(rest);\n  var useEntered = 'type' in option && option.type === 'use-entered';\n  var isParent = 'type' in option && option.type === 'parent';\n  var isChild = 'type' in option && option.type === 'child';\n\n  var _c = getTestOptionIndexes(option) || {},\n      throughIndex = _c.throughIndex,\n      inGroupIndex = _c.inGroupIndex,\n      groupIndex = _c.groupIndex;\n\n  var optionContent;\n\n  if (useEntered) {\n    optionContent = enteredTextLabel(option.value || '');\n  } else if (isParent) {\n    optionContent = option.label;\n  } else {\n    var a11yProperties = {};\n\n    if (nativeAttributes['aria-label']) {\n      a11yProperties['aria-label'] = nativeAttributes['aria-label'];\n    }\n\n    optionContent = React.createElement(\"div\", __assign({}, a11yProperties), React.createElement(OptionComponent, {\n      option: option,\n      highlightText: highlightText\n    }));\n  }\n\n  return React.createElement(SelectableItem, __assign({}, baseProps, {\n    className: styles.option,\n    ariaSelected: highlighted || undefined,\n    highlighted: highlighted,\n    disabled: option.disabled,\n    hasBackground: useEntered,\n    isParent: isParent,\n    isChild: isChild,\n    virtualPosition: virtualPosition,\n    \"data-test-index\": throughIndex,\n    \"data-in-group-index\": inGroupIndex,\n    \"data-group-index\": groupIndex,\n    ref: ref,\n    padBottom: padBottom\n  }), optionContent);\n};\n\nexport default React.memo(React.forwardRef(AutosuggestOption));","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/autosuggest/autosuggest-option.js"],"names":["__assign","__rest","React","OptionComponent","SelectableItem","getBaseProps","getTestOptionIndexes","styles","AutosuggestOption","_a","ref","_b","nativeAttributes","highlightText","option","highlighted","enteredTextLabel","virtualPosition","padBottom","rest","baseProps","useEntered","type","isParent","isChild","_c","throughIndex","inGroupIndex","groupIndex","optionContent","value","label","a11yProperties","createElement","className","ariaSelected","undefined","disabled","hasBackground","memo","forwardRef"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport OptionComponent from '../internal/components/option';\nimport SelectableItem from '../internal/components/selectable-item';\nimport { getBaseProps } from '../internal/base-component';\nimport { getTestOptionIndexes } from '../internal/components/options-list/utils/test-indexes';\nimport styles from './styles.css.js';\nvar AutosuggestOption = function (_a, ref) {\n    var _b = _a.nativeAttributes, nativeAttributes = _b === void 0 ? {} : _b, highlightText = _a.highlightText, option = _a.option, highlighted = _a.highlighted, enteredTextLabel = _a.enteredTextLabel, virtualPosition = _a.virtualPosition, padBottom = _a.padBottom, rest = __rest(_a, [\"nativeAttributes\", \"highlightText\", \"option\", \"highlighted\", \"enteredTextLabel\", \"virtualPosition\", \"padBottom\"]);\n    var baseProps = getBaseProps(rest);\n    var useEntered = 'type' in option && option.type === 'use-entered';\n    var isParent = 'type' in option && option.type === 'parent';\n    var isChild = 'type' in option && option.type === 'child';\n    var _c = getTestOptionIndexes(option) || {}, throughIndex = _c.throughIndex, inGroupIndex = _c.inGroupIndex, groupIndex = _c.groupIndex;\n    var optionContent;\n    if (useEntered) {\n        optionContent = enteredTextLabel(option.value || '');\n    }\n    else if (isParent) {\n        optionContent = option.label;\n    }\n    else {\n        var a11yProperties = {};\n        if (nativeAttributes['aria-label']) {\n            a11yProperties['aria-label'] = nativeAttributes['aria-label'];\n        }\n        optionContent = (React.createElement(\"div\", __assign({}, a11yProperties),\n            React.createElement(OptionComponent, { option: option, highlightText: highlightText })));\n    }\n    return (React.createElement(SelectableItem, __assign({}, baseProps, { className: styles.option, ariaSelected: highlighted || undefined, highlighted: highlighted, disabled: option.disabled, hasBackground: useEntered, isParent: isParent, isChild: isChild, virtualPosition: virtualPosition, \"data-test-index\": throughIndex, \"data-in-group-index\": inGroupIndex, \"data-group-index\": groupIndex, ref: ref, padBottom: padBottom }), optionContent));\n};\nexport default React.memo(React.forwardRef(AutosuggestOption));\n"]},"metadata":{},"sourceType":"module"}