{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport InternalBox from '../box/internal';\nvar InternalButtonDropdown = React.forwardRef(function (_a, ref) {\n  var items = _a.items,\n      _b = _a.variant,\n      variant = _b === void 0 ? 'normal' : _b,\n      _c = _a.loading,\n      loading = _c === void 0 ? false : _c,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      _e = _a.expandableGroups,\n      expandableGroups = _e === void 0 ? false : _e,\n      children = _a.children,\n      onItemClick = _a.onItemClick,\n      onItemFollow = _a.onItemFollow,\n      customTriggerBuilder = _a.customTriggerBuilder,\n      expandToViewport = _a.expandToViewport,\n      ariaLabel = _a.ariaLabel,\n      title = _a.title,\n      description = _a.description,\n      preferCenter = _a.preferCenter,\n      __internalRootRef = _a.__internalRootRef,\n      props = __rest(_a, [\"items\", \"variant\", \"loading\", \"disabled\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"__internalRootRef\"]);\n\n  var isInRestrictedView = useMobile();\n  var usingMouse = useRef(true);\n  var dropdownId = useUniqueId('dropdown');\n\n  var _f = useButtonDropdown({\n    items: items,\n    onItemClick: onItemClick,\n    onItemFollow: onItemFollow,\n    hasExpandableGroups: expandableGroups,\n    isInRestrictedView: isInRestrictedView,\n    usingMouse: usingMouse\n  }),\n      isOpen = _f.isOpen,\n      targetItem = _f.targetItem,\n      isHighlighted = _f.isHighlighted,\n      isExpanded = _f.isExpanded,\n      highlightItem = _f.highlightItem,\n      onKeyDown = _f.onKeyDown,\n      onKeyUp = _f.onKeyUp,\n      onItemActivate = _f.onItemActivate,\n      onGroupToggle = _f.onGroupToggle,\n      toggleDropdown = _f.toggleDropdown;\n\n  var handleMouseEvent = function () {\n    usingMouse.current = true;\n  };\n\n  var baseProps = getBaseProps(props);\n  var dropdownRef = useRef(null);\n  useForwardFocus(ref, dropdownRef);\n\n  var clickHandler = function () {\n    if (!usingMouse.current) {\n      return;\n    }\n\n    if (!loading && !disabled) {\n      toggleDropdown();\n\n      if (dropdownRef.current) {\n        dropdownRef.current.focus();\n      }\n    }\n  };\n\n  var canBeOpened = !loading && !disabled;\n  var wasOpen = usePrevious(isOpen);\n  useEffect(function () {\n    if (!isOpen && dropdownRef.current && wasOpen) {\n      dropdownRef.current.focus();\n    }\n  }, [isOpen, wasOpen]);\n  var triggerVariant = variant === 'navigation' ? undefined : variant;\n  var iconProps = variant === 'icon' ? {\n    iconName: 'ellipsis'\n  } : {\n    iconName: 'caret-down-filled',\n    iconAlign: 'right',\n    __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down']\n  };\n  var trigger = customTriggerBuilder ? customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen) : React.createElement(InternalButton, __assign({\n    ref: dropdownRef\n  }, iconProps, {\n    variant: triggerVariant,\n    loading: loading,\n    disabled: disabled,\n    onClick: function (event) {\n      event.preventDefault();\n      clickHandler();\n    },\n    ariaLabel: ariaLabel,\n    \"aria-haspopup\": true,\n    \"aria-expanded\": canBeOpened && isOpen,\n    formAction: \"none\"\n  }), children);\n  var hasHeader = title || description;\n  var headerId = useUniqueId('awsui-button-dropdown__header');\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onMouseDown: handleMouseEvent,\n    className: clsx(styles['button-dropdown'], styles[\"variant-\" + variant], baseProps.className),\n    \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined,\n    ref: __internalRootRef\n  }), React.createElement(Dropdown, {\n    open: canBeOpened && isOpen,\n    stretchWidth: false,\n    stretchTriggerHeight: variant === 'navigation',\n    expandToViewport: expandToViewport,\n    preferCenter: preferCenter,\n    onDropdownClose: function () {\n      toggleDropdown();\n    },\n    trigger: trigger,\n    dropdownId: dropdownId\n  }, hasHeader && React.createElement(\"div\", {\n    className: styles.header,\n    id: headerId\n  }, title && React.createElement(InternalBox, {\n    fontSize: \"heading-s\",\n    fontWeight: \"bold\"\n  }, React.createElement(\"span\", {\n    className: styles.title\n  }, title)), description && React.createElement(InternalBox, {\n    fontSize: \"body-s\"\n  }, React.createElement(\"span\", {\n    className: styles.description\n  }, description))), React.createElement(OptionsList, {\n    open: canBeOpened && isOpen,\n    position: \"static\",\n    role: \"menu\",\n    decreaseTopMargin: true,\n    ariaLabelledby: hasHeader ? headerId : undefined\n  }, React.createElement(ItemsList, {\n    items: items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    hasExpandableGroups: expandableGroups,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    expandToViewport: expandToViewport,\n    variant: variant\n  }))));\n});\nexport default InternalButtonDropdown;","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/button-dropdown/internal.js"],"names":["__assign","__rest","React","useEffect","useRef","clsx","styles","getBaseProps","useUniqueId","Dropdown","ItemsList","useButtonDropdown","OptionsList","InternalButton","useMobile","useForwardFocus","usePrevious","InternalBox","InternalButtonDropdown","forwardRef","_a","ref","items","_b","variant","_c","loading","_d","disabled","_e","expandableGroups","children","onItemClick","onItemFollow","customTriggerBuilder","expandToViewport","ariaLabel","title","description","preferCenter","__internalRootRef","props","isInRestrictedView","usingMouse","dropdownId","_f","hasExpandableGroups","isOpen","targetItem","isHighlighted","isExpanded","highlightItem","onKeyDown","onKeyUp","onItemActivate","onGroupToggle","toggleDropdown","handleMouseEvent","current","baseProps","dropdownRef","clickHandler","focus","canBeOpened","wasOpen","triggerVariant","undefined","iconProps","iconName","iconAlign","__iconClass","trigger","createElement","onClick","event","preventDefault","formAction","hasHeader","headerId","onMouseDown","className","open","stretchWidth","stretchTriggerHeight","onDropdownClose","header","id","fontSize","fontWeight","position","role","decreaseTopMargin","ariaLabelledby"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport InternalBox from '../box/internal';\nvar InternalButtonDropdown = React.forwardRef(function (_a, ref) {\n    var items = _a.items, _b = _a.variant, variant = _b === void 0 ? 'normal' : _b, _c = _a.loading, loading = _c === void 0 ? false : _c, _d = _a.disabled, disabled = _d === void 0 ? false : _d, _e = _a.expandableGroups, expandableGroups = _e === void 0 ? false : _e, children = _a.children, onItemClick = _a.onItemClick, onItemFollow = _a.onItemFollow, customTriggerBuilder = _a.customTriggerBuilder, expandToViewport = _a.expandToViewport, ariaLabel = _a.ariaLabel, title = _a.title, description = _a.description, preferCenter = _a.preferCenter, __internalRootRef = _a.__internalRootRef, props = __rest(_a, [\"items\", \"variant\", \"loading\", \"disabled\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"__internalRootRef\"]);\n    var isInRestrictedView = useMobile();\n    var usingMouse = useRef(true);\n    var dropdownId = useUniqueId('dropdown');\n    var _f = useButtonDropdown({\n        items: items,\n        onItemClick: onItemClick,\n        onItemFollow: onItemFollow,\n        hasExpandableGroups: expandableGroups,\n        isInRestrictedView: isInRestrictedView,\n        usingMouse: usingMouse\n    }), isOpen = _f.isOpen, targetItem = _f.targetItem, isHighlighted = _f.isHighlighted, isExpanded = _f.isExpanded, highlightItem = _f.highlightItem, onKeyDown = _f.onKeyDown, onKeyUp = _f.onKeyUp, onItemActivate = _f.onItemActivate, onGroupToggle = _f.onGroupToggle, toggleDropdown = _f.toggleDropdown;\n    var handleMouseEvent = function () {\n        usingMouse.current = true;\n    };\n    var baseProps = getBaseProps(props);\n    var dropdownRef = useRef(null);\n    useForwardFocus(ref, dropdownRef);\n    var clickHandler = function () {\n        if (!usingMouse.current) {\n            return;\n        }\n        if (!loading && !disabled) {\n            toggleDropdown();\n            if (dropdownRef.current) {\n                dropdownRef.current.focus();\n            }\n        }\n    };\n    var canBeOpened = !loading && !disabled;\n    var wasOpen = usePrevious(isOpen);\n    useEffect(function () {\n        if (!isOpen && dropdownRef.current && wasOpen) {\n            dropdownRef.current.focus();\n        }\n    }, [isOpen, wasOpen]);\n    var triggerVariant = variant === 'navigation' ? undefined : variant;\n    var iconProps = variant === 'icon'\n        ? {\n            iconName: 'ellipsis'\n        }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down']\n        };\n    var trigger = customTriggerBuilder ? (customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen)) : (React.createElement(InternalButton, __assign({ ref: dropdownRef }, iconProps, { variant: triggerVariant, loading: loading, disabled: disabled, onClick: function (event) {\n            event.preventDefault();\n            clickHandler();\n        }, ariaLabel: ariaLabel, \"aria-haspopup\": true, \"aria-expanded\": canBeOpened && isOpen, formAction: \"none\" }), children));\n    var hasHeader = title || description;\n    var headerId = useUniqueId('awsui-button-dropdown__header');\n    return (React.createElement(\"div\", __assign({}, baseProps, { onKeyDown: onKeyDown, onKeyUp: onKeyUp, onMouseDown: handleMouseEvent, className: clsx(styles['button-dropdown'], styles[\"variant-\" + variant], baseProps.className), \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined, ref: __internalRootRef }),\n        React.createElement(Dropdown, { open: canBeOpened && isOpen, stretchWidth: false, stretchTriggerHeight: variant === 'navigation', expandToViewport: expandToViewport, preferCenter: preferCenter, onDropdownClose: function () {\n                toggleDropdown();\n            }, trigger: trigger, dropdownId: dropdownId },\n            hasHeader && (React.createElement(\"div\", { className: styles.header, id: headerId },\n                title && (React.createElement(InternalBox, { fontSize: \"heading-s\", fontWeight: \"bold\" },\n                    React.createElement(\"span\", { className: styles.title }, title))),\n                description && (React.createElement(InternalBox, { fontSize: \"body-s\" },\n                    React.createElement(\"span\", { className: styles.description }, description))))),\n            React.createElement(OptionsList, { open: canBeOpened && isOpen, position: \"static\", role: \"menu\", decreaseTopMargin: true, ariaLabelledby: hasHeader ? headerId : undefined },\n                React.createElement(ItemsList, { items: items, onItemActivate: onItemActivate, onGroupToggle: onGroupToggle, hasExpandableGroups: expandableGroups, targetItem: targetItem, isHighlighted: isHighlighted, isExpanded: isExpanded, highlightItem: highlightItem, expandToViewport: expandToViewport, variant: variant })))));\n});\nexport default InternalButtonDropdown;\n"]},"metadata":{},"sourceType":"module"}