{"ast":null,"code":"import React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { Segment } from './segment';\nimport styles from './styles.css.js';\nexport default function InternalSegmentedControl(_a) {\n  var selectedId = _a.selectedId,\n      options = _a.options,\n      label = _a.label,\n      ariaLabelledby = _a.ariaLabelledby,\n      onChange = _a.onChange;\n  var segmentByIdRef = useRef({});\n  var selectedOptions = (options || []).filter(function (option) {\n    return option.id === selectedId;\n  });\n  var currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;\n  var enabledSegments = (options || []).filter(function (option) {\n    return !option.disabled;\n  });\n\n  var moveHighlight = function (event, activeIndex) {\n    var _a;\n\n    if (event.keyCode !== KeyCode.right && event.keyCode !== KeyCode.left) {\n      return;\n    }\n\n    var nextIndex = activeIndex;\n\n    if (event.keyCode === KeyCode.right) {\n      nextIndex = activeIndex + 1 === enabledSegments.length ? 0 : activeIndex + 1;\n    } else if (event.keyCode === KeyCode.left) {\n      nextIndex = activeIndex === 0 ? enabledSegments.length - 1 : activeIndex - 1;\n    }\n\n    var nextSegmentId = enabledSegments[nextIndex].id;\n    (_a = segmentByIdRef.current[nextSegmentId]) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n\n  return React.createElement(\"div\", {\n    className: clsx(styles['segment-part'], styles[\"segment-count-\" + (options === null || options === void 0 ? void 0 : options.length)]),\n    \"aria-label\": label,\n    \"aria-labelledby\": ariaLabelledby,\n    role: \"toolbar\"\n  }, options && options.map(function (option, index) {\n    var isActive = selectedId === option.id;\n    var enabledSegmentIndex = enabledSegments.indexOf(option);\n    var tabIndex = isActive ? 0 : -1;\n\n    if (currentSelectedOption === null && enabledSegmentIndex === 0) {\n      tabIndex = 0;\n    }\n\n    return React.createElement(Segment, {\n      key: index,\n      id: option.id,\n      disabled: !!option.disabled,\n      iconName: option.iconName,\n      iconAlt: option.iconAlt,\n      iconUrl: option.iconUrl,\n      iconSvg: option.iconSvg,\n      text: option.text,\n      isActive: isActive,\n      tabIndex: tabIndex,\n      ref: function (node) {\n        if (node) {\n          segmentByIdRef.current[option.id] = node;\n        } else {\n          delete segmentByIdRef.current[option.id];\n        }\n      },\n      onClick: function () {\n        if (selectedId !== option.id) {\n          fireNonCancelableEvent(onChange, {\n            selectedId: option.id\n          });\n        }\n      },\n      onKeyDown: function (event) {\n        return moveHighlight(event, enabledSegmentIndex);\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/segmented-control/internal-segmented-control.js"],"names":["React","useRef","clsx","KeyCode","fireNonCancelableEvent","Segment","styles","InternalSegmentedControl","_a","selectedId","options","label","ariaLabelledby","onChange","segmentByIdRef","selectedOptions","filter","option","id","currentSelectedOption","length","enabledSegments","disabled","moveHighlight","event","activeIndex","keyCode","right","left","nextIndex","nextSegmentId","current","focus","createElement","className","role","map","index","isActive","enabledSegmentIndex","indexOf","tabIndex","key","iconName","iconAlt","iconUrl","iconSvg","text","ref","node","onClick","onKeyDown"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { Segment } from './segment';\nimport styles from './styles.css.js';\nexport default function InternalSegmentedControl(_a) {\n    var selectedId = _a.selectedId, options = _a.options, label = _a.label, ariaLabelledby = _a.ariaLabelledby, onChange = _a.onChange;\n    var segmentByIdRef = useRef({});\n    var selectedOptions = (options || []).filter(function (option) {\n        return option.id === selectedId;\n    });\n    var currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;\n    var enabledSegments = (options || []).filter(function (option) { return !option.disabled; });\n    var moveHighlight = function (event, activeIndex) {\n        var _a;\n        if (event.keyCode !== KeyCode.right && event.keyCode !== KeyCode.left) {\n            return;\n        }\n        var nextIndex = activeIndex;\n        if (event.keyCode === KeyCode.right) {\n            nextIndex = activeIndex + 1 === enabledSegments.length ? 0 : activeIndex + 1;\n        }\n        else if (event.keyCode === KeyCode.left) {\n            nextIndex = activeIndex === 0 ? enabledSegments.length - 1 : activeIndex - 1;\n        }\n        var nextSegmentId = enabledSegments[nextIndex].id;\n        (_a = segmentByIdRef.current[nextSegmentId]) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    return (React.createElement(\"div\", { className: clsx(styles['segment-part'], styles[\"segment-count-\" + (options === null || options === void 0 ? void 0 : options.length)]), \"aria-label\": label, \"aria-labelledby\": ariaLabelledby, role: \"toolbar\" }, options &&\n        options.map(function (option, index) {\n            var isActive = selectedId === option.id;\n            var enabledSegmentIndex = enabledSegments.indexOf(option);\n            var tabIndex = isActive ? 0 : -1;\n            if (currentSelectedOption === null && enabledSegmentIndex === 0) {\n                tabIndex = 0;\n            }\n            return (React.createElement(Segment, { key: index, id: option.id, disabled: !!option.disabled, iconName: option.iconName, iconAlt: option.iconAlt, iconUrl: option.iconUrl, iconSvg: option.iconSvg, text: option.text, isActive: isActive, tabIndex: tabIndex, ref: function (node) {\n                    if (node) {\n                        segmentByIdRef.current[option.id] = node;\n                    }\n                    else {\n                        delete segmentByIdRef.current[option.id];\n                    }\n                }, onClick: function () {\n                    if (selectedId !== option.id) {\n                        fireNonCancelableEvent(onChange, { selectedId: option.id });\n                    }\n                }, onKeyDown: function (event) { return moveHighlight(event, enabledSegmentIndex); } }));\n        })));\n}\n"]},"metadata":{},"sourceType":"module"}