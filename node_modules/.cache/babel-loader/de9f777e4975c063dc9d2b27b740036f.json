{"ast":null,"code":"import { differenceInDays, add } from 'date-fns';\nimport { X_TICK_COUNT_RATIO, Y_TICK_COUNT_RATIO } from './constants';\nexport function getXTickCount(width) {\n  return Math.ceil(width / X_TICK_COUNT_RATIO);\n}\nexport function getYTickCount(height) {\n  return Math.ceil(height / Y_TICK_COUNT_RATIO);\n}\nexport function createXTicks(scale, values) {\n  if (scale.isNumeric()) {\n    return scale.d3Scale.ticks(values);\n  } else if (scale.isTime()) {\n    var rawTicks = scale.d3Scale.ticks(values);\n    var domain = scale.d3Scale.domain();\n    return uniform(rawTicks, domain[domain.length - 1]);\n  } else {\n    return scale.d3Scale.domain();\n  }\n}\nexport function createYTicks(scale, values) {\n  var ticks = scale.d3Scale.ticks(values);\n\n  if (scale.scaleType === 'log' && ticks.length > 10) {\n    return scale.d3Scale.ticks(3);\n  }\n\n  return ticks;\n}\n\nfunction uniform(ticks, max) {\n  if (ticks.length < 3 || !isMixedDayInterval(ticks)) {\n    return ticks;\n  }\n\n  return createTwoDayInterval(ticks[0], max);\n}\n\nfunction isMixedDayInterval(ticks) {\n  var oneDayInterval = false;\n  var twoDayInterval = false;\n\n  for (var i = 1; i < ticks.length; i++) {\n    oneDayInterval = oneDayInterval || isDayInterval(ticks[i - 1], ticks[i], 1);\n    twoDayInterval = twoDayInterval || isDayInterval(ticks[i - 1], ticks[i], 2);\n  }\n\n  return oneDayInterval && twoDayInterval;\n}\n\nfunction isDayInterval(a, b, difference) {\n  if (difference === void 0) {\n    difference = 1;\n  }\n\n  return Math.abs(differenceInDays(a, b)) === difference;\n}\n\nfunction createTwoDayInterval(start, max) {\n  var result = [];\n  var curr = start;\n\n  while (curr < max) {\n    result.push(curr);\n    curr = add(curr, {\n      days: 2\n    });\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/internal/components/cartesian-chart/ticks.js"],"names":["differenceInDays","add","X_TICK_COUNT_RATIO","Y_TICK_COUNT_RATIO","getXTickCount","width","Math","ceil","getYTickCount","height","createXTicks","scale","values","isNumeric","d3Scale","ticks","isTime","rawTicks","domain","uniform","length","createYTicks","scaleType","max","isMixedDayInterval","createTwoDayInterval","oneDayInterval","twoDayInterval","i","isDayInterval","a","b","difference","abs","start","result","curr","push","days"],"mappings":"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","sourcesContent":["import { differenceInDays, add } from 'date-fns';\nimport { X_TICK_COUNT_RATIO, Y_TICK_COUNT_RATIO } from './constants';\nexport function getXTickCount(width) {\n    return Math.ceil(width / X_TICK_COUNT_RATIO);\n}\nexport function getYTickCount(height) {\n    return Math.ceil(height / Y_TICK_COUNT_RATIO);\n}\nexport function createXTicks(scale, values) {\n    if (scale.isNumeric()) {\n        return scale.d3Scale.ticks(values);\n    }\n    else if (scale.isTime()) {\n        var rawTicks = scale.d3Scale.ticks(values);\n        var domain = scale.d3Scale.domain();\n        return uniform(rawTicks, domain[domain.length - 1]);\n    }\n    else {\n        return scale.d3Scale.domain();\n    }\n}\nexport function createYTicks(scale, values) {\n    var ticks = scale.d3Scale.ticks(values);\n    if (scale.scaleType === 'log' && ticks.length > 10) {\n        return scale.d3Scale.ticks(3);\n    }\n    return ticks;\n}\nfunction uniform(ticks, max) {\n    if (ticks.length < 3 || !isMixedDayInterval(ticks)) {\n        return ticks;\n    }\n    return createTwoDayInterval(ticks[0], max);\n}\nfunction isMixedDayInterval(ticks) {\n    var oneDayInterval = false;\n    var twoDayInterval = false;\n    for (var i = 1; i < ticks.length; i++) {\n        oneDayInterval = oneDayInterval || isDayInterval(ticks[i - 1], ticks[i], 1);\n        twoDayInterval = twoDayInterval || isDayInterval(ticks[i - 1], ticks[i], 2);\n    }\n    return oneDayInterval && twoDayInterval;\n}\nfunction isDayInterval(a, b, difference) {\n    if (difference === void 0) { difference = 1; }\n    return Math.abs(differenceInDays(a, b)) === difference;\n}\nfunction createTwoDayInterval(start, max) {\n    var result = [];\n    var curr = start;\n    while (curr < max) {\n        result.push(curr);\n        curr = add(curr, { days: 2 });\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}