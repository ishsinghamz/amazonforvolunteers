{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport Option from '../../internal/components/option';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\n\nvar Item = function (_a, ref) {\n  var _b;\n\n  var option = _a.option,\n      highlighted = _a.highlighted,\n      selected = _a.selected,\n      filteringValue = _a.filteringValue,\n      hasCheckbox = _a.hasCheckbox,\n      isKeyboard = _a.isKeyboard,\n      virtualPosition = _a.virtualPosition,\n      padBottom = _a.padBottom,\n      isNextSelected = _a.isNextSelected,\n      restProps = __rest(_a, [\"option\", \"highlighted\", \"selected\", \"filteringValue\", \"hasCheckbox\", \"isKeyboard\", \"virtualPosition\", \"padBottom\", \"isNextSelected\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var isParent = option.type === 'parent';\n  var isChild = option.type === 'child';\n  var wrappedOption = option.option;\n  var className = clsx(styles.item, (_b = {}, _b[styles.disabled] = option.disabled, _b));\n  return React.createElement(SelectableItem, __assign({\n    ariaSelected: selected,\n    selected: selected,\n    isNextSelected: isNextSelected,\n    highlighted: highlighted,\n    disabled: option.disabled,\n    isParent: isParent,\n    isChild: isChild,\n    isKeyboard: isKeyboard,\n    ref: ref,\n    virtualPosition: virtualPosition,\n    padBottom: padBottom\n  }, baseProps), React.createElement(\"div\", {\n    className: className\n  }, hasCheckbox && !isParent && React.createElement(\"div\", {\n    className: styles.checkbox\n  }, React.createElement(CheckboxIcon, {\n    checked: selected || false,\n    disabled: option.disabled\n  })), isParent ? wrappedOption.label || wrappedOption.value : React.createElement(Option, {\n    option: wrappedOption,\n    highlightText: filteringValue\n  })));\n};\n\nexport default React.memo(React.forwardRef(Item));","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/select/parts/item.js"],"names":["__assign","__rest","React","clsx","styles","Option","SelectableItem","getBaseProps","CheckboxIcon","Item","_a","ref","_b","option","highlighted","selected","filteringValue","hasCheckbox","isKeyboard","virtualPosition","padBottom","isNextSelected","restProps","baseProps","isParent","type","isChild","wrappedOption","className","item","disabled","createElement","ariaSelected","checkbox","checked","label","value","highlightText","memo","forwardRef"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport Option from '../../internal/components/option';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\nvar Item = function (_a, ref) {\n    var _b;\n    var option = _a.option, highlighted = _a.highlighted, selected = _a.selected, filteringValue = _a.filteringValue, hasCheckbox = _a.hasCheckbox, isKeyboard = _a.isKeyboard, virtualPosition = _a.virtualPosition, padBottom = _a.padBottom, isNextSelected = _a.isNextSelected, restProps = __rest(_a, [\"option\", \"highlighted\", \"selected\", \"filteringValue\", \"hasCheckbox\", \"isKeyboard\", \"virtualPosition\", \"padBottom\", \"isNextSelected\"]);\n    var baseProps = getBaseProps(restProps);\n    var isParent = option.type === 'parent';\n    var isChild = option.type === 'child';\n    var wrappedOption = option.option;\n    var className = clsx(styles.item, (_b = {},\n        _b[styles.disabled] = option.disabled,\n        _b));\n    return (React.createElement(SelectableItem, __assign({ ariaSelected: selected, selected: selected, isNextSelected: isNextSelected, highlighted: highlighted, disabled: option.disabled, isParent: isParent, isChild: isChild, isKeyboard: isKeyboard, ref: ref, virtualPosition: virtualPosition, padBottom: padBottom }, baseProps),\n        React.createElement(\"div\", { className: className },\n            hasCheckbox && !isParent && (React.createElement(\"div\", { className: styles.checkbox },\n                React.createElement(CheckboxIcon, { checked: selected || false, disabled: option.disabled }))),\n            isParent ? (wrappedOption.label || wrappedOption.value) : (React.createElement(Option, { option: wrappedOption, highlightText: filteringValue })))));\n};\nexport default React.memo(React.forwardRef(Item));\n"]},"metadata":{},"sourceType":"module"}