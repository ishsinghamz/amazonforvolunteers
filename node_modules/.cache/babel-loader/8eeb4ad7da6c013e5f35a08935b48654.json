{"ast":null,"code":"var EPSILON = 0.0000000000001;\nexport function computeDomainX(series) {\n  var xValues = getXValues(series);\n\n  if (xValues.length === 0) {\n    return [];\n  }\n\n  if (typeof xValues[0] === 'string') {\n    return uniq(xValues);\n  }\n\n  return xValues.reduce(function (_a, x) {\n    var min = _a[0],\n        max = _a[1];\n    return [x < min ? x : min, max < x ? x : max];\n  }, [xValues[0], xValues[0]]);\n}\nexport function computeDomainY(series, scaleType) {\n  var min = Number.POSITIVE_INFINITY;\n  var max = Number.NEGATIVE_INFINITY;\n  series.forEach(function (s) {\n    if (s.type === 'threshold') {\n      min = Math.min(min, s.y);\n      max = Math.max(max, s.y);\n    }\n  });\n  getXValues(series).forEach(function (_, xIndex) {\n    var _a;\n\n    var stackY = scaleType === 'linear' ? 0 : EPSILON;\n\n    for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\n      var s = series_1[_i];\n\n      if (s.type === 'area') {\n        stackY = stackY + (((_a = s.data[xIndex]) === null || _a === void 0 ? void 0 : _a.y) || 0);\n        min = Math.min(min, stackY);\n        max = Math.max(max, stackY);\n      }\n    }\n  });\n\n  if (min === Number.POSITIVE_INFINITY) {\n    return [];\n  }\n\n  if (scaleType === 'log' && min === 0 && max > 1) {\n    return [1, max];\n  }\n\n  return [min, max];\n}\nexport function computePlotPoints(series, xScale, yScale) {\n  var xValues = getXValues(series);\n  var xy = [];\n  var xs = [];\n  var sx = [];\n  getVisibleData(xValues, xScale).forEach(function (_a, xIndex) {\n    var x = _a.x,\n        scaledX = _a.scaledX;\n    var stackY = yScale.scaleType === 'linear' ? 0 : EPSILON;\n    var points = [];\n    series.forEach(function (s, sIndex) {\n      var _a;\n\n      if (s.type === 'threshold') {\n        var scaledY = yScale.d3Scale(s.y) || 0;\n        points.push({\n          x: x,\n          y0: s.y,\n          y1: s.y,\n          scaled: {\n            x: scaledX,\n            y0: scaledY,\n            y1: scaledY\n          },\n          index: {\n            x: xIndex,\n            s: sIndex,\n            y: 0\n          },\n          value: 0\n        });\n      } else {\n        var value = ((_a = s.data[xIndex]) === null || _a === void 0 ? void 0 : _a.y) || 0;\n        var y0 = stackY;\n        var y1 = stackY + value;\n        points.push({\n          x: x,\n          y0: y0,\n          y1: y1,\n          scaled: {\n            x: scaledX,\n            y0: yScale.d3Scale(y0) || 0,\n            y1: yScale.d3Scale(y1) || 0\n          },\n          index: {\n            x: xIndex,\n            s: sIndex,\n            y: 0\n          },\n          value: value\n        });\n        stackY = y1;\n      }\n    });\n    points.sort(function (p1, p2) {\n      return p1.y1 - p2.y1;\n    }).forEach(function (point, index) {\n      point.index.y = index;\n      insertIntoMatrix(xy, point.index.x, point.index.y, point);\n      insertIntoMatrix(xs, point.index.x, point.index.s, point);\n      insertIntoMatrix(sx, point.index.s, point.index.x, point);\n    });\n  });\n  return {\n    xy: xy,\n    xs: xs,\n    sx: sx\n  };\n}\nexport function findClosest(sortedArray, target, getter) {\n  if (sortedArray.length === 0) {\n    throw new Error('Invariant violation: array is empty.');\n  }\n\n  var isAscending = getter(sortedArray[0]) < getter(sortedArray[sortedArray.length - 1]);\n\n  var compare = function (x) {\n    return isAscending ? getter(x) < target : getter(x) > target;\n  };\n\n  var delta = function (x) {\n    return Math.abs(getter(x) - target);\n  };\n\n  var lo = 0;\n  var hi = sortedArray.length - 1;\n\n  while (hi - lo > 1) {\n    var mid = Math.floor((lo + hi) / 2);\n\n    if (compare(sortedArray[mid])) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return delta(sortedArray[lo]) < delta(sortedArray[hi]) ? sortedArray[lo] : sortedArray[hi];\n}\nexport function circleIndex(index, _a) {\n  var from = _a[0],\n      to = _a[1];\n\n  if (index < from) {\n    return to;\n  }\n\n  if (index > to) {\n    return from;\n  }\n\n  return index;\n}\nexport function throttle(func, delay) {\n  var pending = null;\n  var lastInvokeTime = null;\n  var timerId = null;\n\n  function pendingFunc() {\n    if (pending && lastInvokeTime !== null) {\n      var time = Date.now();\n      var shouldInvoke = time - lastInvokeTime >= delay;\n\n      if (shouldInvoke) {\n        func.apply(pending[\"this\"], pending.args);\n        lastInvokeTime = time;\n        pending = null;\n      } else {\n        startTimer();\n      }\n    }\n  }\n\n  function startTimer() {\n    if (timerId) {\n      cancelAnimationFrame(timerId);\n    }\n\n    timerId = requestAnimationFrame(pendingFunc);\n  }\n\n  function throttled() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (lastInvokeTime === null) {\n      func.apply(this, args);\n      lastInvokeTime = Date.now();\n    } else {\n      pending = {\n        \"this\": this,\n        args: args\n      };\n      startTimer();\n    }\n  }\n\n  throttled.cancel = function () {\n    if (timerId) {\n      cancelAnimationFrame(timerId);\n    }\n\n    pending = null;\n    lastInvokeTime = null;\n    timerId = null;\n  };\n\n  return throttled;\n}\nexport function isSeriesValid(series) {\n  var _a;\n\n  var sampleXValues = getXValues(series);\n\n  for (var _i = 0, series_2 = series; _i < series_2.length; _i++) {\n    var s = series_2[_i];\n\n    if (s.type === 'area') {\n      for (var i = 0; i < Math.max(s.data.length, sampleXValues.length); i++) {\n        if (((_a = s.data[i]) === null || _a === void 0 ? void 0 : _a.x) !== sampleXValues[i]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction getXValues(series) {\n  for (var _i = 0, series_3 = series; _i < series_3.length; _i++) {\n    var s = series_3[_i];\n\n    if (s.type === 'area') {\n      return s.data.map(function (_a) {\n        var x = _a.x;\n        return x;\n      });\n    }\n  }\n\n  return [];\n}\n\nfunction getVisibleData(data, xScale) {\n  var scaledOffsetX = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;\n  var visibleData = [];\n\n  for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n    var x = data_1[_i];\n    var scaledX = xScale.d3Scale(x);\n\n    if (scaledX !== undefined) {\n      visibleData.push({\n        x: x,\n        scaledX: scaledX + scaledOffsetX\n      });\n    }\n  }\n\n  return visibleData;\n}\n\nfunction insertIntoMatrix(matrix, row, col, value) {\n  if (!matrix[row]) {\n    matrix[row] = [];\n  }\n\n  matrix[row][col] = value;\n}\n\nfunction uniq(arr) {\n  var set = new Set();\n  var uniqArray = [];\n\n  for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n    var value = arr_1[_i];\n\n    if (!set.has(value)) {\n      set.add(value);\n      uniqArray.push(value);\n    }\n  }\n\n  return uniqArray;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/area-chart/model/utils.js"],"names":["EPSILON","computeDomainX","series","xValues","getXValues","length","uniq","reduce","_a","x","min","max","computeDomainY","scaleType","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","forEach","s","type","Math","y","_","xIndex","stackY","_i","series_1","data","computePlotPoints","xScale","yScale","xy","xs","sx","getVisibleData","scaledX","points","sIndex","scaledY","d3Scale","push","y0","y1","scaled","index","value","sort","p1","p2","point","insertIntoMatrix","findClosest","sortedArray","target","getter","Error","isAscending","compare","delta","abs","lo","hi","mid","floor","circleIndex","from","to","throttle","func","delay","pending","lastInvokeTime","timerId","pendingFunc","time","Date","now","shouldInvoke","apply","args","startTimer","cancelAnimationFrame","requestAnimationFrame","throttled","arguments","cancel","isSeriesValid","sampleXValues","series_2","i","series_3","map","scaledOffsetX","isCategorical","bandwidth","visibleData","data_1","undefined","matrix","row","col","arr","set","Set","uniqArray","arr_1","has","add"],"mappings":"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","sourcesContent":["var EPSILON = 0.0000000000001;\nexport function computeDomainX(series) {\n    var xValues = getXValues(series);\n    if (xValues.length === 0) {\n        return [];\n    }\n    if (typeof xValues[0] === 'string') {\n        return uniq(xValues);\n    }\n    return xValues.reduce(function (_a, x) {\n        var min = _a[0], max = _a[1];\n        return [x < min ? x : min, max < x ? x : max];\n    }, [xValues[0], xValues[0]]);\n}\nexport function computeDomainY(series, scaleType) {\n    var min = Number.POSITIVE_INFINITY;\n    var max = Number.NEGATIVE_INFINITY;\n    series.forEach(function (s) {\n        if (s.type === 'threshold') {\n            min = Math.min(min, s.y);\n            max = Math.max(max, s.y);\n        }\n    });\n    getXValues(series).forEach(function (_, xIndex) {\n        var _a;\n        var stackY = scaleType === 'linear' ? 0 : EPSILON;\n        for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\n            var s = series_1[_i];\n            if (s.type === 'area') {\n                stackY = stackY + (((_a = s.data[xIndex]) === null || _a === void 0 ? void 0 : _a.y) || 0);\n                min = Math.min(min, stackY);\n                max = Math.max(max, stackY);\n            }\n        }\n    });\n    if (min === Number.POSITIVE_INFINITY) {\n        return [];\n    }\n    if (scaleType === 'log' && min === 0 && max > 1) {\n        return [1, max];\n    }\n    return [min, max];\n}\nexport function computePlotPoints(series, xScale, yScale) {\n    var xValues = getXValues(series);\n    var xy = [];\n    var xs = [];\n    var sx = [];\n    getVisibleData(xValues, xScale).forEach(function (_a, xIndex) {\n        var x = _a.x, scaledX = _a.scaledX;\n        var stackY = yScale.scaleType === 'linear' ? 0 : EPSILON;\n        var points = [];\n        series.forEach(function (s, sIndex) {\n            var _a;\n            if (s.type === 'threshold') {\n                var scaledY = yScale.d3Scale(s.y) || 0;\n                points.push({\n                    x: x,\n                    y0: s.y,\n                    y1: s.y,\n                    scaled: { x: scaledX, y0: scaledY, y1: scaledY },\n                    index: { x: xIndex, s: sIndex, y: 0 },\n                    value: 0\n                });\n            }\n            else {\n                var value = ((_a = s.data[xIndex]) === null || _a === void 0 ? void 0 : _a.y) || 0;\n                var y0 = stackY;\n                var y1 = stackY + value;\n                points.push({\n                    x: x,\n                    y0: y0,\n                    y1: y1,\n                    scaled: { x: scaledX, y0: yScale.d3Scale(y0) || 0, y1: yScale.d3Scale(y1) || 0 },\n                    index: { x: xIndex, s: sIndex, y: 0 },\n                    value: value\n                });\n                stackY = y1;\n            }\n        });\n        points\n            .sort(function (p1, p2) { return p1.y1 - p2.y1; })\n            .forEach(function (point, index) {\n            point.index.y = index;\n            insertIntoMatrix(xy, point.index.x, point.index.y, point);\n            insertIntoMatrix(xs, point.index.x, point.index.s, point);\n            insertIntoMatrix(sx, point.index.s, point.index.x, point);\n        });\n    });\n    return { xy: xy, xs: xs, sx: sx };\n}\nexport function findClosest(sortedArray, target, getter) {\n    if (sortedArray.length === 0) {\n        throw new Error('Invariant violation: array is empty.');\n    }\n    var isAscending = getter(sortedArray[0]) < getter(sortedArray[sortedArray.length - 1]);\n    var compare = function (x) { return (isAscending ? getter(x) < target : getter(x) > target); };\n    var delta = function (x) { return Math.abs(getter(x) - target); };\n    var lo = 0;\n    var hi = sortedArray.length - 1;\n    while (hi - lo > 1) {\n        var mid = Math.floor((lo + hi) / 2);\n        if (compare(sortedArray[mid])) {\n            lo = mid;\n        }\n        else {\n            hi = mid;\n        }\n    }\n    return delta(sortedArray[lo]) < delta(sortedArray[hi]) ? sortedArray[lo] : sortedArray[hi];\n}\nexport function circleIndex(index, _a) {\n    var from = _a[0], to = _a[1];\n    if (index < from) {\n        return to;\n    }\n    if (index > to) {\n        return from;\n    }\n    return index;\n}\nexport function throttle(func, delay) {\n    var pending = null;\n    var lastInvokeTime = null;\n    var timerId = null;\n    function pendingFunc() {\n        if (pending && lastInvokeTime !== null) {\n            var time = Date.now();\n            var shouldInvoke = time - lastInvokeTime >= delay;\n            if (shouldInvoke) {\n                func.apply(pending[\"this\"], pending.args);\n                lastInvokeTime = time;\n                pending = null;\n            }\n            else {\n                startTimer();\n            }\n        }\n    }\n    function startTimer() {\n        if (timerId) {\n            cancelAnimationFrame(timerId);\n        }\n        timerId = requestAnimationFrame(pendingFunc);\n    }\n    function throttled() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (lastInvokeTime === null) {\n            func.apply(this, args);\n            lastInvokeTime = Date.now();\n        }\n        else {\n            pending = { \"this\": this, args: args };\n            startTimer();\n        }\n    }\n    throttled.cancel = function () {\n        if (timerId) {\n            cancelAnimationFrame(timerId);\n        }\n        pending = null;\n        lastInvokeTime = null;\n        timerId = null;\n    };\n    return throttled;\n}\nexport function isSeriesValid(series) {\n    var _a;\n    var sampleXValues = getXValues(series);\n    for (var _i = 0, series_2 = series; _i < series_2.length; _i++) {\n        var s = series_2[_i];\n        if (s.type === 'area') {\n            for (var i = 0; i < Math.max(s.data.length, sampleXValues.length); i++) {\n                if (((_a = s.data[i]) === null || _a === void 0 ? void 0 : _a.x) !== sampleXValues[i]) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction getXValues(series) {\n    for (var _i = 0, series_3 = series; _i < series_3.length; _i++) {\n        var s = series_3[_i];\n        if (s.type === 'area') {\n            return s.data.map(function (_a) {\n                var x = _a.x;\n                return x;\n            });\n        }\n    }\n    return [];\n}\nfunction getVisibleData(data, xScale) {\n    var scaledOffsetX = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;\n    var visibleData = [];\n    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n        var x = data_1[_i];\n        var scaledX = xScale.d3Scale(x);\n        if (scaledX !== undefined) {\n            visibleData.push({ x: x, scaledX: scaledX + scaledOffsetX });\n        }\n    }\n    return visibleData;\n}\nfunction insertIntoMatrix(matrix, row, col, value) {\n    if (!matrix[row]) {\n        matrix[row] = [];\n    }\n    matrix[row][col] = value;\n}\nfunction uniq(arr) {\n    var set = new Set();\n    var uniqArray = [];\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var value = arr_1[_i];\n        if (!set.has(value)) {\n            set.add(value);\n            uniqArray.push(value);\n        }\n    }\n    return uniqArray;\n}\n"]},"metadata":{},"sourceType":"module"}