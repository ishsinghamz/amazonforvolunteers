{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport styles from './styles.css.js';\nimport useFocusVisible from '../../hooks/focus-visible/index';\nexport default function FocusOutline(_a) {\n  var elementKey = _a.elementKey,\n      elementRef = _a.elementRef,\n      _b = _a.offset,\n      offset = _b === void 0 ? 0 : _b;\n  var ref = useRef(null);\n  var focusVisible = useFocusVisible()[\"data-awsui-focus-visible\"];\n  useEffect(function () {\n    if (!ref.current) {\n      return;\n    }\n\n    if (focusVisible && elementKey && elementRef && elementRef.current && elementRef.current.getBBox) {\n      var element = elementRef.current.getBBox();\n      showOutline(ref.current, element, offset);\n    } else {\n      hideOutline(ref.current);\n    }\n  }, [focusVisible, elementKey, elementRef, offset]);\n  return React.createElement(\"rect\", {\n    ref: ref,\n    \"aria-hidden\": \"true\",\n    className: styles['focus-outline'],\n    rx: \"2\"\n  });\n}\n\nfunction showOutline(el, position, offset) {\n  el.setAttribute('x', (position.x - offset).toString());\n  el.setAttribute('y', (position.y - offset).toString());\n  el.setAttribute('width', (position.width + 2 * offset).toString());\n  el.setAttribute('height', (position.height + 2 * offset).toString());\n  el.style.visibility = 'visible';\n}\n\nfunction hideOutline(el) {\n  el.style.visibility = 'hidden';\n  el.removeAttribute('x');\n  el.removeAttribute('y');\n  el.removeAttribute('width');\n  el.removeAttribute('height');\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/internal/components/chart-plot/focus-outline.js"],"names":["React","useEffect","useRef","styles","useFocusVisible","FocusOutline","_a","elementKey","elementRef","_b","offset","ref","focusVisible","current","getBBox","element","showOutline","hideOutline","createElement","className","rx","el","position","setAttribute","x","toString","y","width","height","style","visibility","removeAttribute"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,eAAe,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AACrC,MAAIC,UAAU,GAAGD,EAAE,CAACC,UAApB;AAAA,MAAgCC,UAAU,GAAGF,EAAE,CAACE,UAAhD;AAAA,MAA4DC,EAAE,GAAGH,EAAE,CAACI,MAApE;AAAA,MAA4EA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAzG;AACA,MAAIE,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAhB;AACA,MAAIU,YAAY,GAAGR,eAAe,GAAG,0BAAH,CAAlC;AACAH,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,CAACU,GAAG,CAACE,OAAT,EAAkB;AACd;AACH;;AACD,QAAID,YAAY,IAAIL,UAAhB,IAA8BC,UAA9B,IAA4CA,UAAU,CAACK,OAAvD,IAAkEL,UAAU,CAACK,OAAX,CAAmBC,OAAzF,EAAkG;AAC9F,UAAIC,OAAO,GAAGP,UAAU,CAACK,OAAX,CAAmBC,OAAnB,EAAd;AACAE,MAAAA,WAAW,CAACL,GAAG,CAACE,OAAL,EAAcE,OAAd,EAAuBL,MAAvB,CAAX;AACH,KAHD,MAIK;AACDO,MAAAA,WAAW,CAACN,GAAG,CAACE,OAAL,CAAX;AACH;AACJ,GAXQ,EAWN,CAACD,YAAD,EAAeL,UAAf,EAA2BC,UAA3B,EAAuCE,MAAvC,CAXM,CAAT;AAYA,SAAOV,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4B;AAAEP,IAAAA,GAAG,EAAEA,GAAP;AAAY,mBAAe,MAA3B;AAAmCQ,IAAAA,SAAS,EAAEhB,MAAM,CAAC,eAAD,CAApD;AAAuEiB,IAAAA,EAAE,EAAE;AAA3E,GAA5B,CAAP;AACH;;AACD,SAASJ,WAAT,CAAqBK,EAArB,EAAyBC,QAAzB,EAAmCZ,MAAnC,EAA2C;AACvCW,EAAAA,EAAE,CAACE,YAAH,CAAgB,GAAhB,EAAqB,CAACD,QAAQ,CAACE,CAAT,GAAad,MAAd,EAAsBe,QAAtB,EAArB;AACAJ,EAAAA,EAAE,CAACE,YAAH,CAAgB,GAAhB,EAAqB,CAACD,QAAQ,CAACI,CAAT,GAAahB,MAAd,EAAsBe,QAAtB,EAArB;AACAJ,EAAAA,EAAE,CAACE,YAAH,CAAgB,OAAhB,EAAyB,CAACD,QAAQ,CAACK,KAAT,GAAiB,IAAIjB,MAAtB,EAA8Be,QAA9B,EAAzB;AACAJ,EAAAA,EAAE,CAACE,YAAH,CAAgB,QAAhB,EAA0B,CAACD,QAAQ,CAACM,MAAT,GAAkB,IAAIlB,MAAvB,EAA+Be,QAA/B,EAA1B;AACAJ,EAAAA,EAAE,CAACQ,KAAH,CAASC,UAAT,GAAsB,SAAtB;AACH;;AACD,SAASb,WAAT,CAAqBI,EAArB,EAAyB;AACrBA,EAAAA,EAAE,CAACQ,KAAH,CAASC,UAAT,GAAsB,QAAtB;AACAT,EAAAA,EAAE,CAACU,eAAH,CAAmB,GAAnB;AACAV,EAAAA,EAAE,CAACU,eAAH,CAAmB,GAAnB;AACAV,EAAAA,EAAE,CAACU,eAAH,CAAmB,OAAnB;AACAV,EAAAA,EAAE,CAACU,eAAH,CAAmB,QAAnB;AACH","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styles from './styles.css.js';\nimport useFocusVisible from '../../hooks/focus-visible/index';\nexport default function FocusOutline(_a) {\n    var elementKey = _a.elementKey, elementRef = _a.elementRef, _b = _a.offset, offset = _b === void 0 ? 0 : _b;\n    var ref = useRef(null);\n    var focusVisible = useFocusVisible()[\"data-awsui-focus-visible\"];\n    useEffect(function () {\n        if (!ref.current) {\n            return;\n        }\n        if (focusVisible && elementKey && elementRef && elementRef.current && elementRef.current.getBBox) {\n            var element = elementRef.current.getBBox();\n            showOutline(ref.current, element, offset);\n        }\n        else {\n            hideOutline(ref.current);\n        }\n    }, [focusVisible, elementKey, elementRef, offset]);\n    return React.createElement(\"rect\", { ref: ref, \"aria-hidden\": \"true\", className: styles['focus-outline'], rx: \"2\" });\n}\nfunction showOutline(el, position, offset) {\n    el.setAttribute('x', (position.x - offset).toString());\n    el.setAttribute('y', (position.y - offset).toString());\n    el.setAttribute('width', (position.width + 2 * offset).toString());\n    el.setAttribute('height', (position.height + 2 * offset).toString());\n    el.style.visibility = 'visible';\n}\nfunction hideOutline(el) {\n    el.style.visibility = 'hidden';\n    el.removeAttribute('x');\n    el.removeAttribute('y');\n    el.removeAttribute('width');\n    el.removeAttribute('height');\n}\n"]},"metadata":{},"sourceType":"module"}