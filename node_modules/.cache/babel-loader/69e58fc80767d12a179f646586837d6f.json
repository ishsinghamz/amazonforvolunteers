{"ast":null,"code":"import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nexport default function Notifications() {\n  var _a;\n\n  var _b = useContext(AppLayoutContext),\n      ariaLabels = _b.ariaLabels,\n      hasNotificationsContent = _b.hasNotificationsContent,\n      notifications = _b.notifications,\n      notificationsElement = _b.notificationsElement,\n      stickyNotifications = _b.stickyNotifications;\n\n  if (!notifications) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    \"aria-label\": (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications) !== null && _a !== void 0 ? _a : undefined,\n    className: clsx(styles.notifications, testutilStyles.notifications, 'awsui-context-content-header'),\n    \"data-has-notifications-content\": hasNotificationsContent ? true : false,\n    \"data-sticky\": stickyNotifications ? 'true' : undefined,\n    role: \"region\",\n    ref: notificationsElement\n  }, notifications);\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/app-layout/visual-refresh/notifications.js"],"names":["React","useContext","clsx","AppLayoutContext","styles","testutilStyles","Notifications","_a","_b","ariaLabels","hasNotificationsContent","notifications","notificationsElement","stickyNotifications","createElement","undefined","className","role","ref"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,eAAe,SAASC,aAAT,GAAyB;AACpC,MAAIC,EAAJ;;AACA,MAAIC,EAAE,GAAGP,UAAU,CAACE,gBAAD,CAAnB;AAAA,MAAuCM,UAAU,GAAGD,EAAE,CAACC,UAAvD;AAAA,MAAmEC,uBAAuB,GAAGF,EAAE,CAACE,uBAAhG;AAAA,MAAyHC,aAAa,GAAGH,EAAE,CAACG,aAA5I;AAAA,MAA2JC,oBAAoB,GAAGJ,EAAE,CAACI,oBAArL;AAAA,MAA2MC,mBAAmB,GAAGL,EAAE,CAACK,mBAApO;;AACA,MAAI,CAACF,aAAL,EAAoB;AAChB,WAAO,IAAP;AACH;;AACD,SAAQX,KAAK,CAACc,aAAN,CAAoB,KAApB,EAA2B;AAAE,kBAAc,CAACP,EAAE,GAAGE,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACE,aAAzE,MAA4F,IAA5F,IAAoGJ,EAAE,KAAK,KAAK,CAAhH,GAAoHA,EAApH,GAAyHQ,SAAzI;AAAoJC,IAAAA,SAAS,EAAEd,IAAI,CAACE,MAAM,CAACO,aAAR,EAAuBN,cAAc,CAACM,aAAtC,EAAqD,8BAArD,CAAnK;AAAyP,sCAAkCD,uBAAuB,GAAG,IAAH,GAAU,KAA5T;AAAmU,mBAAeG,mBAAmB,GAAG,MAAH,GAAYE,SAAjX;AAA4XE,IAAAA,IAAI,EAAE,QAAlY;AAA4YC,IAAAA,GAAG,EAAEN;AAAjZ,GAA3B,EAAocD,aAApc,CAAR;AACH","sourcesContent":["import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nexport default function Notifications() {\n    var _a;\n    var _b = useContext(AppLayoutContext), ariaLabels = _b.ariaLabels, hasNotificationsContent = _b.hasNotificationsContent, notifications = _b.notifications, notificationsElement = _b.notificationsElement, stickyNotifications = _b.stickyNotifications;\n    if (!notifications) {\n        return null;\n    }\n    return (React.createElement(\"div\", { \"aria-label\": (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications) !== null && _a !== void 0 ? _a : undefined, className: clsx(styles.notifications, testutilStyles.notifications, 'awsui-context-content-header'), \"data-has-notifications-content\": hasNotificationsContent ? true : false, \"data-sticky\": stickyNotifications ? 'true' : undefined, role: \"region\", ref: notificationsElement }, notifications));\n}\n"]},"metadata":{},"sourceType":"module"}