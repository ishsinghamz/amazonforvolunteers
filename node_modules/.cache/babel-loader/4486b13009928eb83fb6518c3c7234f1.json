{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport Item from '../parts/item';\nimport { getItemProps } from './get-item-props';\nexport var renderOptions = function (_a) {\n  var options = _a.options,\n      getOptionProps = _a.getOptionProps,\n      filteringValue = _a.filteringValue,\n      _b = _a.isKeyboard,\n      isKeyboard = _b === void 0 ? false : _b,\n      _c = _a.checkboxes,\n      checkboxes = _c === void 0 ? false : _c,\n      hasDropdownStatus = _a.hasDropdownStatus,\n      virtualItems = _a.virtualItems;\n  return options.map(function (option, index) {\n    var virtualItem = virtualItems && virtualItems[index];\n    var globalIndex = virtualItem ? virtualItem.index : index;\n    var props = getItemProps({\n      option: option,\n      index: globalIndex,\n      getOptionProps: getOptionProps,\n      filteringValue: filteringValue,\n      isKeyboard: isKeyboard,\n      checkboxes: checkboxes\n    });\n    var isLastItem = index === options.length - 1;\n    var padBottom = !hasDropdownStatus && isLastItem;\n    return React.createElement(Item, __assign({\n      key: globalIndex\n    }, props, {\n      virtualPosition: virtualItem && virtualItem.start,\n      ref: virtualItem && virtualItem.measureRef,\n      padBottom: padBottom\n    }));\n  });\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/select/utils/render-options.js"],"names":["__assign","React","Item","getItemProps","renderOptions","_a","options","getOptionProps","filteringValue","_b","isKeyboard","_c","checkboxes","hasDropdownStatus","virtualItems","map","option","index","virtualItem","globalIndex","props","isLastItem","length","padBottom","createElement","key","virtualPosition","start","ref","measureRef"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAO,IAAIC,aAAa,GAAG,UAAUC,EAAV,EAAc;AACrC,MAAIC,OAAO,GAAGD,EAAE,CAACC,OAAjB;AAAA,MAA0BC,cAAc,GAAGF,EAAE,CAACE,cAA9C;AAAA,MAA8DC,cAAc,GAAGH,EAAE,CAACG,cAAlF;AAAA,MAAkGC,EAAE,GAAGJ,EAAE,CAACK,UAA1G;AAAA,MAAsHA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3J;AAAA,MAA+JE,EAAE,GAAGN,EAAE,CAACO,UAAvK;AAAA,MAAmLA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAAxN;AAAA,MAA4NE,iBAAiB,GAAGR,EAAE,CAACQ,iBAAnP;AAAA,MAAsQC,YAAY,GAAGT,EAAE,CAACS,YAAxR;AACA,SAAOR,OAAO,CAACS,GAAR,CAAY,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACxC,QAAIC,WAAW,GAAGJ,YAAY,IAAIA,YAAY,CAACG,KAAD,CAA9C;AACA,QAAIE,WAAW,GAAGD,WAAW,GAAGA,WAAW,CAACD,KAAf,GAAuBA,KAApD;AACA,QAAIG,KAAK,GAAGjB,YAAY,CAAC;AACrBa,MAAAA,MAAM,EAAEA,MADa;AAErBC,MAAAA,KAAK,EAAEE,WAFc;AAGrBZ,MAAAA,cAAc,EAAEA,cAHK;AAIrBC,MAAAA,cAAc,EAAEA,cAJK;AAKrBE,MAAAA,UAAU,EAAEA,UALS;AAMrBE,MAAAA,UAAU,EAAEA;AANS,KAAD,CAAxB;AAQA,QAAIS,UAAU,GAAGJ,KAAK,KAAKX,OAAO,CAACgB,MAAR,GAAiB,CAA5C;AACA,QAAIC,SAAS,GAAG,CAACV,iBAAD,IAAsBQ,UAAtC;AACA,WAAQpB,KAAK,CAACuB,aAAN,CAAoBtB,IAApB,EAA0BF,QAAQ,CAAC;AAAEyB,MAAAA,GAAG,EAAEN;AAAP,KAAD,EAAuBC,KAAvB,EAA8B;AAAEM,MAAAA,eAAe,EAAER,WAAW,IAAIA,WAAW,CAACS,KAA9C;AAAqDC,MAAAA,GAAG,EAAEV,WAAW,IAAIA,WAAW,CAACW,UAArF;AAAiGN,MAAAA,SAAS,EAAEA;AAA5G,KAA9B,CAAlC,CAAR;AACH,GAdM,CAAP;AAeH,CAjBM","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport Item from '../parts/item';\nimport { getItemProps } from './get-item-props';\nexport var renderOptions = function (_a) {\n    var options = _a.options, getOptionProps = _a.getOptionProps, filteringValue = _a.filteringValue, _b = _a.isKeyboard, isKeyboard = _b === void 0 ? false : _b, _c = _a.checkboxes, checkboxes = _c === void 0 ? false : _c, hasDropdownStatus = _a.hasDropdownStatus, virtualItems = _a.virtualItems;\n    return options.map(function (option, index) {\n        var virtualItem = virtualItems && virtualItems[index];\n        var globalIndex = virtualItem ? virtualItem.index : index;\n        var props = getItemProps({\n            option: option,\n            index: globalIndex,\n            getOptionProps: getOptionProps,\n            filteringValue: filteringValue,\n            isKeyboard: isKeyboard,\n            checkboxes: checkboxes\n        });\n        var isLastItem = index === options.length - 1;\n        var padBottom = !hasDropdownStatus && isLastItem;\n        return (React.createElement(Item, __assign({ key: globalIndex }, props, { virtualPosition: virtualItem && virtualItem.start, ref: virtualItem && virtualItem.measureRef, padBottom: padBottom })));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}