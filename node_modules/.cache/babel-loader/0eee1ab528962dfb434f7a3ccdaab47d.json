{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport OptionsList from '../internal/components/options-list';\nimport { scrollUntilVisible } from '../internal/utils/scrollable-containers';\nimport { getBaseProps } from '../internal/base-component';\nimport AutosuggestOption from './autosuggest-option';\nimport styles from './styles.css.js';\nexport var getOptionProps = function (index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus) {\n  var nativeAttributes = item === highlightedOption ? highlightedA11yProps : {};\n  var baseOptionProps = getBaseProps(nativeAttributes);\n  var isLastItem = index === filteredItems.length - 1;\n  var isNotEnteredTextItem = filteredItems.length > 1;\n  var padBottom = !hasDropdownStatus && isNotEnteredTextItem && isLastItem;\n  return __assign({\n    nativeAttributes: nativeAttributes,\n    padBottom: padBottom\n  }, baseOptionProps);\n};\n\nvar PlainList = function (_a, ref) {\n  var handleLoadMore = _a.handleLoadMore,\n      filteredItems = _a.filteredItems,\n      usingMouse = _a.usingMouse,\n      menuProps = _a.menuProps,\n      highlightedOption = _a.highlightedOption,\n      enteredTextLabel = _a.enteredTextLabel,\n      highlightedA11yProps = _a.highlightedA11yProps,\n      hasDropdownStatus = _a.hasDropdownStatus,\n      highlightText = _a.highlightText,\n      listBottom = _a.listBottom;\n  var listRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return function (index) {\n      var _a;\n\n      var item = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(\"[data-mouse-target=\\\"\" + index + \"\\\"]\");\n\n      if (!usingMouse.current && item) {\n        scrollUntilVisible(item);\n      }\n    };\n  }, [usingMouse, listRef]);\n  return React.createElement(OptionsList, __assign({}, menuProps, {\n    onLoadMore: handleLoadMore,\n    open: true,\n    ref: listRef,\n    nativeAttributes: {\n      unselectable: 'on'\n    }\n  }), filteredItems.map(function (item, index) {\n    var optionProps = getOptionProps(index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus);\n    return React.createElement(AutosuggestOption, __assign({\n      highlightText: highlightText,\n      option: item,\n      highlighted: item === highlightedOption,\n      key: index,\n      \"data-mouse-target\": index,\n      enteredTextLabel: enteredTextLabel\n    }, optionProps));\n  }), listBottom ? React.createElement(\"li\", {\n    className: styles['list-bottom']\n  }, listBottom) : null);\n};\n\nexport default forwardRef(PlainList);","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/autosuggest/plain-list.js"],"names":["__assign","React","forwardRef","useImperativeHandle","useRef","OptionsList","scrollUntilVisible","getBaseProps","AutosuggestOption","styles","getOptionProps","index","item","filteredItems","highlightedA11yProps","highlightedOption","hasDropdownStatus","nativeAttributes","baseOptionProps","isLastItem","length","isNotEnteredTextItem","padBottom","PlainList","_a","ref","handleLoadMore","usingMouse","menuProps","enteredTextLabel","highlightText","listBottom","listRef","current","querySelector","createElement","onLoadMore","open","unselectable","map","optionProps","option","highlighted","key","className"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport OptionsList from '../internal/components/options-list';\nimport { scrollUntilVisible } from '../internal/utils/scrollable-containers';\nimport { getBaseProps } from '../internal/base-component';\nimport AutosuggestOption from './autosuggest-option';\nimport styles from './styles.css.js';\nexport var getOptionProps = function (index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus) {\n    var nativeAttributes = item === highlightedOption ? highlightedA11yProps : {};\n    var baseOptionProps = getBaseProps(nativeAttributes);\n    var isLastItem = index === filteredItems.length - 1;\n    var isNotEnteredTextItem = filteredItems.length > 1;\n    var padBottom = !hasDropdownStatus && isNotEnteredTextItem && isLastItem;\n    return __assign({ nativeAttributes: nativeAttributes, padBottom: padBottom }, baseOptionProps);\n};\nvar PlainList = function (_a, ref) {\n    var handleLoadMore = _a.handleLoadMore, filteredItems = _a.filteredItems, usingMouse = _a.usingMouse, menuProps = _a.menuProps, highlightedOption = _a.highlightedOption, enteredTextLabel = _a.enteredTextLabel, highlightedA11yProps = _a.highlightedA11yProps, hasDropdownStatus = _a.hasDropdownStatus, highlightText = _a.highlightText, listBottom = _a.listBottom;\n    var listRef = useRef(null);\n    useImperativeHandle(ref, function () { return function (index) {\n        var _a;\n        var item = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(\"[data-mouse-target=\\\"\" + index + \"\\\"]\");\n        if (!usingMouse.current && item) {\n            scrollUntilVisible(item);\n        }\n    }; }, [usingMouse, listRef]);\n    return (React.createElement(OptionsList, __assign({}, menuProps, { onLoadMore: handleLoadMore, open: true, ref: listRef, nativeAttributes: { unselectable: 'on' } }),\n        filteredItems.map(function (item, index) {\n            var optionProps = getOptionProps(index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus);\n            return (React.createElement(AutosuggestOption, __assign({ highlightText: highlightText, option: item, highlighted: item === highlightedOption, key: index, \"data-mouse-target\": index, enteredTextLabel: enteredTextLabel }, optionProps)));\n        }),\n        listBottom ? React.createElement(\"li\", { className: styles['list-bottom'] }, listBottom) : null));\n};\nexport default forwardRef(PlainList);\n"]},"metadata":{},"sourceType":"module"}