{"ast":null,"code":"import React, { useCallback } from 'react';\nimport styles from './styles.css.js';\nimport InternalBox from '../../../box/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport InternalExpandableSection from '../../../expandable-section/internal';\n\nfunction getStatusIndicatorType(taskIndex, currentTaskIndex) {\n  if (taskIndex < currentTaskIndex) {\n    return 'success';\n  }\n\n  if (taskIndex === currentTaskIndex) {\n    return 'in-progress';\n  }\n\n  return 'pending';\n}\n\nexport function Task(_a) {\n  var task = _a.task,\n      taskIndex = _a.taskIndex,\n      currentTaskIndex = _a.currentTaskIndex,\n      expanded = _a.expanded,\n      onToggleExpand = _a.onToggleExpand,\n      i18nStrings = _a.i18nStrings;\n  var statusIndicatorType = getStatusIndicatorType(taskIndex, currentTaskIndex);\n  var onExpandChange = useCallback(function () {\n    onToggleExpand(taskIndex);\n  }, [onToggleExpand, taskIndex]);\n  return React.createElement(\"li\", {\n    className: styles.task\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xxs\"\n  }, React.createElement(\"div\", {\n    className: styles['task-title']\n  }, React.createElement(InternalStatusIndicator, {\n    __size: \"inherit\",\n    type: statusIndicatorType,\n    iconAriaLabel: i18nStrings.labelsTaskStatus[statusIndicatorType],\n    className: styles['task-title--status']\n  }), React.createElement(InternalBox, {\n    variant: \"h3\",\n    padding: {\n      left: 'xxxs',\n      vertical: 'n'\n    },\n    fontSize: \"heading-s\",\n    color: taskIndex < currentTaskIndex ? 'text-status-success' : 'text-status-inactive'\n  }, i18nStrings.taskTitle(taskIndex, task.title))), React.createElement(\"div\", {\n    className: styles['expandable-section-wrapper']\n  }, React.createElement(InternalExpandableSection, {\n    header: React.createElement(\"span\", {\n      className: styles['expandable-section-header']\n    }, i18nStrings.labelTotalSteps(task.steps.length)),\n    expanded: expanded,\n    onChange: onExpandChange\n  }, React.createElement(\"ol\", {\n    className: styles['step-list']\n  }, task.steps.map(function (step, stepIndex) {\n    return React.createElement(\"li\", {\n      key: stepIndex,\n      className: styles.step\n    }, React.createElement(InternalBox, {\n      color: \"text-body-secondary\",\n      fontSize: \"body-m\",\n      padding: {\n        left: 'l'\n      },\n      className: styles['step-title']\n    }, i18nStrings.stepTitle(stepIndex, step.title)));\n  }))))));\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/test-react-amplify/node_modules/@awsui/components-react/tutorial-panel/components/tutorial-detail-view/task.js"],"names":["React","useCallback","styles","InternalBox","InternalStatusIndicator","InternalSpaceBetween","InternalExpandableSection","getStatusIndicatorType","taskIndex","currentTaskIndex","Task","_a","task","expanded","onToggleExpand","i18nStrings","statusIndicatorType","onExpandChange","createElement","className","size","__size","type","iconAriaLabel","labelsTaskStatus","variant","padding","left","vertical","fontSize","color","taskTitle","title","header","labelTotalSteps","steps","length","onChange","map","step","stepIndex","key","stepTitle"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport styles from './styles.css.js';\nimport InternalBox from '../../../box/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport InternalExpandableSection from '../../../expandable-section/internal';\nfunction getStatusIndicatorType(taskIndex, currentTaskIndex) {\n    if (taskIndex < currentTaskIndex) {\n        return 'success';\n    }\n    if (taskIndex === currentTaskIndex) {\n        return 'in-progress';\n    }\n    return 'pending';\n}\nexport function Task(_a) {\n    var task = _a.task, taskIndex = _a.taskIndex, currentTaskIndex = _a.currentTaskIndex, expanded = _a.expanded, onToggleExpand = _a.onToggleExpand, i18nStrings = _a.i18nStrings;\n    var statusIndicatorType = getStatusIndicatorType(taskIndex, currentTaskIndex);\n    var onExpandChange = useCallback(function () {\n        onToggleExpand(taskIndex);\n    }, [onToggleExpand, taskIndex]);\n    return (React.createElement(\"li\", { className: styles.task },\n        React.createElement(InternalSpaceBetween, { size: \"xxs\" },\n            React.createElement(\"div\", { className: styles['task-title'] },\n                React.createElement(InternalStatusIndicator, { __size: \"inherit\", type: statusIndicatorType, iconAriaLabel: i18nStrings.labelsTaskStatus[statusIndicatorType], className: styles['task-title--status'] }),\n                React.createElement(InternalBox, { variant: \"h3\", padding: { left: 'xxxs', vertical: 'n' }, fontSize: \"heading-s\", color: taskIndex < currentTaskIndex ? 'text-status-success' : 'text-status-inactive' }, i18nStrings.taskTitle(taskIndex, task.title))),\n            React.createElement(\"div\", { className: styles['expandable-section-wrapper'] },\n                React.createElement(InternalExpandableSection, { header: React.createElement(\"span\", { className: styles['expandable-section-header'] }, i18nStrings.labelTotalSteps(task.steps.length)), expanded: expanded, onChange: onExpandChange },\n                    React.createElement(\"ol\", { className: styles['step-list'] }, task.steps.map(function (step, stepIndex) { return (React.createElement(\"li\", { key: stepIndex, className: styles.step },\n                        React.createElement(InternalBox, { color: \"text-body-secondary\", fontSize: \"body-m\", padding: { left: 'l' }, className: styles['step-title'] }, i18nStrings.stepTitle(stepIndex, step.title)))); })))))));\n}\n"]},"metadata":{},"sourceType":"module"}