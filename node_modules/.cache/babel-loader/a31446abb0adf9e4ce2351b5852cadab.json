{"ast":null,"code":"function makeSlotId(prop, formFieldId, propName) {\n  if (!prop) {\n    return undefined;\n  }\n\n  return formFieldId + \"-\" + propName;\n}\n\nexport function getSlotIds(formFieldId, label, description, constraintText, errorText) {\n  var ids = {\n    label: makeSlotId(label, formFieldId, 'label'),\n    description: makeSlotId(description, formFieldId, 'description'),\n    constraint: makeSlotId(constraintText, formFieldId, 'constraint'),\n    error: makeSlotId(errorText, formFieldId, 'error')\n  };\n  return ids;\n}\nexport function getAriaDescribedBy(_a) {\n  var error = _a.error,\n      description = _a.description,\n      constraint = _a.constraint;\n  var describedByAttributes = [error, description, constraint].filter(function (e) {\n    return !!e;\n  });\n  var describedBy = describedByAttributes.length ? describedByAttributes.join(' ') : undefined;\n  return describedBy;\n}\nexport function getGridDefinition(stretch, secondaryControlPresent, isRefresh) {\n  var columns;\n\n  if (stretch) {\n    columns = [{\n      colspan: 12\n    }, {\n      colspan: 12\n    }];\n  } else if (isRefresh) {\n    columns = [{\n      colspan: {\n        \"default\": 12,\n        xs: 8\n      }\n    }, {\n      colspan: {\n        \"default\": 12,\n        xs: 4\n      }\n    }];\n  } else {\n    columns = [{\n      colspan: {\n        \"default\": 12,\n        xs: 9\n      }\n    }, {\n      colspan: {\n        \"default\": 12,\n        xs: 3\n      }\n    }];\n  }\n\n  if (!secondaryControlPresent) {\n    return [columns[0]];\n  }\n\n  return columns;\n}\nexport var joinStrings = function () {\n  var strings = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    strings[_i] = arguments[_i];\n  }\n\n  return strings.filter(function (val) {\n    return val;\n  }).join(' ');\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/form-field/util.js"],"names":["makeSlotId","prop","formFieldId","propName","undefined","getSlotIds","label","description","constraintText","errorText","ids","constraint","error","getAriaDescribedBy","_a","describedByAttributes","filter","e","describedBy","length","join","getGridDefinition","stretch","secondaryControlPresent","isRefresh","columns","colspan","xs","joinStrings","strings","_i","arguments","val"],"mappings":"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","sourcesContent":["function makeSlotId(prop, formFieldId, propName) {\n    if (!prop) {\n        return undefined;\n    }\n    return formFieldId + \"-\" + propName;\n}\nexport function getSlotIds(formFieldId, label, description, constraintText, errorText) {\n    var ids = {\n        label: makeSlotId(label, formFieldId, 'label'),\n        description: makeSlotId(description, formFieldId, 'description'),\n        constraint: makeSlotId(constraintText, formFieldId, 'constraint'),\n        error: makeSlotId(errorText, formFieldId, 'error')\n    };\n    return ids;\n}\nexport function getAriaDescribedBy(_a) {\n    var error = _a.error, description = _a.description, constraint = _a.constraint;\n    var describedByAttributes = [error, description, constraint].filter(function (e) { return !!e; });\n    var describedBy = describedByAttributes.length ? describedByAttributes.join(' ') : undefined;\n    return describedBy;\n}\nexport function getGridDefinition(stretch, secondaryControlPresent, isRefresh) {\n    var columns;\n    if (stretch) {\n        columns = [{ colspan: 12 }, { colspan: 12 }];\n    }\n    else if (isRefresh) {\n        columns = [{ colspan: { \"default\": 12, xs: 8 } }, { colspan: { \"default\": 12, xs: 4 } }];\n    }\n    else {\n        columns = [{ colspan: { \"default\": 12, xs: 9 } }, { colspan: { \"default\": 12, xs: 3 } }];\n    }\n    if (!secondaryControlPresent) {\n        return [columns[0]];\n    }\n    return columns;\n}\nexport var joinStrings = function () {\n    var strings = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        strings[_i] = arguments[_i];\n    }\n    return strings.filter(function (val) { return val; }).join(' ');\n};\n"]},"metadata":{},"sourceType":"module"}