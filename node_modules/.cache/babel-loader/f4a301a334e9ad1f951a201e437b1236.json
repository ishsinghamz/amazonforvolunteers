{"ast":null,"code":"import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nexport default function Main() {\n  var _a;\n\n  var _b = useContext(AppLayoutContext),\n      breadcrumbs = _b.breadcrumbs,\n      content = _b.content,\n      contentHeader = _b.contentHeader,\n      contentType = _b.contentType,\n      disableContentPaddings = _b.disableContentPaddings,\n      hasNotificationsContent = _b.hasNotificationsContent,\n      isNavigationOpen = _b.isNavigationOpen,\n      isSplitPanelOpen = _b.isSplitPanelOpen,\n      isToolsOpen = _b.isToolsOpen,\n      isMobile = _b.isMobile,\n      isAnyPanelOpen = _b.isAnyPanelOpen,\n      mainElement = _b.mainElement;\n\n  var splitPanelPosition = useContext(SplitPanelContext).position;\n  var isUnfocusable = isMobile && isAnyPanelOpen;\n  return React.createElement(\"div\", {\n    className: clsx(styles.container, testutilStyles.content, (_a = {}, _a[styles.unfocusable] = isUnfocusable, _a)),\n    \"data-content-type\": contentType,\n    \"data-disable-content-paddings\": disableContentPaddings ? true : false,\n    \"data-has-breadcrumbs\": breadcrumbs ? true : false,\n    \"data-has-header\": contentHeader ? true : false,\n    \"data-has-notifications-content\": hasNotificationsContent ? true : false,\n    \"data-is-navigation-open\": isNavigationOpen ? true : false,\n    \"data-is-tools-open\": isToolsOpen ? true : false,\n    \"data-is-split-panel-open\": isSplitPanelOpen ? true : false,\n    \"data-split-panel-position\": splitPanelPosition !== null && splitPanelPosition !== void 0 ? splitPanelPosition : 'bottom',\n    ref: mainElement\n  }, content);\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/app-layout/visual-refresh/main.js"],"names":["React","useContext","clsx","AppLayoutContext","SplitPanelContext","styles","testutilStyles","Main","_a","_b","breadcrumbs","content","contentHeader","contentType","disableContentPaddings","hasNotificationsContent","isNavigationOpen","isSplitPanelOpen","isToolsOpen","isMobile","isAnyPanelOpen","mainElement","splitPanelPosition","position","isUnfocusable","createElement","className","container","unfocusable","ref"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,iBAAT,QAAkC,4CAAlC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,eAAe,SAASC,IAAT,GAAgB;AAC3B,MAAIC,EAAJ;;AACA,MAAIC,EAAE,GAAGR,UAAU,CAACE,gBAAD,CAAnB;AAAA,MAAuCO,WAAW,GAAGD,EAAE,CAACC,WAAxD;AAAA,MAAqEC,OAAO,GAAGF,EAAE,CAACE,OAAlF;AAAA,MAA2FC,aAAa,GAAGH,EAAE,CAACG,aAA9G;AAAA,MAA6HC,WAAW,GAAGJ,EAAE,CAACI,WAA9I;AAAA,MAA2JC,sBAAsB,GAAGL,EAAE,CAACK,sBAAvL;AAAA,MAA+MC,uBAAuB,GAAGN,EAAE,CAACM,uBAA5O;AAAA,MAAqQC,gBAAgB,GAAGP,EAAE,CAACO,gBAA3R;AAAA,MAA6SC,gBAAgB,GAAGR,EAAE,CAACQ,gBAAnU;AAAA,MAAqVC,WAAW,GAAGT,EAAE,CAACS,WAAtW;AAAA,MAAmXC,QAAQ,GAAGV,EAAE,CAACU,QAAjY;AAAA,MAA2YC,cAAc,GAAGX,EAAE,CAACW,cAA/Z;AAAA,MAA+aC,WAAW,GAAGZ,EAAE,CAACY,WAAhc;;AACA,MAAIC,kBAAkB,GAAGrB,UAAU,CAACG,iBAAD,CAAV,CAA8BmB,QAAvD;AACA,MAAIC,aAAa,GAAGL,QAAQ,IAAIC,cAAhC;AACA,SAAQpB,KAAK,CAACyB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAExB,IAAI,CAACG,MAAM,CAACsB,SAAR,EAAmBrB,cAAc,CAACK,OAAlC,GAA4CH,EAAE,GAAG,EAAL,EAASA,EAAE,CAACH,MAAM,CAACuB,WAAR,CAAF,GAAyBJ,aAAlC,EAAiDhB,EAA7F,EAAjB;AAAoH,yBAAqBK,WAAzI;AAAsJ,qCAAiCC,sBAAsB,GAAG,IAAH,GAAU,KAAvN;AAA8N,4BAAwBJ,WAAW,GAAG,IAAH,GAAU,KAA3Q;AAAkR,uBAAmBE,aAAa,GAAG,IAAH,GAAU,KAA5T;AAAmU,sCAAkCG,uBAAuB,GAAG,IAAH,GAAU,KAAtY;AAA6Y,+BAA2BC,gBAAgB,GAAG,IAAH,GAAU,KAAlc;AAAyc,0BAAsBE,WAAW,GAAG,IAAH,GAAU,KAApf;AAA2f,gCAA4BD,gBAAgB,GAAG,IAAH,GAAU,KAAjjB;AAAwjB,iCAA6BK,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+DA,kBAA/D,GAAoF,QAAzqB;AAAmrBO,IAAAA,GAAG,EAAER;AAAxrB,GAA3B,EAAkuBV,OAAluB,CAAR;AACH","sourcesContent":["import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-utils/styles.css.js';\nexport default function Main() {\n    var _a;\n    var _b = useContext(AppLayoutContext), breadcrumbs = _b.breadcrumbs, content = _b.content, contentHeader = _b.contentHeader, contentType = _b.contentType, disableContentPaddings = _b.disableContentPaddings, hasNotificationsContent = _b.hasNotificationsContent, isNavigationOpen = _b.isNavigationOpen, isSplitPanelOpen = _b.isSplitPanelOpen, isToolsOpen = _b.isToolsOpen, isMobile = _b.isMobile, isAnyPanelOpen = _b.isAnyPanelOpen, mainElement = _b.mainElement;\n    var splitPanelPosition = useContext(SplitPanelContext).position;\n    var isUnfocusable = isMobile && isAnyPanelOpen;\n    return (React.createElement(\"div\", { className: clsx(styles.container, testutilStyles.content, (_a = {}, _a[styles.unfocusable] = isUnfocusable, _a)), \"data-content-type\": contentType, \"data-disable-content-paddings\": disableContentPaddings ? true : false, \"data-has-breadcrumbs\": breadcrumbs ? true : false, \"data-has-header\": contentHeader ? true : false, \"data-has-notifications-content\": hasNotificationsContent ? true : false, \"data-is-navigation-open\": isNavigationOpen ? true : false, \"data-is-tools-open\": isToolsOpen ? true : false, \"data-is-split-panel-open\": isSplitPanelOpen ? true : false, \"data-split-panel-position\": splitPanelPosition !== null && splitPanelPosition !== void 0 ? splitPanelPosition : 'bottom', ref: mainElement }, content));\n}\n"]},"metadata":{},"sourceType":"module"}