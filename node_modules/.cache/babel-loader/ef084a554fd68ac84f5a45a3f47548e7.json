{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport InternalIcon from '../icon/internal';\nimport InternalSpinner from '../spinner/internal';\nimport styles from './styles.css.js';\n\nfunction getIconAlign(props) {\n  var standalone = props.variant === 'icon' || props.variant === 'inline-icon';\n  return standalone ? 'left' : props.iconAlign;\n}\n\nfunction IconWrapper(_a) {\n  var iconName = _a.iconName,\n      iconUrl = _a.iconUrl,\n      iconAlt = _a.iconAlt,\n      iconSvg = _a.iconSvg,\n      iconSize = _a.iconSize,\n      props = __rest(_a, [\"iconName\", \"iconUrl\", \"iconAlt\", \"iconSvg\", \"iconSize\"]);\n\n  if (!iconName && !iconUrl && !iconSvg) {\n    return null;\n  }\n\n  return React.createElement(InternalIcon, {\n    className: clsx(styles.icon, styles[\"icon-\" + getIconAlign(props)], props.iconClass),\n    name: iconName,\n    url: iconUrl,\n    svg: iconSvg,\n    alt: iconAlt,\n    size: iconSize\n  });\n}\n\nexport function LeftIcon(props) {\n  if (props.loading) {\n    return React.createElement(InternalSpinner, {\n      className: clsx(styles.icon, styles['icon-left'])\n    });\n  } else if (getIconAlign(props) === 'left') {\n    return React.createElement(IconWrapper, __assign({}, props));\n  }\n\n  return null;\n}\nexport function RightIcon(props) {\n  if (getIconAlign(props) === 'right') {\n    return React.createElement(IconWrapper, __assign({}, props));\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/button/icon-helper.js"],"names":["__assign","__rest","clsx","React","InternalIcon","InternalSpinner","styles","getIconAlign","props","standalone","variant","iconAlign","IconWrapper","_a","iconName","iconUrl","iconAlt","iconSvg","iconSize","createElement","className","icon","iconClass","name","url","svg","alt","size","LeftIcon","loading","RightIcon"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,MAAIC,UAAU,GAAGD,KAAK,CAACE,OAAN,KAAkB,MAAlB,IAA4BF,KAAK,CAACE,OAAN,KAAkB,aAA/D;AACA,SAAOD,UAAU,GAAG,MAAH,GAAYD,KAAK,CAACG,SAAnC;AACH;;AACD,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AACrB,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;AAAA,MAA4BC,OAAO,GAAGF,EAAE,CAACE,OAAzC;AAAA,MAAkDC,OAAO,GAAGH,EAAE,CAACG,OAA/D;AAAA,MAAwEC,OAAO,GAAGJ,EAAE,CAACI,OAArF;AAAA,MAA8FC,QAAQ,GAAGL,EAAE,CAACK,QAA5G;AAAA,MAAsHV,KAAK,GAAGP,MAAM,CAACY,EAAD,EAAK,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,EAAmC,SAAnC,EAA8C,UAA9C,CAAL,CAApI;;AACA,MAAI,CAACC,QAAD,IAAa,CAACC,OAAd,IAAyB,CAACE,OAA9B,EAAuC;AACnC,WAAO,IAAP;AACH;;AACD,SAAQd,KAAK,CAACgB,aAAN,CAAoBf,YAApB,EAAkC;AAAEgB,IAAAA,SAAS,EAAElB,IAAI,CAACI,MAAM,CAACe,IAAR,EAAcf,MAAM,CAAC,UAAUC,YAAY,CAACC,KAAD,CAAvB,CAApB,EAAqDA,KAAK,CAACc,SAA3D,CAAjB;AAAwFC,IAAAA,IAAI,EAAET,QAA9F;AAAwGU,IAAAA,GAAG,EAAET,OAA7G;AAAsHU,IAAAA,GAAG,EAAER,OAA3H;AAAoIS,IAAAA,GAAG,EAAEV,OAAzI;AAAkJW,IAAAA,IAAI,EAAET;AAAxJ,GAAlC,CAAR;AACH;;AACD,OAAO,SAASU,QAAT,CAAkBpB,KAAlB,EAAyB;AAC5B,MAAIA,KAAK,CAACqB,OAAV,EAAmB;AACf,WAAO1B,KAAK,CAACgB,aAAN,CAAoBd,eAApB,EAAqC;AAAEe,MAAAA,SAAS,EAAElB,IAAI,CAACI,MAAM,CAACe,IAAR,EAAcf,MAAM,CAAC,WAAD,CAApB;AAAjB,KAArC,CAAP;AACH,GAFD,MAGK,IAAIC,YAAY,CAACC,KAAD,CAAZ,KAAwB,MAA5B,EAAoC;AACrC,WAAOL,KAAK,CAACgB,aAAN,CAAoBP,WAApB,EAAiCZ,QAAQ,CAAC,EAAD,EAAKQ,KAAL,CAAzC,CAAP;AACH;;AACD,SAAO,IAAP;AACH;AACD,OAAO,SAASsB,SAAT,CAAmBtB,KAAnB,EAA0B;AAC7B,MAAID,YAAY,CAACC,KAAD,CAAZ,KAAwB,OAA5B,EAAqC;AACjC,WAAOL,KAAK,CAACgB,aAAN,CAAoBP,WAApB,EAAiCZ,QAAQ,CAAC,EAAD,EAAKQ,KAAL,CAAzC,CAAP;AACH;;AACD,SAAO,IAAP;AACH","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport InternalIcon from '../icon/internal';\nimport InternalSpinner from '../spinner/internal';\nimport styles from './styles.css.js';\nfunction getIconAlign(props) {\n    var standalone = props.variant === 'icon' || props.variant === 'inline-icon';\n    return standalone ? 'left' : props.iconAlign;\n}\nfunction IconWrapper(_a) {\n    var iconName = _a.iconName, iconUrl = _a.iconUrl, iconAlt = _a.iconAlt, iconSvg = _a.iconSvg, iconSize = _a.iconSize, props = __rest(_a, [\"iconName\", \"iconUrl\", \"iconAlt\", \"iconSvg\", \"iconSize\"]);\n    if (!iconName && !iconUrl && !iconSvg) {\n        return null;\n    }\n    return (React.createElement(InternalIcon, { className: clsx(styles.icon, styles[\"icon-\" + getIconAlign(props)], props.iconClass), name: iconName, url: iconUrl, svg: iconSvg, alt: iconAlt, size: iconSize }));\n}\nexport function LeftIcon(props) {\n    if (props.loading) {\n        return React.createElement(InternalSpinner, { className: clsx(styles.icon, styles['icon-left']) });\n    }\n    else if (getIconAlign(props) === 'left') {\n        return React.createElement(IconWrapper, __assign({}, props));\n    }\n    return null;\n}\nexport function RightIcon(props) {\n    if (getIconAlign(props) === 'right') {\n        return React.createElement(IconWrapper, __assign({}, props));\n    }\n    return null;\n}\n"]},"metadata":{},"sourceType":"module"}