{"ast":null,"code":"import React from 'react';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\nimport { getPropertyByKey } from './controller';\nimport FilteringToken from '../internal/components/filtering-token';\nexport var Token = function (_a) {\n  var token = _a.token,\n      _b = _a.operation,\n      operation = _b === void 0 ? 'and' : _b,\n      first = _a.first,\n      removeToken = _a.removeToken,\n      setToken = _a.setToken,\n      setOperation = _a.setOperation,\n      filteringOptions = _a.filteringOptions,\n      filteringProperties = _a.filteringProperties,\n      asyncProps = _a.asyncProps,\n      onLoadItems = _a.onLoadItems,\n      i18nStrings = _a.i18nStrings,\n      asyncProperties = _a.asyncProperties,\n      hideOperations = _a.hideOperations,\n      customGroupsText = _a.customGroupsText,\n      disabled = _a.disabled,\n      disableFreeTextFiltering = _a.disableFreeTextFiltering,\n      expandToViewport = _a.expandToViewport;\n  var property = token.propertyKey && getPropertyByKey(filteringProperties, token.propertyKey);\n  var propertyLabel = property && property.propertyLabel;\n  return React.createElement(FilteringToken, {\n    showOperation: !first && !hideOperations,\n    operation: operation,\n    andText: i18nStrings.operationAndText,\n    orText: i18nStrings.operationOrText,\n    dismissAriaLabel: i18nStrings.removeTokenButtonAriaLabel(token),\n    onChange: setOperation,\n    onDismiss: removeToken,\n    disabled: disabled\n  }, React.createElement(TokenEditor, {\n    setToken: setToken,\n    triggerComponent: React.createElement(\"span\", {\n      className: styles['token-trigger']\n    }, React.createElement(TokenTrigger, {\n      property: propertyLabel,\n      operator: token.operator,\n      value: token.value\n    })),\n    filteringOptions: filteringOptions,\n    filteringProperties: filteringProperties,\n    token: token,\n    asyncProps: asyncProps,\n    onLoadItems: onLoadItems,\n    i18nStrings: i18nStrings,\n    asyncProperties: asyncProperties,\n    customGroupsText: customGroupsText,\n    disableFreeTextFiltering: disableFreeTextFiltering,\n    expandToViewport: expandToViewport\n  }));\n};\n\nvar TokenTrigger = function (_a) {\n  var property = _a.property,\n      operator = _a.operator,\n      value = _a.value;\n\n  if (property) {\n    property += ' ';\n  }\n\n  var freeTextContainsToken = operator === ':' && !property;\n  var operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return React.createElement(React.Fragment, null, property, React.createElement(\"span\", {\n    className: styles['token-operator']\n  }, operatorText), value);\n};","map":{"version":3,"sources":["/Users/isingheg/Desktop/projects/amazonforvolunteers-ui/node_modules/@awsui/components-react/property-filter/token.js"],"names":["React","styles","TokenEditor","getPropertyByKey","FilteringToken","Token","_a","token","_b","operation","first","removeToken","setToken","setOperation","filteringOptions","filteringProperties","asyncProps","onLoadItems","i18nStrings","asyncProperties","hideOperations","customGroupsText","disabled","disableFreeTextFiltering","expandToViewport","property","propertyKey","propertyLabel","createElement","showOperation","andText","operationAndText","orText","operationOrText","dismissAriaLabel","removeTokenButtonAriaLabel","onChange","onDismiss","triggerComponent","className","TokenTrigger","operator","value","freeTextContainsToken","operatorText","Fragment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\nimport { getPropertyByKey } from './controller';\nimport FilteringToken from '../internal/components/filtering-token';\nexport var Token = function (_a) {\n    var token = _a.token, _b = _a.operation, operation = _b === void 0 ? 'and' : _b, first = _a.first, removeToken = _a.removeToken, setToken = _a.setToken, setOperation = _a.setOperation, filteringOptions = _a.filteringOptions, filteringProperties = _a.filteringProperties, asyncProps = _a.asyncProps, onLoadItems = _a.onLoadItems, i18nStrings = _a.i18nStrings, asyncProperties = _a.asyncProperties, hideOperations = _a.hideOperations, customGroupsText = _a.customGroupsText, disabled = _a.disabled, disableFreeTextFiltering = _a.disableFreeTextFiltering, expandToViewport = _a.expandToViewport;\n    var property = token.propertyKey && getPropertyByKey(filteringProperties, token.propertyKey);\n    var propertyLabel = property && property.propertyLabel;\n    return (React.createElement(FilteringToken, { showOperation: !first && !hideOperations, operation: operation, andText: i18nStrings.operationAndText, orText: i18nStrings.operationOrText, dismissAriaLabel: i18nStrings.removeTokenButtonAriaLabel(token), onChange: setOperation, onDismiss: removeToken, disabled: disabled },\n        React.createElement(TokenEditor, { setToken: setToken, triggerComponent: React.createElement(\"span\", { className: styles['token-trigger'] },\n                React.createElement(TokenTrigger, { property: propertyLabel, operator: token.operator, value: token.value })), filteringOptions: filteringOptions, filteringProperties: filteringProperties, token: token, asyncProps: asyncProps, onLoadItems: onLoadItems, i18nStrings: i18nStrings, asyncProperties: asyncProperties, customGroupsText: customGroupsText, disableFreeTextFiltering: disableFreeTextFiltering, expandToViewport: expandToViewport })));\n};\nvar TokenTrigger = function (_a) {\n    var property = _a.property, operator = _a.operator, value = _a.value;\n    if (property) {\n        property += ' ';\n    }\n    var freeTextContainsToken = operator === ':' && !property;\n    var operatorText = freeTextContainsToken ? '' : operator + ' ';\n    return (React.createElement(React.Fragment, null,\n        property,\n        React.createElement(\"span\", { className: styles['token-operator'] }, operatorText),\n        value));\n};\n"]},"metadata":{},"sourceType":"module"}